"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.account_reportPeer_ = exports.account_getWallPapers_ = exports.account_updateStatus_ = exports.account_updateProfile_ = exports.account_resetNotifySettings_ = exports.account_getNotifySettings_ = exports.account_updateNotifySettings_ = exports.account_unregisterDevice_ = exports.account_registerDevice_ = exports.auth_resetLoginEmail_ = exports.auth_requestFirebaseSms_ = exports.auth_importWebTokenAuthorization_ = exports.auth_checkRecoveryPassword_ = exports.auth_acceptLoginToken_ = exports.auth_importLoginToken_ = exports.auth_exportLoginToken_ = exports.auth_dropTempAuthKeys_ = exports.auth_cancelCode_ = exports.auth_resendCode_ = exports.auth_recoverPassword_ = exports.auth_requestPasswordRecovery_ = exports.auth_checkPassword_ = exports.auth_importBotAuthorization_ = exports.auth_bindTempAuthKey_ = exports.auth_importAuthorization_ = exports.auth_exportAuthorization_ = exports.auth_resetAuthorizations_ = exports.auth_logOut_ = exports.auth_signIn_ = exports.auth_signUp_ = exports.auth_sendCode_ = exports.invokeWithBusinessConnection_ = exports.invokeWithTakeout_ = exports.invokeWithMessagesRange_ = exports.invokeWithoutUpdates_ = exports.invokeWithLayer_ = exports.initConnection_ = exports.invokeAfterMsgs_ = exports.invokeAfterMsg_ = exports.invokeWithBusinessConnectionPrefix_ = exports.destroy_auth_key_ = exports.destroy_session_ = exports.ping_delay_disconnect_ = exports.ping_ = exports.get_future_salts_ = exports.rpc_drop_answer_ = exports.set_client_DH_params_ = exports.req_DH_params_ = exports.req_pq_multi_ = exports.Function_ = void 0;
exports.account_saveTheme_ = exports.account_updateTheme_ = exports.account_createTheme_ = exports.account_uploadTheme_ = exports.account_saveAutoDownloadSettings_ = exports.account_getAutoDownloadSettings_ = exports.account_resetWallPapers_ = exports.account_installWallPaper_ = exports.account_saveWallPaper_ = exports.account_uploadWallPaper_ = exports.account_getWallPaper_ = exports.account_getNotifyExceptions_ = exports.account_setContactSignUpNotification_ = exports.account_getContactSignUpNotification_ = exports.account_cancelPasswordEmail_ = exports.account_resendPasswordEmail_ = exports.account_confirmPasswordEmail_ = exports.account_finishTakeoutSession_ = exports.account_initTakeoutSession_ = exports.account_verifyEmail_ = exports.account_sendVerifyEmailCode_ = exports.account_verifyPhone_ = exports.account_sendVerifyPhoneCode_ = exports.account_acceptAuthorization_ = exports.account_getAuthorizationForm_ = exports.account_deleteSecureValue_ = exports.account_saveSecureValue_ = exports.account_getSecureValue_ = exports.account_getAllSecureValues_ = exports.account_resetWebAuthorizations_ = exports.account_resetWebAuthorization_ = exports.account_getWebAuthorizations_ = exports.account_getTmpPassword_ = exports.account_confirmPhone_ = exports.account_sendConfirmPhoneCode_ = exports.account_updatePasswordSettings_ = exports.account_getPasswordSettings_ = exports.account_getPassword_ = exports.account_resetAuthorization_ = exports.account_getAuthorizations_ = exports.account_updateDeviceLocked_ = exports.account_changePhone_ = exports.account_sendChangePhoneCode_ = exports.account_setAccountTTL_ = exports.account_getAccountTTL_ = exports.account_deleteAccount_ = exports.account_setPrivacy_ = exports.account_getPrivacy_ = exports.account_updateUsername_ = exports.account_checkUsername_ = void 0;
exports.account_updatePersonalChannel_ = exports.account_resolveBusinessChatLink_ = exports.account_getBusinessChatLinks_ = exports.account_deleteBusinessChatLink_ = exports.account_editBusinessChatLink_ = exports.account_createBusinessChatLink_ = exports.account_updateBirthday_ = exports.account_disablePeerConnectedBot_ = exports.account_toggleConnectedBotPaused_ = exports.account_updateBusinessIntro_ = exports.account_getBotBusinessConnection_ = exports.account_getConnectedBots_ = exports.account_updateConnectedBot_ = exports.account_updateBusinessAwayMessage_ = exports.account_updateBusinessGreetingMessage_ = exports.account_updateBusinessLocation_ = exports.account_updateBusinessWorkHours_ = exports.account_getChannelRestrictedStatusEmojis_ = exports.account_getChannelDefaultEmojiStatuses_ = exports.account_getDefaultBackgroundEmojis_ = exports.account_updateColor_ = exports.account_invalidateSignInCodes_ = exports.account_deleteAutoSaveExceptions_ = exports.account_saveAutoSaveSettings_ = exports.account_getAutoSaveSettings_ = exports.account_getDefaultGroupPhotoEmojis_ = exports.account_getDefaultProfilePhotoEmojis_ = exports.account_toggleUsername_ = exports.account_reorderUsernames_ = exports.account_clearRecentEmojiStatuses_ = exports.account_getRecentEmojiStatuses_ = exports.account_getDefaultEmojiStatuses_ = exports.account_updateEmojiStatus_ = exports.account_uploadRingtone_ = exports.account_saveRingtone_ = exports.account_getSavedRingtones_ = exports.account_changeAuthorizationSettings_ = exports.account_setAuthorizationTTL_ = exports.account_getChatThemes_ = exports.account_declinePasswordReset_ = exports.account_resetPassword_ = exports.account_reportProfilePhoto_ = exports.account_setGlobalPrivacySettings_ = exports.account_getGlobalPrivacySettings_ = exports.account_getMultiWallPapers_ = exports.account_getContentSettings_ = exports.account_setContentSettings_ = exports.account_getThemes_ = exports.account_getTheme_ = exports.account_installTheme_ = void 0;
exports.messages_addChatUser_ = exports.messages_editChatPhoto_ = exports.messages_editChatTitle_ = exports.messages_getFullChat_ = exports.messages_getChats_ = exports.messages_report_ = exports.messages_getPeerSettings_ = exports.messages_reportSpam_ = exports.messages_forwardMessages_ = exports.messages_sendMedia_ = exports.messages_sendMessage_ = exports.messages_setTyping_ = exports.messages_receivedMessages_ = exports.messages_deleteMessages_ = exports.messages_deleteHistory_ = exports.messages_readHistory_ = exports.messages_search_ = exports.messages_getHistory_ = exports.messages_getDialogs_ = exports.messages_getMessages_ = exports.contacts_getBirthdays_ = exports.contacts_setBlocked_ = exports.contacts_editCloseFriends_ = exports.contacts_importContactToken_ = exports.contacts_exportContactToken_ = exports.contacts_resolvePhone_ = exports.contacts_blockFromReplies_ = exports.contacts_getLocated_ = exports.contacts_acceptContact_ = exports.contacts_addContact_ = exports.contacts_toggleTopPeers_ = exports.contacts_getSaved_ = exports.contacts_resetSaved_ = exports.contacts_resetTopPeerRating_ = exports.contacts_getTopPeers_ = exports.contacts_resolveUsername_ = exports.contacts_search_ = exports.contacts_getBlocked_ = exports.contacts_unblock_ = exports.contacts_block_ = exports.contacts_deleteByPhones_ = exports.contacts_deleteContacts_ = exports.contacts_importContacts_ = exports.contacts_getContacts_ = exports.contacts_getStatuses_ = exports.contacts_getContactIDs_ = exports.users_getIsPremiumRequiredToContact_ = exports.users_setSecureValueErrors_ = exports.users_getFullUser_ = exports.users_getUsers_ = void 0;
exports.messages_getMaskStickers_ = exports.messages_getArchivedStickers_ = exports.messages_clearRecentStickers_ = exports.messages_saveRecentSticker_ = exports.messages_getRecentStickers_ = exports.messages_readFeaturedStickers_ = exports.messages_getFeaturedStickers_ = exports.messages_getAllDrafts_ = exports.messages_saveDraft_ = exports.messages_getPeerDialogs_ = exports.messages_setBotCallbackAnswer_ = exports.messages_getBotCallbackAnswer_ = exports.messages_editInlineBotMessage_ = exports.messages_editMessage_ = exports.messages_getMessageEditData_ = exports.messages_sendInlineBotResult_ = exports.messages_setInlineBotResults_ = exports.messages_getInlineBotResults_ = exports.messages_saveGif_ = exports.messages_getSavedGifs_ = exports.messages_getDocumentByHash_ = exports.messages_reorderStickerSets_ = exports.messages_searchGlobal_ = exports.messages_migrateChat_ = exports.messages_editChatAdmin_ = exports.messages_getMessagesViews_ = exports.messages_startBot_ = exports.messages_uninstallStickerSet_ = exports.messages_installStickerSet_ = exports.messages_getStickerSet_ = exports.messages_importChatInvite_ = exports.messages_checkChatInvite_ = exports.messages_exportChatInvite_ = exports.messages_getWebPagePreview_ = exports.messages_getAllStickers_ = exports.messages_getStickers_ = exports.messages_readMessageContents_ = exports.messages_reportEncryptedSpam_ = exports.messages_receivedQueue_ = exports.messages_sendEncryptedService_ = exports.messages_sendEncryptedFile_ = exports.messages_sendEncrypted_ = exports.messages_readEncryptedHistory_ = exports.messages_setEncryptedTyping_ = exports.messages_discardEncryption_ = exports.messages_acceptEncryption_ = exports.messages_requestEncryption_ = exports.messages_getDhConfig_ = exports.messages_createChat_ = exports.messages_deleteChatUser_ = void 0;
exports.messages_updateDialogFiltersOrder_ = exports.messages_updateDialogFilter_ = exports.messages_getSuggestedDialogFilters_ = exports.messages_getDialogFilters_ = exports.messages_toggleStickerSets_ = exports.messages_getPollVotes_ = exports.messages_deleteScheduledMessages_ = exports.messages_sendScheduledMessages_ = exports.messages_getScheduledMessages_ = exports.messages_getScheduledHistory_ = exports.messages_hidePeerSettingsBar_ = exports.messages_acceptUrlAuth_ = exports.messages_requestUrlAuth_ = exports.messages_getSearchCounters_ = exports.messages_getEmojiURL_ = exports.messages_getEmojiKeywordsLanguages_ = exports.messages_getEmojiKeywordsDifference_ = exports.messages_getEmojiKeywords_ = exports.messages_editChatDefaultBannedRights_ = exports.messages_editChatAbout_ = exports.messages_getOnlines_ = exports.messages_getPollResults_ = exports.messages_sendVote_ = exports.messages_updatePinnedMessage_ = exports.messages_clearAllDrafts_ = exports.messages_getDialogUnreadMarks_ = exports.messages_markDialogUnread_ = exports.messages_getSplitRanges_ = exports.messages_searchStickerSets_ = exports.messages_uploadEncryptedFile_ = exports.messages_sendMultiMedia_ = exports.messages_getRecentLocations_ = exports.messages_readMentions_ = exports.messages_getUnreadMentions_ = exports.messages_faveSticker_ = exports.messages_getFavedStickers_ = exports.messages_sendScreenshotNotification_ = exports.messages_uploadMedia_ = exports.messages_setBotPrecheckoutResults_ = exports.messages_setBotShippingResults_ = exports.messages_getPinnedDialogs_ = exports.messages_reorderPinnedDialogs_ = exports.messages_toggleDialogPin_ = exports.messages_getWebPage_ = exports.messages_getCommonChats_ = exports.messages_getInlineGameHighScores_ = exports.messages_getGameHighScores_ = exports.messages_setInlineGameScore_ = exports.messages_setGameScore_ = exports.messages_getAttachedStickers_ = void 0;
exports.messages_getEmojiStickers_ = exports.messages_getCustomEmojiDocuments_ = exports.messages_rateTranscribedAudio_ = exports.messages_transcribeAudio_ = exports.messages_sendWebViewData_ = exports.messages_sendWebViewResultMessage_ = exports.messages_requestSimpleWebView_ = exports.messages_prolongWebView_ = exports.messages_requestWebView_ = exports.messages_toggleBotInAttachMenu_ = exports.messages_getAttachMenuBot_ = exports.messages_getAttachMenuBots_ = exports.messages_searchSentMedia_ = exports.messages_readReactions_ = exports.messages_getUnreadReactions_ = exports.messages_translateText_ = exports.messages_setDefaultReaction_ = exports.messages_getAvailableReactions_ = exports.messages_setChatAvailableReactions_ = exports.messages_getMessageReactionsList_ = exports.messages_getMessagesReactions_ = exports.messages_sendReaction_ = exports.messages_saveDefaultSendAs_ = exports.messages_toggleNoForwards_ = exports.messages_hideAllChatJoinRequests_ = exports.messages_hideChatJoinRequest_ = exports.messages_getSearchResultsPositions_ = exports.messages_getSearchResultsCalendar_ = exports.messages_getMessageReadParticipants_ = exports.messages_setChatTheme_ = exports.messages_checkHistoryImportPeer_ = exports.messages_setHistoryTTL_ = exports.messages_getChatInviteImporters_ = exports.messages_getAdminsWithInvites_ = exports.messages_deleteExportedChatInvite_ = exports.messages_deleteRevokedExportedChatInvites_ = exports.messages_editExportedChatInvite_ = exports.messages_getExportedChatInvite_ = exports.messages_getExportedChatInvites_ = exports.messages_startHistoryImport_ = exports.messages_uploadImportedMedia_ = exports.messages_initHistoryImport_ = exports.messages_checkHistoryImport_ = exports.messages_deletePhoneCallHistory_ = exports.messages_deleteChat_ = exports.messages_unpinAllMessages_ = exports.messages_readDiscussion_ = exports.messages_getDiscussionMessage_ = exports.messages_getReplies_ = exports.messages_getOldFeaturedStickers_ = void 0;
exports.upload_getWebFile_ = exports.upload_saveBigFilePart_ = exports.upload_getFile_ = exports.upload_saveFilePart_ = exports.photos_uploadContactProfilePhoto_ = exports.photos_getUserPhotos_ = exports.photos_deletePhotos_ = exports.photos_uploadProfilePhoto_ = exports.photos_updateProfilePhoto_ = exports.updates_getChannelDifference_ = exports.updates_getDifference_ = exports.updates_getState_ = exports.messages_getMyStickers_ = exports.messages_toggleDialogFilterTags_ = exports.messages_deleteQuickReplyMessages_ = exports.messages_sendQuickReplyMessages_ = exports.messages_getQuickReplyMessages_ = exports.messages_deleteQuickReplyShortcut_ = exports.messages_editQuickReplyShortcut_ = exports.messages_checkQuickReplyShortcut_ = exports.messages_reorderQuickReplies_ = exports.messages_getQuickReplies_ = exports.messages_getOutboxReadDate_ = exports.messages_getDefaultTagReactions_ = exports.messages_updateSavedReactionTag_ = exports.messages_getSavedReactionTags_ = exports.messages_reorderPinnedSavedDialogs_ = exports.messages_toggleSavedDialogPin_ = exports.messages_getPinnedSavedDialogs_ = exports.messages_deleteSavedHistory_ = exports.messages_getSavedHistory_ = exports.messages_getSavedDialogs_ = exports.messages_searchEmojiStickerSets_ = exports.messages_setChatWallPaper_ = exports.messages_requestAppWebView_ = exports.messages_getBotApp_ = exports.messages_togglePeerTranslations_ = exports.messages_searchCustomEmoji_ = exports.messages_getEmojiProfilePhotoGroups_ = exports.messages_getEmojiStatusGroups_ = exports.messages_getEmojiGroups_ = exports.messages_sendBotRequestedPeer_ = exports.messages_getDefaultHistoryTTL_ = exports.messages_setDefaultHistoryTTL_ = exports.messages_getExtendedMedia_ = exports.messages_clearRecentReactions_ = exports.messages_getRecentReactions_ = exports.messages_getTopReactions_ = exports.messages_reportReaction_ = exports.messages_getFeaturedEmojiStickers_ = void 0;
exports.channels_getAdminedPublicChannels_ = exports.channels_toggleSignatures_ = exports.channels_exportMessageLink_ = exports.channels_deleteChannel_ = exports.channels_inviteToChannel_ = exports.channels_leaveChannel_ = exports.channels_joinChannel_ = exports.channels_updateUsername_ = exports.channels_checkUsername_ = exports.channels_editPhoto_ = exports.channels_editTitle_ = exports.channels_editAdmin_ = exports.channels_createChannel_ = exports.channels_getFullChannel_ = exports.channels_getChannels_ = exports.channels_getParticipant_ = exports.channels_getParticipants_ = exports.channels_getMessages_ = exports.channels_reportSpam_ = exports.channels_deleteMessages_ = exports.channels_readHistory_ = exports.help_getTimezonesList_ = exports.help_getPeerProfileColors_ = exports.help_getPeerColors_ = exports.help_getPremiumPromo_ = exports.help_getCountriesList_ = exports.help_dismissSuggestion_ = exports.help_hidePromoData_ = exports.help_getPromoData_ = exports.help_editUserInfo_ = exports.help_getUserInfo_ = exports.help_getSupportName_ = exports.help_getPassportConfig_ = exports.help_saveAppLog_ = exports.help_getAppConfig_ = exports.help_getDeepLinkInfo_ = exports.help_acceptTermsOfService_ = exports.help_getTermsOfServiceUpdate_ = exports.help_getRecentMeUrls_ = exports.help_getCdnConfig_ = exports.help_setBotUpdatesStatus_ = exports.help_getSupport_ = exports.help_getInviteText_ = exports.help_getAppUpdate_ = exports.help_getNearestDc_ = exports.help_getConfig_ = exports.upload_getFileHashes_ = exports.upload_getCdnFileHashes_ = exports.upload_reuploadCdnFile_ = exports.upload_getCdnFile_ = void 0;
exports.bots_getBotMenuButton_ = exports.bots_setBotMenuButton_ = exports.bots_getBotCommands_ = exports.bots_resetBotCommands_ = exports.bots_setBotCommands_ = exports.bots_answerWebhookJSONQuery_ = exports.bots_sendCustomRequest_ = exports.channels_restrictSponsoredMessages_ = exports.channels_reportSponsoredMessage_ = exports.channels_setEmojiStickers_ = exports.channels_setBoostsToUnblockRestrictions_ = exports.channels_updateEmojiStatus_ = exports.channels_getChannelRecommendations_ = exports.channels_toggleViewForumAsMessages_ = exports.channels_updateColor_ = exports.channels_clickSponsoredMessage_ = exports.channels_toggleParticipantsHidden_ = exports.channels_reportAntiSpamFalsePositive_ = exports.channels_toggleAntiSpam_ = exports.channels_reorderPinnedForumTopics_ = exports.channels_deleteTopicHistory_ = exports.channels_updatePinnedForumTopic_ = exports.channels_editForumTopic_ = exports.channels_getForumTopicsByID_ = exports.channels_getForumTopics_ = exports.channels_createForumTopic_ = exports.channels_toggleForum_ = exports.channels_deactivateAllUsernames_ = exports.channels_toggleUsername_ = exports.channels_reorderUsernames_ = exports.channels_toggleJoinRequest_ = exports.channels_toggleJoinToSend_ = exports.channels_deleteParticipantHistory_ = exports.channels_getSendAs_ = exports.channels_getSponsoredMessages_ = exports.channels_viewSponsoredMessage_ = exports.channels_convertToGigagroup_ = exports.channels_getInactiveChannels_ = exports.channels_toggleSlowMode_ = exports.channels_editLocation_ = exports.channels_editCreator_ = exports.channels_setDiscussionGroup_ = exports.channels_getGroupsForDiscussion_ = exports.channels_getLeftChannels_ = exports.channels_togglePreHistoryHidden_ = exports.channels_deleteHistory_ = exports.channels_readMessageContents_ = exports.channels_setStickers_ = exports.channels_getAdminLog_ = exports.channels_editBanned_ = void 0;
exports.phone_discardGroupCall_ = exports.phone_inviteToGroupCall_ = exports.phone_leaveGroupCall_ = exports.phone_joinGroupCall_ = exports.phone_createGroupCall_ = exports.phone_sendSignalingData_ = exports.phone_saveCallDebug_ = exports.phone_setCallRating_ = exports.phone_discardCall_ = exports.phone_receivedCall_ = exports.phone_confirmCall_ = exports.phone_acceptCall_ = exports.phone_requestCall_ = exports.phone_getCallConfig_ = exports.stickers_replaceSticker_ = exports.stickers_deleteStickerSet_ = exports.stickers_renameStickerSet_ = exports.stickers_changeSticker_ = exports.stickers_suggestShortName_ = exports.stickers_checkShortName_ = exports.stickers_setStickerSetThumb_ = exports.stickers_addStickerToSet_ = exports.stickers_changeStickerPosition_ = exports.stickers_removeStickerFromSet_ = exports.stickers_createStickerSet_ = exports.payments_launchPrepaidGiveaway_ = exports.payments_getGiveawayInfo_ = exports.payments_applyGiftCode_ = exports.payments_checkGiftCode_ = exports.payments_getPremiumGiftCodeOptions_ = exports.payments_canPurchasePremium_ = exports.payments_assignPlayMarketTransaction_ = exports.payments_assignAppStoreTransaction_ = exports.payments_exportInvoice_ = exports.payments_getBankCardData_ = exports.payments_clearSavedInfo_ = exports.payments_getSavedInfo_ = exports.payments_sendPaymentForm_ = exports.payments_validateRequestedInfo_ = exports.payments_getPaymentReceipt_ = exports.payments_getPaymentForm_ = exports.bots_invokeWebViewCustomMethod_ = exports.bots_allowSendMessage_ = exports.bots_canSendMessage_ = exports.bots_toggleUsername_ = exports.bots_reorderUsernames_ = exports.bots_getBotInfo_ = exports.bots_setBotInfo_ = exports.bots_setBotGroupDefaultAdminRights_ = exports.bots_setBotBroadcastDefaultAdminRights_ = void 0;
exports.stories_getAllStories_ = exports.stories_togglePinned_ = exports.stories_deleteStories_ = exports.stories_editStory_ = exports.stories_sendStory_ = exports.stories_canSendStory_ = exports.chatlists_leaveChatlist_ = exports.chatlists_getLeaveChatlistSuggestions_ = exports.chatlists_hideChatlistUpdates_ = exports.chatlists_joinChatlistUpdates_ = exports.chatlists_getChatlistUpdates_ = exports.chatlists_joinChatlistInvite_ = exports.chatlists_checkChatlistInvite_ = exports.chatlists_getExportedInvites_ = exports.chatlists_editExportedInvite_ = exports.chatlists_deleteExportedInvite_ = exports.chatlists_exportChatlistInvite_ = exports.stats_getBroadcastRevenueTransactions_ = exports.stats_getBroadcastRevenueWithdrawalUrl_ = exports.stats_getBroadcastRevenueStats_ = exports.stats_getStoryPublicForwards_ = exports.stats_getStoryStats_ = exports.stats_getMessageStats_ = exports.stats_getMessagePublicForwards_ = exports.stats_getMegagroupStats_ = exports.stats_loadAsyncGraph_ = exports.stats_getBroadcastStats_ = exports.folders_editPeerFolders_ = exports.langpack_getLanguage_ = exports.langpack_getLanguages_ = exports.langpack_getDifference_ = exports.langpack_getStrings_ = exports.langpack_getLangPack_ = exports.phone_saveCallLog_ = exports.phone_getGroupCallStreamRtmpUrl_ = exports.phone_getGroupCallStreamChannels_ = exports.phone_leaveGroupCallPresentation_ = exports.phone_joinGroupCallPresentation_ = exports.phone_saveDefaultGroupCallJoinAs_ = exports.phone_startScheduledGroupCall_ = exports.phone_toggleGroupCallStartSubscription_ = exports.phone_exportGroupCallInvite_ = exports.phone_getGroupCallJoinAs_ = exports.phone_editGroupCallTitle_ = exports.phone_editGroupCallParticipant_ = exports.phone_toggleGroupCallRecord_ = exports.phone_checkGroupCall_ = exports.phone_getGroupParticipants_ = exports.phone_getGroupCall_ = exports.phone_toggleGroupCallSettings_ = void 0;
exports.functions = exports.fragment_getCollectibleInfo_ = exports.smsjobs_finishJob_ = exports.smsjobs_getSmsJob_ = exports.smsjobs_getStatus_ = exports.smsjobs_updateSettings_ = exports.smsjobs_leave_ = exports.smsjobs_join_ = exports.smsjobs_isEligibleToJoin_ = exports.premium_getUserBoosts_ = exports.premium_getBoostsStatus_ = exports.premium_applyBoost_ = exports.premium_getMyBoosts_ = exports.premium_getBoostsList_ = exports.stories_getStoryReactionsList_ = exports.stories_togglePeerStoriesHidden_ = exports.stories_getChatsToSend_ = exports.stories_getPeerMaxIDs_ = exports.stories_getAllReadPeerStories_ = exports.stories_getPeerStories_ = exports.stories_sendReaction_ = exports.stories_activateStealthMode_ = exports.stories_report_ = exports.stories_exportStoryLink_ = exports.stories_getStoriesViews_ = exports.stories_getStoryViewsList_ = exports.stories_incrementStoryViews_ = exports.stories_readStories_ = exports.stories_toggleAllStoriesHidden_ = exports.stories_getStoriesByID_ = exports.stories_getStoriesArchive_ = exports.stories_getPinnedStories_ = void 0;
// deno-fmt-ignore-file
const _1_tl_object_js_1 = require("./1_tl_object.js");
const _2_types_js_1 = require("./2_types.js");
class Function_ extends _1_tl_object_js_1.TLObject {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "__R", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        }); // virtual member
    }
}
exports.Function_ = Function_;
class req_pq_multi_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBE7E8EF1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "req_pq_multi";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["nonce", "bigint", "int128"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.nonce, "bigint", "int128"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.nonce = params.nonce;
    }
}
exports.req_pq_multi_ = req_pq_multi_;
Object.defineProperty(req_pq_multi_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class req_DH_params_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD712E4BE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "req_DH_params";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["nonce", "bigint", "int128"],
            ["server_nonce", "bigint", "int128"],
            ["p", Uint8Array, "bytes"],
            ["q", Uint8Array, "bytes"],
            ["public_key_fingerprint", "bigint", "long"],
            ["encrypted_data", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.nonce, "bigint", "int128"],
            [this.server_nonce, "bigint", "int128"],
            [this.p, Uint8Array, "bytes"],
            [this.q, Uint8Array, "bytes"],
            [this.public_key_fingerprint, "bigint", "long"],
            [this.encrypted_data, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "server_nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "p", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "public_key_fingerprint", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "encrypted_data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.nonce = params.nonce;
        this.server_nonce = params.server_nonce;
        this.p = params.p;
        this.q = params.q;
        this.public_key_fingerprint = params.public_key_fingerprint;
        this.encrypted_data = params.encrypted_data;
    }
}
exports.req_DH_params_ = req_DH_params_;
Object.defineProperty(req_DH_params_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class set_client_DH_params_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF5045F1F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "set_client_DH_params";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["nonce", "bigint", "int128"],
            ["server_nonce", "bigint", "int128"],
            ["encrypted_data", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.nonce, "bigint", "int128"],
            [this.server_nonce, "bigint", "int128"],
            [this.encrypted_data, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "server_nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "encrypted_data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.nonce = params.nonce;
        this.server_nonce = params.server_nonce;
        this.encrypted_data = params.encrypted_data;
    }
}
exports.set_client_DH_params_ = set_client_DH_params_;
Object.defineProperty(set_client_DH_params_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class rpc_drop_answer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x58E4A740;
    }
    static get [_1_tl_object_js_1.name]() {
        return "rpc_drop_answer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["req_msg_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.req_msg_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "req_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.req_msg_id = params.req_msg_id;
    }
}
exports.rpc_drop_answer_ = rpc_drop_answer_;
Object.defineProperty(rpc_drop_answer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class get_future_salts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB921BD04;
    }
    static get [_1_tl_object_js_1.name]() {
        return "get_future_salts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["num", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.num, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "num", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.num = params.num;
    }
}
exports.get_future_salts_ = get_future_salts_;
Object.defineProperty(get_future_salts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class ping_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7ABE77EC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "ping";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["ping_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.ping_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "ping_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.ping_id = params.ping_id;
    }
}
exports.ping_ = ping_;
Object.defineProperty(ping_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class ping_delay_disconnect_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF3427B8C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "ping_delay_disconnect";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["ping_id", "bigint", "long"],
            ["disconnect_delay", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.ping_id, "bigint", "long"],
            [this.disconnect_delay, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "ping_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "disconnect_delay", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.ping_id = params.ping_id;
        this.disconnect_delay = params.disconnect_delay;
    }
}
exports.ping_delay_disconnect_ = ping_delay_disconnect_;
Object.defineProperty(ping_delay_disconnect_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class destroy_session_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE7512126;
    }
    static get [_1_tl_object_js_1.name]() {
        return "destroy_session";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["session_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.session_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "session_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.session_id = params.session_id;
    }
}
exports.destroy_session_ = destroy_session_;
Object.defineProperty(destroy_session_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class destroy_auth_key_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD1435160;
    }
    static get [_1_tl_object_js_1.name]() {
        return "destroy_auth_key";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.destroy_auth_key_ = destroy_auth_key_;
Object.defineProperty(destroy_auth_key_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class invokeWithBusinessConnectionPrefix_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDD289F8E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeWithBusinessConnectionPrefix";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["connection_id", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.connection_id, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "connection_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.connection_id = params.connection_id;
    }
}
exports.invokeWithBusinessConnectionPrefix_ = invokeWithBusinessConnectionPrefix_;
Object.defineProperty(invokeWithBusinessConnectionPrefix_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invokes a query after successful completion of one of the previous queries. */
class invokeAfterMsg_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCB9F372D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeAfterMsg";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["msg_id", "bigint", "long"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.msg_id, "bigint", "long"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** Message identifier on which a current query depends */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The query itself */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.msg_id = params.msg_id;
        this.query = params.query;
    }
}
exports.invokeAfterMsg_ = invokeAfterMsg_;
Object.defineProperty(invokeAfterMsg_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invokes a query after a successful completion of previous queries */
class invokeAfterMsgs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3DC4B4F0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeAfterMsgs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["msg_ids", ["bigint"], "Vector<long>"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.msg_ids, ["bigint"], "Vector<long>"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** List of messages on which a current query depends */
        Object.defineProperty(this, "msg_ids", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The query itself */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.msg_ids = params.msg_ids;
        this.query = params.query;
    }
}
exports.invokeAfterMsgs_ = invokeAfterMsgs_;
Object.defineProperty(invokeAfterMsgs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Initialize connection */
class initConnection_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC1CD5EA9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "initConnection";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["api_id", "number", "int"],
            ["device_model", "string", "string"],
            ["system_version", "string", "string"],
            ["app_version", "string", "string"],
            ["system_lang_code", "string", "string"],
            ["lang_pack", "string", "string"],
            ["lang_code", "string", "string"],
            ["proxy", _2_types_js_1.types._InputClientProxy, "flags.0?InputClientProxy"],
            ["params", _2_types_js_1.types._JSONValue, "flags.1?JSONValue"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.api_id, "number", "int"],
            [this.device_model, "string", "string"],
            [this.system_version, "string", "string"],
            [this.app_version, "string", "string"],
            [this.system_lang_code, "string", "string"],
            [this.lang_pack, "string", "string"],
            [this.lang_code, "string", "string"],
            [this.proxy ?? null, _2_types_js_1.types._InputClientProxy, "flags.0?InputClientProxy"],
            [this.params ?? null, _2_types_js_1.types._JSONValue, "flags.1?JSONValue"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** Application identifier (see. [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Device model */
        Object.defineProperty(this, "device_model", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Operation system version */
        Object.defineProperty(this, "system_version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Application version */
        Object.defineProperty(this, "app_version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Code for the language used on the device's OS, ISO 639-1 standard */
        Object.defineProperty(this, "system_lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language pack to use */
        Object.defineProperty(this, "lang_pack", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Code for the language used on the client, ISO 639-1 standard */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Info about an MTProto proxy */
        Object.defineProperty(this, "proxy", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Additional initConnection parameters.
        For now, only the `tz_offset` field is supported, for specifying timezone offset in seconds. */
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The query itself */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.api_id = params.api_id;
        this.device_model = params.device_model;
        this.system_version = params.system_version;
        this.app_version = params.app_version;
        this.system_lang_code = params.system_lang_code;
        this.lang_pack = params.lang_pack;
        this.lang_code = params.lang_code;
        this.proxy = params.proxy;
        this.params = params.params;
        this.query = params.query;
    }
}
exports.initConnection_ = initConnection_;
Object.defineProperty(initConnection_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invoke the specified query using the specified API [layer](https://core.telegram.org/api/invoking#layers) */
class invokeWithLayer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDA9B0D0D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeWithLayer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["layer", "number", "int"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.layer, "number", "int"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** The layer to use */
        Object.defineProperty(this, "layer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The query */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.layer = params.layer;
        this.query = params.query;
    }
}
exports.invokeWithLayer_ = invokeWithLayer_;
Object.defineProperty(invokeWithLayer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invoke a request without subscribing the used connection for [updates](https://core.telegram.org/api/updates) (this is enabled by default for [file queries](https://core.telegram.org/api/files)). */
class invokeWithoutUpdates_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBF9459B7;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeWithoutUpdates";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** The query */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.query = params.query;
    }
}
exports.invokeWithoutUpdates_ = invokeWithoutUpdates_;
Object.defineProperty(invokeWithoutUpdates_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invoke with the given message range */
class invokeWithMessagesRange_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x365275F2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeWithMessagesRange";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["range", _2_types_js_1.types._MessageRange, "MessageRange"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.range, _2_types_js_1.types._MessageRange, "MessageRange"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** Message range */
        Object.defineProperty(this, "range", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.range = params.range;
        this.query = params.query;
    }
}
exports.invokeWithMessagesRange_ = invokeWithMessagesRange_;
Object.defineProperty(invokeWithMessagesRange_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invoke a method within a [takeout session, see here » for more info](https://core.telegram.org/api/takeout). */
class invokeWithTakeout_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xACA9FD2E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeWithTakeout";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["takeout_id", "bigint", "long"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.takeout_id, "bigint", "long"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        /** [Takeout session ID »](https://core.telegram.org/api/takeout) */
        Object.defineProperty(this, "takeout_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.takeout_id = params.takeout_id;
        this.query = params.query;
    }
}
exports.invokeWithTakeout_ = invokeWithTakeout_;
Object.defineProperty(invokeWithTakeout_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class invokeWithBusinessConnection_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDD289F8E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "invokeWithBusinessConnection";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["connection_id", "string", "string"],
            ["query", _2_types_js_1.types["TypeX"], "!X"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.connection_id, "string", "string"],
            [this.query, _2_types_js_1.types.TypeX, "!X"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "connection_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.connection_id = params.connection_id;
        this.query = params.query;
    }
}
exports.invokeWithBusinessConnection_ = invokeWithBusinessConnection_;
Object.defineProperty(invokeWithBusinessConnection_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send the verification code for login */
class auth_sendCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA677244F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.sendCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["api_id", "number", "int"],
            ["api_hash", "string", "string"],
            ["settings", _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.api_id, "number", "int"],
            [this.api_hash, "string", "string"],
            [this.settings, _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number in international format */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Application identifier (see [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Application secret hash (see [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Settings for the code type to send */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.api_id = params.api_id;
        this.api_hash = params.api_hash;
        this.settings = params.settings;
    }
}
exports.auth_sendCode_ = auth_sendCode_;
Object.defineProperty(auth_sendCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Registers a validated phone number in the system. */
class auth_signUp_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAAC7B717;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.signUp";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["no_joined_notifications", "true", "flags.0?true"],
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
            ["first_name", "string", "string"],
            ["last_name", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.no_joined_notifications ?? null, "true", "flags.0?true"],
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
            [this.first_name, "string", "string"],
            [this.last_name, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "no_joined_notifications", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone number in the international format */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** SMS-message ID */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New user first name */
        Object.defineProperty(this, "first_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New user last name */
        Object.defineProperty(this, "last_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.no_joined_notifications = params.no_joined_notifications;
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
        this.first_name = params.first_name;
        this.last_name = params.last_name;
    }
}
exports.auth_signUp_ = auth_signUp_;
Object.defineProperty(auth_signUp_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Signs in a user with a validated phone number. */
class auth_signIn_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8D52A951;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.signIn";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
            ["phone_code", "string", "flags.0?string"],
            ["email_verification", _2_types_js_1.types._EmailVerification, "flags.1?EmailVerification"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
            [this.phone_code ?? null, "string", "flags.0?string"],
            [this.email_verification ?? null, _2_types_js_1.types._EmailVerification, "flags.1?EmailVerification"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number in the international format */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** SMS-message ID, obtained from [auth.sendCode](https://core.telegram.org/method/auth.sendCode) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Valid numerical code from the SMS-message */
        Object.defineProperty(this, "phone_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Email verification code or token */
        Object.defineProperty(this, "email_verification", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
        this.phone_code = params.phone_code;
        this.email_verification = params.email_verification;
    }
}
exports.auth_signIn_ = auth_signIn_;
Object.defineProperty(auth_signIn_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Logs out the user. */
class auth_logOut_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3E72BA19;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.logOut";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.auth_logOut_ = auth_logOut_;
Object.defineProperty(auth_logOut_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Terminates all user's authorized sessions except for the current one. */
class auth_resetAuthorizations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9FAB0D1A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.resetAuthorizations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.auth_resetAuthorizations_ = auth_resetAuthorizations_;
Object.defineProperty(auth_resetAuthorizations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns data for copying authorization to another data-center. */
class auth_exportAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE5BFFFCD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.exportAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["dc_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.dc_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Number of a target data-center */
        Object.defineProperty(this, "dc_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dc_id = params.dc_id;
    }
}
exports.auth_exportAuthorization_ = auth_exportAuthorization_;
Object.defineProperty(auth_exportAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Logs in a user using a key transmitted from his native data-center. */
class auth_importAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA57A7DAD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.importAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", "bigint", "long"],
            ["bytes", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, "bigint", "long"],
            [this.bytes, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Authorization key */
        Object.defineProperty(this, "bytes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.bytes = params.bytes;
    }
}
exports.auth_importAuthorization_ = auth_importAuthorization_;
Object.defineProperty(auth_importAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Binds a temporary authorization key `temp_auth_key_id` to the permanent authorization key `perm_auth_key_id`. Each permanent key may only be bound to one temporary key at a time, binding a new temporary key overwrites the previous one. */
class auth_bindTempAuthKey_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCDD42A05;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.bindTempAuthKey";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["perm_auth_key_id", "bigint", "long"],
            ["nonce", "bigint", "long"],
            ["expires_at", "number", "int"],
            ["encrypted_message", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.perm_auth_key_id, "bigint", "long"],
            [this.nonce, "bigint", "long"],
            [this.expires_at, "number", "int"],
            [this.encrypted_message, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Permanent auth\_key\_id to bind to */
        Object.defineProperty(this, "perm_auth_key_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random long from [Binding message contents](#binding-message-contents) */
        Object.defineProperty(this, "nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unix timestamp to invalidate temporary key, see [Binding message contents](#binding-message-contents) */
        Object.defineProperty(this, "expires_at", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** See [Generating encrypted\_message](#generating-encrypted-message) */
        Object.defineProperty(this, "encrypted_message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.perm_auth_key_id = params.perm_auth_key_id;
        this.nonce = params.nonce;
        this.expires_at = params.expires_at;
        this.encrypted_message = params.encrypted_message;
    }
}
exports.auth_bindTempAuthKey_ = auth_bindTempAuthKey_;
Object.defineProperty(auth_bindTempAuthKey_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Login as a bot */
class auth_importBotAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x67A3FF2C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.importBotAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", "number", "int"],
            ["api_id", "number", "int"],
            ["api_hash", "string", "string"],
            ["bot_auth_token", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.flags, "number", "int"],
            [this.api_id, "number", "int"],
            [this.api_hash, "string", "string"],
            [this.bot_auth_token, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Reserved for future use */
        Object.defineProperty(this, "flags", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Application identifier (see. [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Application identifier hash (see. [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot token (see [bots](https://core.telegram.org/bots)) */
        Object.defineProperty(this, "bot_auth_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.flags = params.flags;
        this.api_id = params.api_id;
        this.api_hash = params.api_hash;
        this.bot_auth_token = params.bot_auth_token;
    }
}
exports.auth_importBotAuthorization_ = auth_importBotAuthorization_;
Object.defineProperty(auth_importBotAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Try logging to an account protected by a [2FA password](https://core.telegram.org/api/srp). */
class auth_checkPassword_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD18B4D16;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.checkPassword";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.password, _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    constructor(params) {
        super();
        /** The account's password (see [SRP](https://core.telegram.org/api/srp)) */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.password = params.password;
    }
}
exports.auth_checkPassword_ = auth_checkPassword_;
Object.defineProperty(auth_checkPassword_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Request recovery code of a [2FA password](https://core.telegram.org/api/srp), only for accounts with a [recovery email configured](https://core.telegram.org/api/srp#email-verification). */
class auth_requestPasswordRecovery_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD897BC66;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.requestPasswordRecovery";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.auth_requestPasswordRecovery_ = auth_requestPasswordRecovery_;
Object.defineProperty(auth_requestPasswordRecovery_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reset the [2FA password](https://core.telegram.org/api/srp) using the recovery code sent using [auth.requestPasswordRecovery](https://core.telegram.org/method/auth.requestPasswordRecovery). */
class auth_recoverPassword_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x37096C70;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.recoverPassword";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["code", "string", "string"],
            ["new_settings", _2_types_js_1.types._account_PasswordInputSettings, "flags.0?account.PasswordInputSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.code, "string", "string"],
            [this.new_settings ?? null, _2_types_js_1.types._account_PasswordInputSettings, "flags.0?account.PasswordInputSettings"],
        ];
    }
    constructor(params) {
        super();
        /** Code received via email */
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New password */
        Object.defineProperty(this, "new_settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.code = params.code;
        this.new_settings = params.new_settings;
    }
}
exports.auth_recoverPassword_ = auth_recoverPassword_;
Object.defineProperty(auth_recoverPassword_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Resend the login code via another medium, the phone code type is determined by the return value of the previous auth.sendCode/auth.resendCode: see [login](https://core.telegram.org/api/auth) for more info. */
class auth_resendCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3EF1A9BF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.resendCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The phone number */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The phone code hash obtained from [auth.sendCode](https://core.telegram.org/method/auth.sendCode) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
    }
}
exports.auth_resendCode_ = auth_resendCode_;
Object.defineProperty(auth_resendCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Cancel the login verification code */
class auth_cancelCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1F040578;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.cancelCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code hash from [auth.sendCode](https://core.telegram.org/method/auth.sendCode) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
    }
}
exports.auth_cancelCode_ = auth_cancelCode_;
Object.defineProperty(auth_cancelCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete all temporary authorization keys **except for** the ones specified */
class auth_dropTempAuthKeys_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8E48A188;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.dropTempAuthKeys";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["except_auth_keys", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.except_auth_keys, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** The auth keys that **shouldn't** be dropped. */
        Object.defineProperty(this, "except_auth_keys", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.except_auth_keys = params.except_auth_keys;
    }
}
exports.auth_dropTempAuthKeys_ = auth_dropTempAuthKeys_;
Object.defineProperty(auth_dropTempAuthKeys_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Generate a login token, for [login via QR code](https://core.telegram.org/api/qr-login).
The generated login token should be encoded using base64url, then shown as a `tg://login?token=base64encodedtoken` [deep link »](https://core.telegram.org/api/links#qr-code-login-links) in the QR code. */
class auth_exportLoginToken_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB7E085FE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.exportLoginToken";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["api_id", "number", "int"],
            ["api_hash", "string", "string"],
            ["except_ids", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.api_id, "number", "int"],
            [this.api_hash, "string", "string"],
            [this.except_ids, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** Application identifier (see. [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Application identifier hash (see. [App configuration](https://core.telegram.org/myapp)) */
        Object.defineProperty(this, "api_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** List of already logged-in user IDs, to prevent logging in twice with the same user */
        Object.defineProperty(this, "except_ids", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.api_id = params.api_id;
        this.api_hash = params.api_hash;
        this.except_ids = params.except_ids;
    }
}
exports.auth_exportLoginToken_ = auth_exportLoginToken_;
Object.defineProperty(auth_exportLoginToken_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Login using a redirected login token, generated in case of DC mismatch during [QR code login](https://core.telegram.org/api/qr-login). */
class auth_importLoginToken_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x95AC5CE4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.importLoginToken";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["token", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.token, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Login token */
        Object.defineProperty(this, "token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.token = params.token;
    }
}
exports.auth_importLoginToken_ = auth_importLoginToken_;
Object.defineProperty(auth_importLoginToken_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Accept QR code login token, logging in the app that generated it. */
class auth_acceptLoginToken_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE894AD4D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.acceptLoginToken";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["token", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.token, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Login token embedded in QR code, for more info, see [login via QR code](https://core.telegram.org/api/qr-login). */
        Object.defineProperty(this, "token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.token = params.token;
    }
}
exports.auth_acceptLoginToken_ = auth_acceptLoginToken_;
Object.defineProperty(auth_acceptLoginToken_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check if the [2FA recovery code](https://core.telegram.org/api/srp) sent using [auth.requestPasswordRecovery](https://core.telegram.org/method/auth.requestPasswordRecovery) is valid, before passing it to [auth.recoverPassword](https://core.telegram.org/method/auth.recoverPassword). */
class auth_checkRecoveryPassword_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0D36BF79;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.checkRecoveryPassword";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Code received via email */
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.code = params.code;
    }
}
exports.auth_checkRecoveryPassword_ = auth_checkRecoveryPassword_;
Object.defineProperty(auth_checkRecoveryPassword_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Login by importing an authorization token */
class auth_importWebTokenAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2DB873A9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.importWebTokenAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["api_id", "number", "int"],
            ["api_hash", "string", "string"],
            ["web_auth_token", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.api_id, "number", "int"],
            [this.api_hash, "string", "string"],
            [this.web_auth_token, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** [API ID](https://core.telegram.org/api/obtaining_api_id) */
        Object.defineProperty(this, "api_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [API hash](https://core.telegram.org/api/obtaining_api_id) */
        Object.defineProperty(this, "api_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The authorization token */
        Object.defineProperty(this, "web_auth_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.api_id = params.api_id;
        this.api_hash = params.api_hash;
        this.web_auth_token = params.web_auth_token;
    }
}
exports.auth_importWebTokenAuthorization_ = auth_importWebTokenAuthorization_;
Object.defineProperty(auth_importWebTokenAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Request an SMS code via Firebase. */
class auth_requestFirebaseSms_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x89464B50;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.requestFirebaseSms";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
            ["safety_net_token", "string", "flags.0?string"],
            ["ios_push_secret", "string", "flags.1?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
            [this.safety_net_token ?? null, "string", "flags.0?string"],
            [this.ios_push_secret ?? null, "string", "flags.1?string"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code hash returned by [auth.sendCode](https://core.telegram.org/method/auth.sendCode) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** On Android, a JWS object obtained as described in the [auth documentation »](https://core.telegram.org/api/auth) */
        Object.defineProperty(this, "safety_net_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Secret token received via an apple push notification */
        Object.defineProperty(this, "ios_push_secret", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
        this.safety_net_token = params.safety_net_token;
        this.ios_push_secret = params.ios_push_secret;
    }
}
exports.auth_requestFirebaseSms_ = auth_requestFirebaseSms_;
Object.defineProperty(auth_requestFirebaseSms_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reset the [login email »](https://core.telegram.org/api/auth#email-verification). */
class auth_resetLoginEmail_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7E960193;
    }
    static get [_1_tl_object_js_1.name]() {
        return "auth.resetLoginEmail";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number of the account */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code hash, obtained as described in the [documentation »](https://core.telegram.org/api/auth) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
    }
}
exports.auth_resetLoginEmail_ = auth_resetLoginEmail_;
Object.defineProperty(auth_resetLoginEmail_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Register device to receive [PUSH notifications](https://core.telegram.org/api/push-updates) */
class account_registerDevice_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEC86017A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.registerDevice";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["no_muted", "true", "flags.0?true"],
            ["token_type", "number", "int"],
            ["token", "string", "string"],
            ["app_sandbox", "boolean", "Bool"],
            ["secret", Uint8Array, "bytes"],
            ["other_uids", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.no_muted ?? null, "true", "flags.0?true"],
            [this.token_type, "number", "int"],
            [this.token, "string", "string"],
            [this.app_sandbox, "boolean", "Bool"],
            [this.secret, Uint8Array, "bytes"],
            [this.other_uids, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** Avoid receiving (silent and invisible background) notifications. Useful to save battery. */
        Object.defineProperty(this, "no_muted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Device token type, see [PUSH updates](https://core.telegram.org/api/push-updates#subscribing-to-notifications) for the possible values. */
        Object.defineProperty(this, "token_type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Device token, see [PUSH updates](https://core.telegram.org/api/push-updates#subscribing-to-notifications) for the possible values. */
        Object.defineProperty(this, "token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If [(boolTrue)](https://core.telegram.org/constructor/boolTrue) is transmitted, a sandbox-certificate will be used during transmission. */
        Object.defineProperty(this, "app_sandbox", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** For FCM and APNS VoIP, optional encryption key used to encrypt push notifications */
        Object.defineProperty(this, "secret", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** List of user identifiers of other users currently using the client */
        Object.defineProperty(this, "other_uids", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.no_muted = params.no_muted;
        this.token_type = params.token_type;
        this.token = params.token;
        this.app_sandbox = params.app_sandbox;
        this.secret = params.secret;
        this.other_uids = params.other_uids;
    }
}
exports.account_registerDevice_ = account_registerDevice_;
Object.defineProperty(account_registerDevice_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes a device by its token, stops sending PUSH-notifications to it. */
class account_unregisterDevice_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6A0D3206;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.unregisterDevice";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["token_type", "number", "int"],
            ["token", "string", "string"],
            ["other_uids", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.token_type, "number", "int"],
            [this.token, "string", "string"],
            [this.other_uids, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** Device token type, see [PUSH updates](https://core.telegram.org/api/push-updates#subscribing-to-notifications) for the possible values. */
        Object.defineProperty(this, "token_type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Device token, see [PUSH updates](https://core.telegram.org/api/push-updates#subscribing-to-notifications) for the possible values. */
        Object.defineProperty(this, "token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** List of user identifiers of other users currently using the client */
        Object.defineProperty(this, "other_uids", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.token_type = params.token_type;
        this.token = params.token;
        this.other_uids = params.other_uids;
    }
}
exports.account_unregisterDevice_ = account_unregisterDevice_;
Object.defineProperty(account_unregisterDevice_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edits notification settings from a given user/group, from all users/all groups. */
class account_updateNotifySettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x84BE5B93;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateNotifySettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputNotifyPeer, "InputNotifyPeer"],
            ["settings", _2_types_js_1.types._InputPeerNotifySettings, "InputPeerNotifySettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputNotifyPeer, "InputNotifyPeer"],
            [this.settings, _2_types_js_1.types._InputPeerNotifySettings, "InputPeerNotifySettings"],
        ];
    }
    constructor(params) {
        super();
        /** Notification source */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Notification settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.settings = params.settings;
    }
}
exports.account_updateNotifySettings_ = account_updateNotifySettings_;
Object.defineProperty(account_updateNotifySettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Gets current notification settings for a given user/group, from all users/all groups. */
class account_getNotifySettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x12B3AD31;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getNotifySettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputNotifyPeer, "InputNotifyPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputNotifyPeer, "InputNotifyPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Notification source */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.account_getNotifySettings_ = account_getNotifySettings_;
Object.defineProperty(account_getNotifySettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Resets all notification settings from users and groups. */
class account_resetNotifySettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDB7E1747;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resetNotifySettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_resetNotifySettings_ = account_resetNotifySettings_;
Object.defineProperty(account_resetNotifySettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Updates user profile. */
class account_updateProfile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x78515775;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateProfile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["first_name", "string", "flags.0?string"],
            ["last_name", "string", "flags.1?string"],
            ["about", "string", "flags.2?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.first_name ?? null, "string", "flags.0?string"],
            [this.last_name ?? null, "string", "flags.1?string"],
            [this.about ?? null, "string", "flags.2?string"],
        ];
    }
    constructor(params) {
        super();
        /** New user first name */
        Object.defineProperty(this, "first_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New user last name */
        Object.defineProperty(this, "last_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New bio */
        Object.defineProperty(this, "about", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.first_name = params?.first_name;
        this.last_name = params?.last_name;
        this.about = params?.about;
    }
}
exports.account_updateProfile_ = account_updateProfile_;
Object.defineProperty(account_updateProfile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Updates online user status. */
class account_updateStatus_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6628562C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateStatus";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["offline", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.offline, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** If [(boolTrue)](https://core.telegram.org/constructor/boolTrue) is transmitted, user status will change to [(userStatusOffline)](https://core.telegram.org/constructor/userStatusOffline). */
        Object.defineProperty(this, "offline", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.offline = params.offline;
    }
}
exports.account_updateStatus_ = account_updateStatus_;
Object.defineProperty(account_updateStatus_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns a list of available [wallpapers](https://core.telegram.org/api/wallpapers). */
class account_getWallPapers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x07967D36;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getWallPapers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getWallPapers_ = account_getWallPapers_;
Object.defineProperty(account_getWallPapers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a peer for violation of telegram's Terms of Service */
class account_reportPeer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC5BA3D86;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.reportPeer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["reason", _2_types_js_1.types._ReportReason, "ReportReason"],
            ["message", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.reason, _2_types_js_1.types._ReportReason, "ReportReason"],
            [this.message, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The peer to report */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The reason why this peer is being reported */
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Comment for report moderation */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.reason = params.reason;
        this.message = params.message;
    }
}
exports.account_reportPeer_ = account_reportPeer_;
Object.defineProperty(account_reportPeer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Validates a username and checks availability. */
class account_checkUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2714D86C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.checkUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["username", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.username, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** username
        Accepted characters: A-z (case-insensitive), 0-9 and underscores.
        Length: 5-32 characters. */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.username = params.username;
    }
}
exports.account_checkUsername_ = account_checkUsername_;
Object.defineProperty(account_checkUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Changes username for the current user. */
class account_updateUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3E0BDD7C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["username", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.username, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** username or empty string if username is to be removed
        Accepted characters: a-z (case-insensitive), 0-9 and underscores.
        Length: 5-32 characters. */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.username = params.username;
    }
}
exports.account_updateUsername_ = account_updateUsername_;
Object.defineProperty(account_updateUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get privacy settings of current account */
class account_getPrivacy_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDADBC950;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getPrivacy";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["key", _2_types_js_1.types._InputPrivacyKey, "InputPrivacyKey"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.key, _2_types_js_1.types._InputPrivacyKey, "InputPrivacyKey"],
        ];
    }
    constructor(params) {
        super();
        /** Peer category whose privacy settings should be fetched */
        Object.defineProperty(this, "key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.key = params.key;
    }
}
exports.account_getPrivacy_ = account_getPrivacy_;
Object.defineProperty(account_getPrivacy_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change privacy settings of current account */
class account_setPrivacy_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC9F81CE8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.setPrivacy";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["key", _2_types_js_1.types._InputPrivacyKey, "InputPrivacyKey"],
            ["rules", [_2_types_js_1.types._InputPrivacyRule], "Vector<InputPrivacyRule>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.key, _2_types_js_1.types._InputPrivacyKey, "InputPrivacyKey"],
            [this.rules, [_2_types_js_1.types._InputPrivacyRule], "Vector<InputPrivacyRule>"],
        ];
    }
    constructor(params) {
        super();
        /** New privacy rule */
        Object.defineProperty(this, "key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peers to which the privacy rule will apply. */
        Object.defineProperty(this, "rules", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.key = params.key;
        this.rules = params.rules;
    }
}
exports.account_setPrivacy_ = account_setPrivacy_;
Object.defineProperty(account_setPrivacy_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete the user's account from the telegram servers. */
class account_deleteAccount_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA2C0CF74;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.deleteAccount";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["reason", "string", "string"],
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "flags.0?InputCheckPasswordSRP"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.reason, "string", "string"],
            [this.password ?? null, _2_types_js_1.types._InputCheckPasswordSRP, "flags.0?InputCheckPasswordSRP"],
        ];
    }
    constructor(params) {
        super();
        /** Why is the account being deleted, can be empty */
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [2FA password](https://core.telegram.org/api/srp): this field can be omitted even for accounts with 2FA enabled: in this case account account deletion will be delayed by 7 days [as specified in the docs »](https://core.telegram.org/api/account-deletion) */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.reason = params.reason;
        this.password = params.password;
    }
}
exports.account_deleteAccount_ = account_deleteAccount_;
Object.defineProperty(account_deleteAccount_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get days to live of account */
class account_getAccountTTL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x08FC711D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getAccountTTL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getAccountTTL_ = account_getAccountTTL_;
Object.defineProperty(account_getAccountTTL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set account self-destruction period */
class account_setAccountTTL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2442485E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.setAccountTTL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["ttl", _2_types_js_1.types._AccountDaysTTL, "AccountDaysTTL"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.ttl, _2_types_js_1.types._AccountDaysTTL, "AccountDaysTTL"],
        ];
    }
    constructor(params) {
        super();
        /** Time to live in days */
        Object.defineProperty(this, "ttl", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.ttl = params.ttl;
    }
}
exports.account_setAccountTTL_ = account_setAccountTTL_;
Object.defineProperty(account_setAccountTTL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Verify a new phone number to associate to the current account */
class account_sendChangePhoneCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x82574AE5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.sendChangePhoneCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["settings", _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.settings, _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    constructor(params) {
        super();
        /** New phone number */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.settings = params.settings;
    }
}
exports.account_sendChangePhoneCode_ = account_sendChangePhoneCode_;
Object.defineProperty(account_sendChangePhoneCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change the phone number of the current account */
class account_changePhone_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x70C32EDB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.changePhone";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
            ["phone_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
            [this.phone_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** New phone number */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code hash received when calling [account.sendChangePhoneCode](https://core.telegram.org/method/account.sendChangePhoneCode) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code received when calling [account.sendChangePhoneCode](https://core.telegram.org/method/account.sendChangePhoneCode) */
        Object.defineProperty(this, "phone_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
        this.phone_code = params.phone_code;
    }
}
exports.account_changePhone_ = account_changePhone_;
Object.defineProperty(account_changePhone_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** When client-side passcode lock feature is enabled, will not show message texts in incoming [PUSH notifications](https://core.telegram.org/api/push-updates). */
class account_updateDeviceLocked_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x38DF3532;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateDeviceLocked";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["period", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.period, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Inactivity period after which to start hiding message texts in [PUSH notifications](https://core.telegram.org/api/push-updates). */
        Object.defineProperty(this, "period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.period = params.period;
    }
}
exports.account_updateDeviceLocked_ = account_updateDeviceLocked_;
Object.defineProperty(account_updateDeviceLocked_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get logged-in sessions */
class account_getAuthorizations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE320C158;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getAuthorizations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getAuthorizations_ = account_getAuthorizations_;
Object.defineProperty(account_getAuthorizations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Log out an active [authorized session](https://core.telegram.org/api/auth) by its hash */
class account_resetAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDF77F3BC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resetAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Session hash */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_resetAuthorization_ = account_resetAuthorization_;
Object.defineProperty(account_resetAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain configuration for two-factor authorization with password */
class account_getPassword_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x548A30F5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getPassword";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getPassword_ = account_getPassword_;
Object.defineProperty(account_getPassword_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get private info associated to the password info (recovery email, telegram [passport](https://core.telegram.org/passport) info & so on) */
class account_getPasswordSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9CD4EAF9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getPasswordSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.password, _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    constructor(params) {
        super();
        /** The password (see [SRP](https://core.telegram.org/api/srp)) */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.password = params.password;
    }
}
exports.account_getPasswordSettings_ = account_getPasswordSettings_;
Object.defineProperty(account_getPasswordSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set a new 2FA password */
class account_updatePasswordSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA59B102F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updatePasswordSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
            ["new_settings", _2_types_js_1.types._account_PasswordInputSettings, "account.PasswordInputSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.password, _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
            [this.new_settings, _2_types_js_1.types._account_PasswordInputSettings, "account.PasswordInputSettings"],
        ];
    }
    constructor(params) {
        super();
        /** The old password (see [SRP](https://core.telegram.org/api/srp)) */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new password (see [SRP](https://core.telegram.org/api/srp)) */
        Object.defineProperty(this, "new_settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.password = params.password;
        this.new_settings = params.new_settings;
    }
}
exports.account_updatePasswordSettings_ = account_updatePasswordSettings_;
Object.defineProperty(account_updatePasswordSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send confirmation code to cancel account deletion, for more info [click here »](https://core.telegram.org/api/account-deletion) */
class account_sendConfirmPhoneCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1B3FAA88;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.sendConfirmPhoneCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "string", "string"],
            ["settings", _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "string", "string"],
            [this.settings, _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    constructor(params) {
        super();
        /** The hash from the service notification, for more info [click here »](https://core.telegram.org/api/account-deletion) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
        this.settings = params.settings;
    }
}
exports.account_sendConfirmPhoneCode_ = account_sendConfirmPhoneCode_;
Object.defineProperty(account_sendConfirmPhoneCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Confirm a phone number to cancel account deletion, for more info [click here »](https://core.telegram.org/api/account-deletion) */
class account_confirmPhone_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5F2178C3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.confirmPhone";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_code_hash", "string", "string"],
            ["phone_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_code_hash, "string", "string"],
            [this.phone_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Phone code hash, for more info [click here »](https://core.telegram.org/api/account-deletion) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** SMS code, for more info [click here »](https://core.telegram.org/api/account-deletion) */
        Object.defineProperty(this, "phone_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_code_hash = params.phone_code_hash;
        this.phone_code = params.phone_code;
    }
}
exports.account_confirmPhone_ = account_confirmPhone_;
Object.defineProperty(account_confirmPhone_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get temporary payment password */
class account_getTmpPassword_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x449E0B51;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getTmpPassword";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
            ["period", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.password, _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
            [this.period, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** SRP password parameters */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Time during which the temporary password will be valid, in seconds; should be between 60 and 86400 */
        Object.defineProperty(this, "period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.password = params.password;
        this.period = params.period;
    }
}
exports.account_getTmpPassword_ = account_getTmpPassword_;
Object.defineProperty(account_getTmpPassword_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get web [login widget](https://core.telegram.org/widgets/login) authorizations */
class account_getWebAuthorizations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x182E6D6F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getWebAuthorizations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getWebAuthorizations_ = account_getWebAuthorizations_;
Object.defineProperty(account_getWebAuthorizations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Log out an active web [telegram login](https://core.telegram.org/widgets/login) session */
class account_resetWebAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2D01B9EF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resetWebAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Session](https://core.telegram.org/constructor/webAuthorization) hash */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_resetWebAuthorization_ = account_resetWebAuthorization_;
Object.defineProperty(account_resetWebAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reset all active web [telegram login](https://core.telegram.org/widgets/login) sessions */
class account_resetWebAuthorizations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x682D2594;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resetWebAuthorizations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_resetWebAuthorizations_ = account_resetWebAuthorizations_;
Object.defineProperty(account_resetWebAuthorizations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get all saved [Telegram Passport](https://core.telegram.org/passport) documents, [for more info see the passport docs »](https://core.telegram.org/passport/encryption#encryption) */
class account_getAllSecureValues_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB288BC7D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getAllSecureValues";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getAllSecureValues_ = account_getAllSecureValues_;
Object.defineProperty(account_getAllSecureValues_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get saved [Telegram Passport](https://core.telegram.org/passport) document, [for more info see the passport docs »](https://core.telegram.org/passport/encryption#encryption) */
class account_getSecureValue_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x73665BC2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getSecureValue";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["types", [_2_types_js_1.types._SecureValueType], "Vector<SecureValueType>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.types, [_2_types_js_1.types._SecureValueType], "Vector<SecureValueType>"],
        ];
    }
    constructor(params) {
        super();
        /** Requested value types */
        Object.defineProperty(this, "types", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.types = params.types;
    }
}
exports.account_getSecureValue_ = account_getSecureValue_;
Object.defineProperty(account_getSecureValue_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Securely save [Telegram Passport](https://core.telegram.org/passport) document, [for more info see the passport docs »](https://core.telegram.org/passport/encryption#encryption) */
class account_saveSecureValue_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x899FE31D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.saveSecureValue";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["value", _2_types_js_1.types._InputSecureValue, "InputSecureValue"],
            ["secure_secret_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.value, _2_types_js_1.types._InputSecureValue, "InputSecureValue"],
            [this.secure_secret_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Secure value, [for more info see the passport docs »](https://core.telegram.org/passport/encryption#encryption) */
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Passport secret hash, [for more info see the passport docs »](https://core.telegram.org/passport/encryption#encryption) */
        Object.defineProperty(this, "secure_secret_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.value = params.value;
        this.secure_secret_id = params.secure_secret_id;
    }
}
exports.account_saveSecureValue_ = account_saveSecureValue_;
Object.defineProperty(account_saveSecureValue_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete stored [Telegram Passport](https://core.telegram.org/passport) documents, [for more info see the passport docs »](https://core.telegram.org/passport/encryption#encryption) */
class account_deleteSecureValue_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB880BC4B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.deleteSecureValue";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["types", [_2_types_js_1.types._SecureValueType], "Vector<SecureValueType>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.types, [_2_types_js_1.types._SecureValueType], "Vector<SecureValueType>"],
        ];
    }
    constructor(params) {
        super();
        /** Document types to delete */
        Object.defineProperty(this, "types", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.types = params.types;
    }
}
exports.account_deleteSecureValue_ = account_deleteSecureValue_;
Object.defineProperty(account_deleteSecureValue_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns a Telegram Passport authorization form for sharing data with a service */
class account_getAuthorizationForm_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA929597A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getAuthorizationForm";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot_id", "bigint", "long"],
            ["scope", "string", "string"],
            ["public_key", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot_id, "bigint", "long"],
            [this.scope, "string", "string"],
            [this.public_key, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** User identifier of the service's bot */
        Object.defineProperty(this, "bot_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Telegram Passport element types requested by the service */
        Object.defineProperty(this, "scope", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Service's public key */
        Object.defineProperty(this, "public_key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot_id = params.bot_id;
        this.scope = params.scope;
        this.public_key = params.public_key;
    }
}
exports.account_getAuthorizationForm_ = account_getAuthorizationForm_;
Object.defineProperty(account_getAuthorizationForm_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a Telegram Passport authorization form, effectively sharing data with the service */
class account_acceptAuthorization_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF3ED4C73;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.acceptAuthorization";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot_id", "bigint", "long"],
            ["scope", "string", "string"],
            ["public_key", "string", "string"],
            ["value_hashes", [_2_types_js_1.types._SecureValueHash], "Vector<SecureValueHash>"],
            ["credentials", _2_types_js_1.types._SecureCredentialsEncrypted, "SecureCredentialsEncrypted"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot_id, "bigint", "long"],
            [this.scope, "string", "string"],
            [this.public_key, "string", "string"],
            [this.value_hashes, [_2_types_js_1.types._SecureValueHash], "Vector<SecureValueHash>"],
            [this.credentials, _2_types_js_1.types._SecureCredentialsEncrypted, "SecureCredentialsEncrypted"],
        ];
    }
    constructor(params) {
        super();
        /** Bot ID */
        Object.defineProperty(this, "bot_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Telegram Passport element types requested by the service */
        Object.defineProperty(this, "scope", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Service's public key */
        Object.defineProperty(this, "public_key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Types of values sent and their hashes */
        Object.defineProperty(this, "value_hashes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Encrypted values */
        Object.defineProperty(this, "credentials", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot_id = params.bot_id;
        this.scope = params.scope;
        this.public_key = params.public_key;
        this.value_hashes = params.value_hashes;
        this.credentials = params.credentials;
    }
}
exports.account_acceptAuthorization_ = account_acceptAuthorization_;
Object.defineProperty(account_acceptAuthorization_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send the verification phone code for telegram [passport](https://core.telegram.org/passport). */
class account_sendVerifyPhoneCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA5A356F9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.sendVerifyPhoneCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["settings", _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.settings, _2_types_js_1.types._CodeSettings, "CodeSettings"],
        ];
    }
    constructor(params) {
        super();
        /** The phone number to verify */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.settings = params.settings;
    }
}
exports.account_sendVerifyPhoneCode_ = account_sendVerifyPhoneCode_;
Object.defineProperty(account_sendVerifyPhoneCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Verify a phone number for telegram [passport](https://core.telegram.org/passport). */
class account_verifyPhone_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4DD3A7F6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.verifyPhone";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone_number", "string", "string"],
            ["phone_code_hash", "string", "string"],
            ["phone_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone_number, "string", "string"],
            [this.phone_code_hash, "string", "string"],
            [this.phone_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number */
        Object.defineProperty(this, "phone_number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone code hash received from the call to [account.sendVerifyPhoneCode](https://core.telegram.org/method/account.sendVerifyPhoneCode) */
        Object.defineProperty(this, "phone_code_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Code received after the call to [account.sendVerifyPhoneCode](https://core.telegram.org/method/account.sendVerifyPhoneCode) */
        Object.defineProperty(this, "phone_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone_number = params.phone_number;
        this.phone_code_hash = params.phone_code_hash;
        this.phone_code = params.phone_code;
    }
}
exports.account_verifyPhone_ = account_verifyPhone_;
Object.defineProperty(account_verifyPhone_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send an email verification code. */
class account_sendVerifyEmailCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x98E037BB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.sendVerifyEmailCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["purpose", _2_types_js_1.types._EmailVerifyPurpose, "EmailVerifyPurpose"],
            ["email", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.purpose, _2_types_js_1.types._EmailVerifyPurpose, "EmailVerifyPurpose"],
            [this.email, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Verification purpose. */
        Object.defineProperty(this, "purpose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The email where to send the code. */
        Object.defineProperty(this, "email", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.purpose = params.purpose;
        this.email = params.email;
    }
}
exports.account_sendVerifyEmailCode_ = account_sendVerifyEmailCode_;
Object.defineProperty(account_sendVerifyEmailCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Verify an email address. */
class account_verifyEmail_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x032DA4CF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.verifyEmail";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["purpose", _2_types_js_1.types._EmailVerifyPurpose, "EmailVerifyPurpose"],
            ["verification", _2_types_js_1.types._EmailVerification, "EmailVerification"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.purpose, _2_types_js_1.types._EmailVerifyPurpose, "EmailVerifyPurpose"],
            [this.verification, _2_types_js_1.types._EmailVerification, "EmailVerification"],
        ];
    }
    constructor(params) {
        super();
        /** Verification purpose */
        Object.defineProperty(this, "purpose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Email verification code or token */
        Object.defineProperty(this, "verification", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.purpose = params.purpose;
        this.verification = params.verification;
    }
}
exports.account_verifyEmail_ = account_verifyEmail_;
Object.defineProperty(account_verifyEmail_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Initialize a [takeout session, see here » for more info](https://core.telegram.org/api/takeout). */
class account_initTakeoutSession_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8EF3EAB0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.initTakeoutSession";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["contacts", "true", "flags.0?true"],
            ["message_users", "true", "flags.1?true"],
            ["message_chats", "true", "flags.2?true"],
            ["message_megagroups", "true", "flags.3?true"],
            ["message_channels", "true", "flags.4?true"],
            ["files", "true", "flags.5?true"],
            ["file_max_size", "bigint", "flags.5?long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.contacts ?? null, "true", "flags.0?true"],
            [this.message_users ?? null, "true", "flags.1?true"],
            [this.message_chats ?? null, "true", "flags.2?true"],
            [this.message_megagroups ?? null, "true", "flags.3?true"],
            [this.message_channels ?? null, "true", "flags.4?true"],
            [this.files ?? null, "true", "flags.5?true"],
            [this.file_max_size ?? null, "bigint", "flags.5?long"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to export contacts */
        Object.defineProperty(this, "contacts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to export messages in private chats */
        Object.defineProperty(this, "message_users", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to export messages in [basic groups](https://core.telegram.org/api/channel#basic-groups) */
        Object.defineProperty(this, "message_chats", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to export messages in [supergroups](https://core.telegram.org/api/channel#supergroups) */
        Object.defineProperty(this, "message_megagroups", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to export messages in [channels](https://core.telegram.org/api/channel#channels) */
        Object.defineProperty(this, "message_channels", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to export files */
        Object.defineProperty(this, "files", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum size of files to export */
        Object.defineProperty(this, "file_max_size", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.contacts = params?.contacts;
        this.message_users = params?.message_users;
        this.message_chats = params?.message_chats;
        this.message_megagroups = params?.message_megagroups;
        this.message_channels = params?.message_channels;
        this.files = params?.files;
        this.file_max_size = params?.file_max_size;
    }
}
exports.account_initTakeoutSession_ = account_initTakeoutSession_;
Object.defineProperty(account_initTakeoutSession_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Terminate a [takeout session, see here » for more info](https://core.telegram.org/api/takeout). */
class account_finishTakeoutSession_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1D2652EE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.finishTakeoutSession";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["success", "true", "flags.0?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.success ?? null, "true", "flags.0?true"],
        ];
    }
    constructor(params) {
        super();
        /** Data exported successfully */
        Object.defineProperty(this, "success", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.success = params?.success;
    }
}
exports.account_finishTakeoutSession_ = account_finishTakeoutSession_;
Object.defineProperty(account_finishTakeoutSession_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Verify an email to use as [2FA recovery method](https://core.telegram.org/api/srp). */
class account_confirmPasswordEmail_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8FDF1920;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.confirmPasswordEmail";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The phone code that was received after [setting a recovery email](https://core.telegram.org/api/srp#email-verification) */
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.code = params.code;
    }
}
exports.account_confirmPasswordEmail_ = account_confirmPasswordEmail_;
Object.defineProperty(account_confirmPasswordEmail_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Resend the code to verify an email to use as [2FA recovery method](https://core.telegram.org/api/srp). */
class account_resendPasswordEmail_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7A7F2A15;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resendPasswordEmail";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_resendPasswordEmail_ = account_resendPasswordEmail_;
Object.defineProperty(account_resendPasswordEmail_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Cancel the code that was sent to verify an email to use as [2FA recovery method](https://core.telegram.org/api/srp). */
class account_cancelPasswordEmail_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC1CBD5B6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.cancelPasswordEmail";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_cancelPasswordEmail_ = account_cancelPasswordEmail_;
Object.defineProperty(account_cancelPasswordEmail_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Whether the user will receive notifications when contacts sign up */
class account_getContactSignUpNotification_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9F07C728;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getContactSignUpNotification";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getContactSignUpNotification_ = account_getContactSignUpNotification_;
Object.defineProperty(account_getContactSignUpNotification_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Toggle contact sign up notifications */
class account_setContactSignUpNotification_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCFF43F61;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.setContactSignUpNotification";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["silent", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.silent, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to disable contact sign up notifications */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
    }
}
exports.account_setContactSignUpNotification_ = account_setContactSignUpNotification_;
Object.defineProperty(account_setContactSignUpNotification_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns list of chats with non-default notification settings */
class account_getNotifyExceptions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x53577479;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getNotifyExceptions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["compare_sound", "true", "flags.1?true"],
            ["compare_stories", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputNotifyPeer, "flags.0?InputNotifyPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.compare_sound ?? null, "true", "flags.1?true"],
            [this.compare_stories ?? null, "true", "flags.2?true"],
            [this.peer ?? null, _2_types_js_1.types._InputNotifyPeer, "flags.0?InputNotifyPeer"],
        ];
    }
    constructor(params) {
        super();
        /** If set, chats with non-default sound will be returned */
        Object.defineProperty(this, "compare_sound", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, chats with non-default notification settings for stories will be returned */
        Object.defineProperty(this, "compare_stories", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If specified, only chats of the specified category will be returned */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.compare_sound = params?.compare_sound;
        this.compare_stories = params?.compare_stories;
        this.peer = params?.peer;
    }
}
exports.account_getNotifyExceptions_ = account_getNotifyExceptions_;
Object.defineProperty(account_getNotifyExceptions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about a certain [wallpaper](https://core.telegram.org/api/wallpapers) */
class account_getWallPaper_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFC8DDBEA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getWallPaper";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["wallpaper", _2_types_js_1.types._InputWallPaper, "InputWallPaper"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.wallpaper, _2_types_js_1.types._InputWallPaper, "InputWallPaper"],
        ];
    }
    constructor(params) {
        super();
        /** The [wallpaper](https://core.telegram.org/api/wallpapers) to get info about */
        Object.defineProperty(this, "wallpaper", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.wallpaper = params.wallpaper;
    }
}
exports.account_getWallPaper_ = account_getWallPaper_;
Object.defineProperty(account_getWallPaper_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Create and upload a new [wallpaper](https://core.telegram.org/api/wallpapers) */
class account_uploadWallPaper_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE39A8F03;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.uploadWallPaper";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["for_chat", "true", "flags.0?true"],
            ["file", _2_types_js_1.types._InputFile, "InputFile"],
            ["mime_type", "string", "string"],
            ["settings", _2_types_js_1.types._WallPaperSettings, "WallPaperSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.for_chat ?? null, "true", "flags.0?true"],
            [this.file, _2_types_js_1.types._InputFile, "InputFile"],
            [this.mime_type, "string", "string"],
            [this.settings, _2_types_js_1.types._WallPaperSettings, "WallPaperSettings"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag when uploading wallpapers to be passed to [messages.setChatWallPaper](https://core.telegram.org/method/messages.setChatWallPaper). */
        Object.defineProperty(this, "for_chat", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The JPG/PNG wallpaper */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** MIME type of uploaded wallpaper */
        Object.defineProperty(this, "mime_type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Wallpaper settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.for_chat = params.for_chat;
        this.file = params.file;
        this.mime_type = params.mime_type;
        this.settings = params.settings;
    }
}
exports.account_uploadWallPaper_ = account_uploadWallPaper_;
Object.defineProperty(account_uploadWallPaper_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Install/uninstall [wallpaper](https://core.telegram.org/api/wallpapers) */
class account_saveWallPaper_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6C5A5B37;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.saveWallPaper";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["wallpaper", _2_types_js_1.types._InputWallPaper, "InputWallPaper"],
            ["unsave", "boolean", "Bool"],
            ["settings", _2_types_js_1.types._WallPaperSettings, "WallPaperSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.wallpaper, _2_types_js_1.types._InputWallPaper, "InputWallPaper"],
            [this.unsave, "boolean", "Bool"],
            [this.settings, _2_types_js_1.types._WallPaperSettings, "WallPaperSettings"],
        ];
    }
    constructor(params) {
        super();
        /** [Wallpaper](https://core.telegram.org/api/wallpapers) to install or uninstall */
        Object.defineProperty(this, "wallpaper", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Uninstall wallpaper? */
        Object.defineProperty(this, "unsave", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Wallpaper settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.wallpaper = params.wallpaper;
        this.unsave = params.unsave;
        this.settings = params.settings;
    }
}
exports.account_saveWallPaper_ = account_saveWallPaper_;
Object.defineProperty(account_saveWallPaper_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Install [wallpaper](https://core.telegram.org/api/wallpapers) */
class account_installWallPaper_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFEED5769;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.installWallPaper";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["wallpaper", _2_types_js_1.types._InputWallPaper, "InputWallPaper"],
            ["settings", _2_types_js_1.types._WallPaperSettings, "WallPaperSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.wallpaper, _2_types_js_1.types._InputWallPaper, "InputWallPaper"],
            [this.settings, _2_types_js_1.types._WallPaperSettings, "WallPaperSettings"],
        ];
    }
    constructor(params) {
        super();
        /** [Wallpaper](https://core.telegram.org/api/wallpapers) to install */
        Object.defineProperty(this, "wallpaper", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Wallpaper](https://core.telegram.org/api/wallpapers) settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.wallpaper = params.wallpaper;
        this.settings = params.settings;
    }
}
exports.account_installWallPaper_ = account_installWallPaper_;
Object.defineProperty(account_installWallPaper_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete all installed [wallpapers](https://core.telegram.org/api/wallpapers), reverting to the default wallpaper set. */
class account_resetWallPapers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBB3B9804;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resetWallPapers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_resetWallPapers_ = account_resetWallPapers_;
Object.defineProperty(account_resetWallPapers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get media autodownload settings */
class account_getAutoDownloadSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x56DA0B3F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getAutoDownloadSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getAutoDownloadSettings_ = account_getAutoDownloadSettings_;
Object.defineProperty(account_getAutoDownloadSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change media autodownload settings */
class account_saveAutoDownloadSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x76F36233;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.saveAutoDownloadSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["low", "true", "flags.0?true"],
            ["high", "true", "flags.1?true"],
            ["settings", _2_types_js_1.types._AutoDownloadSettings, "AutoDownloadSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.low ?? null, "true", "flags.0?true"],
            [this.high ?? null, "true", "flags.1?true"],
            [this.settings, _2_types_js_1.types._AutoDownloadSettings, "AutoDownloadSettings"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to save media in the low data usage preset */
        Object.defineProperty(this, "low", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to save media in the high data usage preset */
        Object.defineProperty(this, "high", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Media autodownload settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.low = params.low;
        this.high = params.high;
        this.settings = params.settings;
    }
}
exports.account_saveAutoDownloadSettings_ = account_saveAutoDownloadSettings_;
Object.defineProperty(account_saveAutoDownloadSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Upload theme */
class account_uploadTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1C3DB333;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.uploadTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["file", _2_types_js_1.types._InputFile, "InputFile"],
            ["thumb", _2_types_js_1.types._InputFile, "flags.0?InputFile"],
            ["file_name", "string", "string"],
            ["mime_type", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.file, _2_types_js_1.types._InputFile, "InputFile"],
            [this.thumb ?? null, _2_types_js_1.types._InputFile, "flags.0?InputFile"],
            [this.file_name, "string", "string"],
            [this.mime_type, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** [Previously uploaded](https://core.telegram.org/api/themes#uploading-theme-files) theme file with platform-specific colors for UI components, can be left unset when creating themes that only modify the wallpaper or accent colors. */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Thumbnail */
        Object.defineProperty(this, "thumb", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File name */
        Object.defineProperty(this, "file_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** MIME type, must be `application/x-tgtheme-{format}`, where `format` depends on the client */
        Object.defineProperty(this, "mime_type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file = params.file;
        this.thumb = params.thumb;
        this.file_name = params.file_name;
        this.mime_type = params.mime_type;
    }
}
exports.account_uploadTheme_ = account_uploadTheme_;
Object.defineProperty(account_uploadTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Create a theme */
class account_createTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x652E4400;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.createTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["slug", "string", "string"],
            ["title", "string", "string"],
            ["document", _2_types_js_1.types._InputDocument, "flags.2?InputDocument"],
            ["settings", [_2_types_js_1.types._InputThemeSettings], "flags.3?Vector<InputThemeSettings>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.slug, "string", "string"],
            [this.title, "string", "string"],
            [this.document ?? null, _2_types_js_1.types._InputDocument, "flags.2?InputDocument"],
            [this.settings ?? null, [_2_types_js_1.types._InputThemeSettings], "flags.3?Vector<InputThemeSettings>"],
        ];
    }
    constructor(params) {
        super();
        /** Unique theme ID used to generate [theme deep links](https://core.telegram.org/api/links#theme-links), can be empty to autogenerate a random ID. */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme name */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme file */
        Object.defineProperty(this, "document", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme settings, multiple values can be provided for the different base themes (day/night mode, etc). */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
        this.title = params.title;
        this.document = params.document;
        this.settings = params.settings;
    }
}
exports.account_createTheme_ = account_createTheme_;
Object.defineProperty(account_createTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Update theme */
class account_updateTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2BF40CCC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["format", "string", "string"],
            ["theme", _2_types_js_1.types._InputTheme, "InputTheme"],
            ["slug", "string", "flags.0?string"],
            ["title", "string", "flags.1?string"],
            ["document", _2_types_js_1.types._InputDocument, "flags.2?InputDocument"],
            ["settings", [_2_types_js_1.types._InputThemeSettings], "flags.3?Vector<InputThemeSettings>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.format, "string", "string"],
            [this.theme, _2_types_js_1.types._InputTheme, "InputTheme"],
            [this.slug ?? null, "string", "flags.0?string"],
            [this.title ?? null, "string", "flags.1?string"],
            [this.document ?? null, _2_types_js_1.types._InputDocument, "flags.2?InputDocument"],
            [this.settings ?? null, [_2_types_js_1.types._InputThemeSettings], "flags.3?Vector<InputThemeSettings>"],
        ];
    }
    constructor(params) {
        super();
        /** Theme format, a string that identifies the theming engines supported by the client */
        Object.defineProperty(this, "format", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme to update */
        Object.defineProperty(this, "theme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique theme ID */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme name */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme file */
        Object.defineProperty(this, "document", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.format = params.format;
        this.theme = params.theme;
        this.slug = params.slug;
        this.title = params.title;
        this.document = params.document;
        this.settings = params.settings;
    }
}
exports.account_updateTheme_ = account_updateTheme_;
Object.defineProperty(account_updateTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Save a theme */
class account_saveTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF257106C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.saveTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["theme", _2_types_js_1.types._InputTheme, "InputTheme"],
            ["unsave", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.theme, _2_types_js_1.types._InputTheme, "InputTheme"],
            [this.unsave, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Theme to save */
        Object.defineProperty(this, "theme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unsave */
        Object.defineProperty(this, "unsave", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.theme = params.theme;
        this.unsave = params.unsave;
    }
}
exports.account_saveTheme_ = account_saveTheme_;
Object.defineProperty(account_saveTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Install a theme */
class account_installTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC727BB3B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.installTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["dark", "true", "flags.0?true"],
            ["theme", _2_types_js_1.types._InputTheme, "flags.1?InputTheme"],
            ["format", "string", "flags.2?string"],
            ["base_theme", _2_types_js_1.types._BaseTheme, "flags.3?BaseTheme"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.dark ?? null, "true", "flags.0?true"],
            [this.theme ?? null, _2_types_js_1.types._InputTheme, "flags.1?InputTheme"],
            [this.format ?? null, "string", "flags.2?string"],
            [this.base_theme ?? null, _2_types_js_1.types._BaseTheme, "flags.3?BaseTheme"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to install the dark version */
        Object.defineProperty(this, "dark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme to install */
        Object.defineProperty(this, "theme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme format, a string that identifies the theming engines supported by the client */
        Object.defineProperty(this, "format", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Indicates a basic theme provided by all clients */
        Object.defineProperty(this, "base_theme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dark = params?.dark;
        this.theme = params?.theme;
        this.format = params?.format;
        this.base_theme = params?.base_theme;
    }
}
exports.account_installTheme_ = account_installTheme_;
Object.defineProperty(account_installTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get theme information */
class account_getTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3A5869EC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["format", "string", "string"],
            ["theme", _2_types_js_1.types._InputTheme, "InputTheme"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.format, "string", "string"],
            [this.theme, _2_types_js_1.types._InputTheme, "InputTheme"],
        ];
    }
    constructor(params) {
        super();
        /** Theme format, a string that identifies the theming engines supported by the client */
        Object.defineProperty(this, "format", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Theme */
        Object.defineProperty(this, "theme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.format = params.format;
        this.theme = params.theme;
    }
}
exports.account_getTheme_ = account_getTheme_;
Object.defineProperty(account_getTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get installed themes */
class account_getThemes_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7206E458;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getThemes";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["format", "string", "string"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.format, "string", "string"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Theme format, a string that identifies the theming engines supported by the client */
        Object.defineProperty(this, "format", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.format = params.format;
        this.hash = params.hash;
    }
}
exports.account_getThemes_ = account_getThemes_;
Object.defineProperty(account_getThemes_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set sensitive content settings (for viewing or hiding NSFW content) */
class account_setContentSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB574B16B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.setContentSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["sensitive_enabled", "true", "flags.0?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.sensitive_enabled ?? null, "true", "flags.0?true"],
        ];
    }
    constructor(params) {
        super();
        /** Enable NSFW content */
        Object.defineProperty(this, "sensitive_enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.sensitive_enabled = params?.sensitive_enabled;
    }
}
exports.account_setContentSettings_ = account_setContentSettings_;
Object.defineProperty(account_setContentSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get sensitive content settings */
class account_getContentSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8B9B4DAE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getContentSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getContentSettings_ = account_getContentSettings_;
Object.defineProperty(account_getContentSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about multiple [wallpapers](https://core.telegram.org/api/wallpapers) */
class account_getMultiWallPapers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x65AD71DC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getMultiWallPapers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["wallpapers", [_2_types_js_1.types._InputWallPaper], "Vector<InputWallPaper>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.wallpapers, [_2_types_js_1.types._InputWallPaper], "Vector<InputWallPaper>"],
        ];
    }
    constructor(params) {
        super();
        /** [Wallpapers](https://core.telegram.org/api/wallpapers) to fetch info about */
        Object.defineProperty(this, "wallpapers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.wallpapers = params.wallpapers;
    }
}
exports.account_getMultiWallPapers_ = account_getMultiWallPapers_;
Object.defineProperty(account_getMultiWallPapers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get global privacy settings */
class account_getGlobalPrivacySettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEB2B4CF6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getGlobalPrivacySettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getGlobalPrivacySettings_ = account_getGlobalPrivacySettings_;
Object.defineProperty(account_getGlobalPrivacySettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set global privacy settings */
class account_setGlobalPrivacySettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1EDAAAC2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.setGlobalPrivacySettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["settings", _2_types_js_1.types._GlobalPrivacySettings, "GlobalPrivacySettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.settings, _2_types_js_1.types._GlobalPrivacySettings, "GlobalPrivacySettings"],
        ];
    }
    constructor(params) {
        super();
        /** Global privacy settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.settings = params.settings;
    }
}
exports.account_setGlobalPrivacySettings_ = account_setGlobalPrivacySettings_;
Object.defineProperty(account_setGlobalPrivacySettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a profile photo of a dialog */
class account_reportProfilePhoto_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFA8CC6F5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.reportProfilePhoto";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["photo_id", _2_types_js_1.types._InputPhoto, "InputPhoto"],
            ["reason", _2_types_js_1.types._ReportReason, "ReportReason"],
            ["message", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.photo_id, _2_types_js_1.types._InputPhoto, "InputPhoto"],
            [this.reason, _2_types_js_1.types._ReportReason, "ReportReason"],
            [this.message, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The dialog */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Dialog photo ID */
        Object.defineProperty(this, "photo_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Report reason */
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Comment for report moderation */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.photo_id = params.photo_id;
        this.reason = params.reason;
        this.message = params.message;
    }
}
exports.account_reportProfilePhoto_ = account_reportProfilePhoto_;
Object.defineProperty(account_reportProfilePhoto_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Initiate a 2FA password reset: can only be used if the user is already logged-in, [see here for more info »](https://core.telegram.org/api/srp#password-reset) */
class account_resetPassword_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9308CE1B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resetPassword";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_resetPassword_ = account_resetPassword_;
Object.defineProperty(account_resetPassword_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Abort a pending 2FA password reset, [see here for more info »](https://core.telegram.org/api/srp#password-reset) */
class account_declinePasswordReset_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4C9409F6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.declinePasswordReset";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_declinePasswordReset_ = account_declinePasswordReset_;
Object.defineProperty(account_declinePasswordReset_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get all available chat [themes »](https://core.telegram.org/api/themes). */
class account_getChatThemes_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD638DE89;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getChatThemes";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getChatThemes_ = account_getChatThemes_;
Object.defineProperty(account_getChatThemes_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set time-to-live of current session */
class account_setAuthorizationTTL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBF899AA0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.setAuthorizationTTL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["authorization_ttl_days", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.authorization_ttl_days, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Time-to-live of current session in days */
        Object.defineProperty(this, "authorization_ttl_days", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.authorization_ttl_days = params.authorization_ttl_days;
    }
}
exports.account_setAuthorizationTTL_ = account_setAuthorizationTTL_;
Object.defineProperty(account_setAuthorizationTTL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change settings related to a session. */
class account_changeAuthorizationSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x40F48462;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.changeAuthorizationSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["confirmed", "true", "flags.3?true"],
            ["hash", "bigint", "long"],
            ["encrypted_requests_disabled", "boolean", "flags.0?Bool"],
            ["call_requests_disabled", "boolean", "flags.1?Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.confirmed ?? null, "true", "flags.3?true"],
            [this.hash, "bigint", "long"],
            [this.encrypted_requests_disabled ?? null, "boolean", "flags.0?Bool"],
            [this.call_requests_disabled ?? null, "boolean", "flags.1?Bool"],
        ];
    }
    constructor(params) {
        super();
        /** If set, [confirms a newly logged in session »](https://core.telegram.org/api/auth#confirming-login). */
        Object.defineProperty(this, "confirmed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Session ID from the [authorization](https://core.telegram.org/constructor/authorization) constructor, fetchable using [account.getAuthorizations](https://core.telegram.org/method/account.getAuthorizations) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to enable or disable receiving encrypted chats: if the flag is not set, the previous setting is not changed */
        Object.defineProperty(this, "encrypted_requests_disabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to enable or disable receiving calls: if the flag is not set, the previous setting is not changed */
        Object.defineProperty(this, "call_requests_disabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.confirmed = params.confirmed;
        this.hash = params.hash;
        this.encrypted_requests_disabled = params.encrypted_requests_disabled;
        this.call_requests_disabled = params.call_requests_disabled;
    }
}
exports.account_changeAuthorizationSettings_ = account_changeAuthorizationSettings_;
Object.defineProperty(account_changeAuthorizationSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch saved notification sounds */
class account_getSavedRingtones_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE1902288;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getSavedRingtones";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getSavedRingtones_ = account_getSavedRingtones_;
Object.defineProperty(account_getSavedRingtones_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Save or remove saved notification sound. */
class account_saveRingtone_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3DEA5B03;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.saveRingtone";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["unsave", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.unsave, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Notification sound uploaded using [account.uploadRingtone](https://core.telegram.org/method/account.uploadRingtone) */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to add or delete the notification sound */
        Object.defineProperty(this, "unsave", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.unsave = params.unsave;
    }
}
exports.account_saveRingtone_ = account_saveRingtone_;
Object.defineProperty(account_saveRingtone_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Upload notification sound, use [account.saveRingtone](https://core.telegram.org/method/account.saveRingtone) to convert it and add it to the list of saved notification sounds. */
class account_uploadRingtone_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x831A83A2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.uploadRingtone";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["file", _2_types_js_1.types._InputFile, "InputFile"],
            ["file_name", "string", "string"],
            ["mime_type", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.file, _2_types_js_1.types._InputFile, "InputFile"],
            [this.file_name, "string", "string"],
            [this.mime_type, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Notification sound */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File name */
        Object.defineProperty(this, "file_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** MIME type of file */
        Object.defineProperty(this, "mime_type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file = params.file;
        this.file_name = params.file_name;
        this.mime_type = params.mime_type;
    }
}
exports.account_uploadRingtone_ = account_uploadRingtone_;
Object.defineProperty(account_uploadRingtone_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set an [emoji status](https://core.telegram.org/api/emoji-status) */
class account_updateEmojiStatus_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFBD3DE6B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateEmojiStatus";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["emoji_status", _2_types_js_1.types._EmojiStatus, "EmojiStatus"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.emoji_status, _2_types_js_1.types._EmojiStatus, "EmojiStatus"],
        ];
    }
    constructor(params) {
        super();
        /** [Emoji status](https://core.telegram.org/api/emoji-status) to set */
        Object.defineProperty(this, "emoji_status", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.emoji_status = params.emoji_status;
    }
}
exports.account_updateEmojiStatus_ = account_updateEmojiStatus_;
Object.defineProperty(account_updateEmojiStatus_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a list of default suggested [emoji statuses](https://core.telegram.org/api/emoji-status) */
class account_getDefaultEmojiStatuses_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD6753386;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getDefaultEmojiStatuses";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getDefaultEmojiStatuses_ = account_getDefaultEmojiStatuses_;
Object.defineProperty(account_getDefaultEmojiStatuses_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get recently used [emoji statuses](https://core.telegram.org/api/emoji-status) */
class account_getRecentEmojiStatuses_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0F578105;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getRecentEmojiStatuses";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getRecentEmojiStatuses_ = account_getRecentEmojiStatuses_;
Object.defineProperty(account_getRecentEmojiStatuses_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clears list of recently used [emoji statuses](https://core.telegram.org/api/emoji-status) */
class account_clearRecentEmojiStatuses_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x18201AAE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.clearRecentEmojiStatuses";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_clearRecentEmojiStatuses_ = account_clearRecentEmojiStatuses_;
Object.defineProperty(account_clearRecentEmojiStatuses_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder usernames associated with the currently logged-in user. */
class account_reorderUsernames_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEF500EAB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.reorderUsernames";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["order", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.order, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** The new order for active usernames. All active usernames must be specified. */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.order = params.order;
    }
}
exports.account_reorderUsernames_ = account_reorderUsernames_;
Object.defineProperty(account_reorderUsernames_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Activate or deactivate a purchased [fragment.com](https://fragment.com) username associated to the currently logged-in user. */
class account_toggleUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x58D6B376;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.toggleUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["username", "string", "string"],
            ["active", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.username, "string", "string"],
            [this.active, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Username */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to activate or deactivate it */
        Object.defineProperty(this, "active", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.username = params.username;
        this.active = params.active;
    }
}
exports.account_toggleUsername_ = account_toggleUsername_;
Object.defineProperty(account_toggleUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a set of suggested [custom emoji stickers](https://core.telegram.org/api/custom-emoji) that can be [used as profile picture](https://core.telegram.org/api/files#sticker-profile-pictures) */
class account_getDefaultProfilePhotoEmojis_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE2750328;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getDefaultProfilePhotoEmojis";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getDefaultProfilePhotoEmojis_ = account_getDefaultProfilePhotoEmojis_;
Object.defineProperty(account_getDefaultProfilePhotoEmojis_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a set of suggested [custom emoji stickers](https://core.telegram.org/api/custom-emoji) that can be [used as group picture](https://core.telegram.org/api/files#sticker-profile-pictures) */
class account_getDefaultGroupPhotoEmojis_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x915860AE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getDefaultGroupPhotoEmojis";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getDefaultGroupPhotoEmojis_ = account_getDefaultGroupPhotoEmojis_;
Object.defineProperty(account_getDefaultGroupPhotoEmojis_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get autosave settings */
class account_getAutoSaveSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xADCBBCDA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getAutoSaveSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getAutoSaveSettings_ = account_getAutoSaveSettings_;
Object.defineProperty(account_getAutoSaveSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Modify autosave settings */
class account_saveAutoSaveSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD69B8361;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.saveAutoSaveSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["users", "true", "flags.0?true"],
            ["chats", "true", "flags.1?true"],
            ["broadcasts", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputPeer, "flags.3?InputPeer"],
            ["settings", _2_types_js_1.types._AutoSaveSettings, "AutoSaveSettings"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.users ?? null, "true", "flags.0?true"],
            [this.chats ?? null, "true", "flags.1?true"],
            [this.broadcasts ?? null, "true", "flags.2?true"],
            [this.peer ?? null, _2_types_js_1.types._InputPeer, "flags.3?InputPeer"],
            [this.settings, _2_types_js_1.types._AutoSaveSettings, "AutoSaveSettings"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the new settings should affect all private chats */
        Object.defineProperty(this, "users", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the new settings should affect all groups */
        Object.defineProperty(this, "chats", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the new settings should affect all [channels](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "broadcasts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the new settings should affect a specific peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new autosave settings */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.users = params.users;
        this.chats = params.chats;
        this.broadcasts = params.broadcasts;
        this.peer = params.peer;
        this.settings = params.settings;
    }
}
exports.account_saveAutoSaveSettings_ = account_saveAutoSaveSettings_;
Object.defineProperty(account_saveAutoSaveSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clear all peer-specific autosave settings. */
class account_deleteAutoSaveExceptions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x53BC0020;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.deleteAutoSaveExceptions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_deleteAutoSaveExceptions_ = account_deleteAutoSaveExceptions_;
Object.defineProperty(account_deleteAutoSaveExceptions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invalidate the specified login codes, see [here »](https://core.telegram.org/api/auth#invalidating-login-codes) for more info. */
class account_invalidateSignInCodes_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCA8AE8BA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.invalidateSignInCodes";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["codes", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.codes, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** The login codes to invalidate. */
        Object.defineProperty(this, "codes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.codes = params.codes;
    }
}
exports.account_invalidateSignInCodes_ = account_invalidateSignInCodes_;
Object.defineProperty(account_invalidateSignInCodes_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Update the [accent color and background custom emoji »](https://core.telegram.org/api/colors) of the current account. */
class account_updateColor_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7CEFA15D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateColor";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["for_profile", "true", "flags.1?true"],
            ["color", "number", "flags.2?int"],
            ["background_emoji_id", "bigint", "flags.0?long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.for_profile ?? null, "true", "flags.1?true"],
            [this.color ?? null, "number", "flags.2?int"],
            [this.background_emoji_id ?? null, "bigint", "flags.0?long"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to change the accent color emoji pattern of the profile page; otherwise, the accent color and emoji pattern of messages will be changed. */
        Object.defineProperty(this, "for_profile", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [ID of the accent color palette »](https://core.telegram.org/api/colors) to use (not RGB24, see [here »](https://core.telegram.org/api/colors) for more info). */
        Object.defineProperty(this, "color", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Custom emoji ID used in the accent color pattern. */
        Object.defineProperty(this, "background_emoji_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.for_profile = params?.for_profile;
        this.color = params?.color;
        this.background_emoji_id = params?.background_emoji_id;
    }
}
exports.account_updateColor_ = account_updateColor_;
Object.defineProperty(account_updateColor_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a set of suggested [custom emoji stickers](https://core.telegram.org/api/custom-emoji) that can be used in an [accent color pattern](https://core.telegram.org/api/colors). */
class account_getDefaultBackgroundEmojis_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA60AB9CE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getDefaultBackgroundEmojis";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getDefaultBackgroundEmojis_ = account_getDefaultBackgroundEmojis_;
Object.defineProperty(account_getDefaultBackgroundEmojis_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a list of default suggested [channel emoji statuses](https://core.telegram.org/api/emoji-status). */
class account_getChannelDefaultEmojiStatuses_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7727A7D5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getChannelDefaultEmojiStatuses";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getChannelDefaultEmojiStatuses_ = account_getChannelDefaultEmojiStatuses_;
Object.defineProperty(account_getChannelDefaultEmojiStatuses_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns fetch the full list of [custom emoji IDs »](https://core.telegram.org/api/custom-emoji) that cannot be used in [channel emoji statuses »](https://core.telegram.org/api/emoji-status). */
class account_getChannelRestrictedStatusEmojis_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x35A9E0D5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getChannelRestrictedStatusEmojis";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.account_getChannelRestrictedStatusEmojis_ = account_getChannelRestrictedStatusEmojis_;
Object.defineProperty(account_getChannelRestrictedStatusEmojis_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateBusinessWorkHours_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4B00E066;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateBusinessWorkHours";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["business_work_hours", _2_types_js_1.types._BusinessWorkHours, "flags.0?BusinessWorkHours"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.business_work_hours ?? null, _2_types_js_1.types._BusinessWorkHours, "flags.0?BusinessWorkHours"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "business_work_hours", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.business_work_hours = params?.business_work_hours;
    }
}
exports.account_updateBusinessWorkHours_ = account_updateBusinessWorkHours_;
Object.defineProperty(account_updateBusinessWorkHours_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateBusinessLocation_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9E6B131A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateBusinessLocation";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["geo_point", _2_types_js_1.types._InputGeoPoint, "flags.1?InputGeoPoint"],
            ["address", "string", "flags.0?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.geo_point ?? null, _2_types_js_1.types._InputGeoPoint, "flags.1?InputGeoPoint"],
            [this.address ?? null, "string", "flags.0?string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "geo_point", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "address", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.geo_point = params?.geo_point;
        this.address = params?.address;
    }
}
exports.account_updateBusinessLocation_ = account_updateBusinessLocation_;
Object.defineProperty(account_updateBusinessLocation_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateBusinessGreetingMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x66CDAFC4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateBusinessGreetingMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["message", _2_types_js_1.types._InputBusinessGreetingMessage, "flags.0?InputBusinessGreetingMessage"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.message ?? null, _2_types_js_1.types._InputBusinessGreetingMessage, "flags.0?InputBusinessGreetingMessage"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.message = params?.message;
    }
}
exports.account_updateBusinessGreetingMessage_ = account_updateBusinessGreetingMessage_;
Object.defineProperty(account_updateBusinessGreetingMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateBusinessAwayMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA26A7FA5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateBusinessAwayMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["message", _2_types_js_1.types._InputBusinessAwayMessage, "flags.0?InputBusinessAwayMessage"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.message ?? null, _2_types_js_1.types._InputBusinessAwayMessage, "flags.0?InputBusinessAwayMessage"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.message = params?.message;
    }
}
exports.account_updateBusinessAwayMessage_ = account_updateBusinessAwayMessage_;
Object.defineProperty(account_updateBusinessAwayMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateConnectedBot_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x43D8521D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateConnectedBot";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["can_reply", "true", "flags.0?true"],
            ["deleted", "true", "flags.1?true"],
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["recipients", _2_types_js_1.types._InputBusinessBotRecipients, "InputBusinessBotRecipients"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.can_reply ?? null, "true", "flags.0?true"],
            [this.deleted ?? null, "true", "flags.1?true"],
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.recipients, _2_types_js_1.types._InputBusinessBotRecipients, "InputBusinessBotRecipients"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "can_reply", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "deleted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "recipients", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.can_reply = params.can_reply;
        this.deleted = params.deleted;
        this.bot = params.bot;
        this.recipients = params.recipients;
    }
}
exports.account_updateConnectedBot_ = account_updateConnectedBot_;
Object.defineProperty(account_updateConnectedBot_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_getConnectedBots_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4EA4C80F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getConnectedBots";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getConnectedBots_ = account_getConnectedBots_;
Object.defineProperty(account_getConnectedBots_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_getBotBusinessConnection_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x76A86270;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getBotBusinessConnection";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["connection_id", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.connection_id, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "connection_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.connection_id = params.connection_id;
    }
}
exports.account_getBotBusinessConnection_ = account_getBotBusinessConnection_;
Object.defineProperty(account_getBotBusinessConnection_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateBusinessIntro_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA614D034;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateBusinessIntro";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["intro", _2_types_js_1.types._InputBusinessIntro, "flags.0?InputBusinessIntro"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.intro ?? null, _2_types_js_1.types._InputBusinessIntro, "flags.0?InputBusinessIntro"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "intro", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.intro = params?.intro;
    }
}
exports.account_updateBusinessIntro_ = account_updateBusinessIntro_;
Object.defineProperty(account_updateBusinessIntro_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_toggleConnectedBotPaused_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x646E1097;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.toggleConnectedBotPaused";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["paused", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.paused, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "paused", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.paused = params.paused;
    }
}
exports.account_toggleConnectedBotPaused_ = account_toggleConnectedBotPaused_;
Object.defineProperty(account_toggleConnectedBotPaused_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_disablePeerConnectedBot_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5E437ED9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.disablePeerConnectedBot";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.account_disablePeerConnectedBot_ = account_disablePeerConnectedBot_;
Object.defineProperty(account_disablePeerConnectedBot_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updateBirthday_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCC6E0C11;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updateBirthday";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["birthday", _2_types_js_1.types._Birthday, "flags.0?Birthday"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.birthday ?? null, _2_types_js_1.types._Birthday, "flags.0?Birthday"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "birthday", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.birthday = params?.birthday;
    }
}
exports.account_updateBirthday_ = account_updateBirthday_;
Object.defineProperty(account_updateBirthday_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_createBusinessChatLink_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8851E68E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.createBusinessChatLink";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["link", _2_types_js_1.types._InputBusinessChatLink, "InputBusinessChatLink"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.link, _2_types_js_1.types._InputBusinessChatLink, "InputBusinessChatLink"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.link = params.link;
    }
}
exports.account_createBusinessChatLink_ = account_createBusinessChatLink_;
Object.defineProperty(account_createBusinessChatLink_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_editBusinessChatLink_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8C3410AF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.editBusinessChatLink";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
            ["link", _2_types_js_1.types._InputBusinessChatLink, "InputBusinessChatLink"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
            [this.link, _2_types_js_1.types._InputBusinessChatLink, "InputBusinessChatLink"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
        this.link = params.link;
    }
}
exports.account_editBusinessChatLink_ = account_editBusinessChatLink_;
Object.defineProperty(account_editBusinessChatLink_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_deleteBusinessChatLink_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x60073674;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.deleteBusinessChatLink";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
    }
}
exports.account_deleteBusinessChatLink_ = account_deleteBusinessChatLink_;
Object.defineProperty(account_deleteBusinessChatLink_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_getBusinessChatLinks_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6F70DDE1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.getBusinessChatLinks";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.account_getBusinessChatLinks_ = account_getBusinessChatLinks_;
Object.defineProperty(account_getBusinessChatLinks_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_resolveBusinessChatLink_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5492E5EE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.resolveBusinessChatLink";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
    }
}
exports.account_resolveBusinessChatLink_ = account_resolveBusinessChatLink_;
Object.defineProperty(account_resolveBusinessChatLink_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class account_updatePersonalChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD94305E0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "account.updatePersonalChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.account_updatePersonalChannel_ = account_updatePersonalChannel_;
Object.defineProperty(account_updatePersonalChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns basic user info according to their identifiers. */
class users_getUsers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0D91A548;
    }
    static get [_1_tl_object_js_1.name]() {
        return "users.getUsers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    constructor(params) {
        super();
        /** List of user identifiers */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.users_getUsers_ = users_getUsers_;
Object.defineProperty(users_getUsers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns extended user info by ID. */
class users_getFullUser_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB60F5918;
    }
    static get [_1_tl_object_js_1.name]() {
        return "users.getFullUser";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.users_getFullUser_ = users_getFullUser_;
Object.defineProperty(users_getFullUser_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Notify the user that the sent [passport](https://core.telegram.org/passport) data contains some errors The user will not be able to re-submit their Passport data to you until the errors are fixed (the contents of the field for which you returned the error must change). */
class users_setSecureValueErrors_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x90C894B5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "users.setSecureValueErrors";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputUser, "InputUser"],
            ["errors", [_2_types_js_1.types._SecureValueError], "Vector<SecureValueError>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.errors, [_2_types_js_1.types._SecureValueError], "Vector<SecureValueError>"],
        ];
    }
    constructor(params) {
        super();
        /** The user */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Errors */
        Object.defineProperty(this, "errors", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.errors = params.errors;
    }
}
exports.users_setSecureValueErrors_ = users_setSecureValueErrors_;
Object.defineProperty(users_setSecureValueErrors_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class users_getIsPremiumRequiredToContact_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA622AA10;
    }
    static get [_1_tl_object_js_1.name]() {
        return "users.getIsPremiumRequiredToContact";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.users_getIsPremiumRequiredToContact_ = users_getIsPremiumRequiredToContact_;
Object.defineProperty(users_getIsPremiumRequiredToContact_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the telegram IDs of all contacts.
Returns an array of Telegram user IDs for all contacts (0 if a contact does not have an associated Telegram account or have hidden their account using privacy settings). */
class contacts_getContactIDs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7ADC669D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getContactIDs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.contacts_getContactIDs_ = contacts_getContactIDs_;
Object.defineProperty(contacts_getContactIDs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Use this method to obtain the online statuses of all contacts with an accessible Telegram account. */
class contacts_getStatuses_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC4A353EE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getStatuses";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.contacts_getStatuses_ = contacts_getStatuses_;
Object.defineProperty(contacts_getStatuses_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the current user's contact list. */
class contacts_getContacts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5DD69E12;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getContacts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** If there already is a full contact list on the client, a [hash](https://core.telegram.org/api/offsets#hash-generation) of a the list of contact IDs in ascending order may be passed in this parameter. If the contact set was not changed, [(contacts.contactsNotModified)](https://core.telegram.org/constructor/contacts.contactsNotModified) will be returned. */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.contacts_getContacts_ = contacts_getContacts_;
Object.defineProperty(contacts_getContacts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Imports contacts: saves a full list on the server, adds already registered contacts to the contact list, returns added contacts and their info. */
class contacts_importContacts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2C800BE5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.importContacts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["contacts", [_2_types_js_1.types._InputContact], "Vector<InputContact>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.contacts, [_2_types_js_1.types._InputContact], "Vector<InputContact>"],
        ];
    }
    constructor(params) {
        super();
        /** List of contacts to import */
        Object.defineProperty(this, "contacts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.contacts = params.contacts;
    }
}
exports.contacts_importContacts_ = contacts_importContacts_;
Object.defineProperty(contacts_importContacts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes several contacts from the list. */
class contacts_deleteContacts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x096A0E00;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.deleteContacts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    constructor(params) {
        super();
        /** User ID list */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.contacts_deleteContacts_ = contacts_deleteContacts_;
Object.defineProperty(contacts_deleteContacts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete contacts by phone number */
class contacts_deleteByPhones_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1013FD9E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.deleteByPhones";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phones", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phones, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** Phone numbers */
        Object.defineProperty(this, "phones", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phones = params.phones;
    }
}
exports.contacts_deleteByPhones_ = contacts_deleteByPhones_;
Object.defineProperty(contacts_deleteByPhones_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Adds a peer to a blocklist, see [here »](https://core.telegram.org/api/block) for more info. */
class contacts_block_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2E2E8734;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.block";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["my_stories_from", "true", "flags.0?true"],
            ["id", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.my_stories_from ?? null, "true", "flags.0?true"],
            [this.id, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the peer should be added to the story blocklist; if not set, the peer will be added to the main blocklist, see [here »](https://core.telegram.org/api/block) for more info. */
        Object.defineProperty(this, "my_stories_from", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peer */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.my_stories_from = params.my_stories_from;
        this.id = params.id;
    }
}
exports.contacts_block_ = contacts_block_;
Object.defineProperty(contacts_block_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes a peer from a blocklist, see [here »](https://core.telegram.org/api/block) for more info. */
class contacts_unblock_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB550D328;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.unblock";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["my_stories_from", "true", "flags.0?true"],
            ["id", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.my_stories_from ?? null, "true", "flags.0?true"],
            [this.id, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the peer should be removed from the story blocklist; if not set, the peer will be removed from the main blocklist, see [here »](https://core.telegram.org/api/block) for more info. */
        Object.defineProperty(this, "my_stories_from", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peer */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.my_stories_from = params.my_stories_from;
        this.id = params.id;
    }
}
exports.contacts_unblock_ = contacts_unblock_;
Object.defineProperty(contacts_unblock_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the list of blocked users. */
class contacts_getBlocked_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9A868F80;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getBlocked";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["my_stories_from", "true", "flags.0?true"],
            ["offset", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.my_stories_from ?? null, "true", "flags.0?true"],
            [this.offset, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to fetch the story blocklist; if not set, will fetch the main blocklist. See [here »](https://core.telegram.org/api/block) for differences between the two. */
        Object.defineProperty(this, "my_stories_from", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The number of list elements to be skipped */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The number of list elements to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.my_stories_from = params.my_stories_from;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.contacts_getBlocked_ = contacts_getBlocked_;
Object.defineProperty(contacts_getBlocked_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns users found by username substring. */
class contacts_search_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x11F812D8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.search";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["q", "string", "string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.q, "string", "string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Target substring */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of users to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.q = params.q;
        this.limit = params.limit;
    }
}
exports.contacts_search_ = contacts_search_;
Object.defineProperty(contacts_search_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Resolve a @username to get peer info */
class contacts_resolveUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF93CCBA3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.resolveUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["username", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.username, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** @username to resolve */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.username = params.username;
    }
}
exports.contacts_resolveUsername_ = contacts_resolveUsername_;
Object.defineProperty(contacts_resolveUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get most used peers */
class contacts_getTopPeers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x973478B6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getTopPeers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["correspondents", "true", "flags.0?true"],
            ["bots_pm", "true", "flags.1?true"],
            ["bots_inline", "true", "flags.2?true"],
            ["phone_calls", "true", "flags.3?true"],
            ["forward_users", "true", "flags.4?true"],
            ["forward_chats", "true", "flags.5?true"],
            ["groups", "true", "flags.10?true"],
            ["channels", "true", "flags.15?true"],
            ["offset", "number", "int"],
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.correspondents ?? null, "true", "flags.0?true"],
            [this.bots_pm ?? null, "true", "flags.1?true"],
            [this.bots_inline ?? null, "true", "flags.2?true"],
            [this.phone_calls ?? null, "true", "flags.3?true"],
            [this.forward_users ?? null, "true", "flags.4?true"],
            [this.forward_chats ?? null, "true", "flags.5?true"],
            [this.groups ?? null, "true", "flags.10?true"],
            [this.channels ?? null, "true", "flags.15?true"],
            [this.offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Users we've chatted most frequently with */
        Object.defineProperty(this, "correspondents", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Most used bots */
        Object.defineProperty(this, "bots_pm", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Most used inline bots */
        Object.defineProperty(this, "bots_inline", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Most frequently called users */
        Object.defineProperty(this, "phone_calls", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Users to which the users often forwards messages to */
        Object.defineProperty(this, "forward_users", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chats to which the users often forwards messages to */
        Object.defineProperty(this, "forward_chats", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Often-opened groups and supergroups */
        Object.defineProperty(this, "groups", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Most frequently visited channels */
        Object.defineProperty(this, "channels", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for [pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.correspondents = params.correspondents;
        this.bots_pm = params.bots_pm;
        this.bots_inline = params.bots_inline;
        this.phone_calls = params.phone_calls;
        this.forward_users = params.forward_users;
        this.forward_chats = params.forward_chats;
        this.groups = params.groups;
        this.channels = params.channels;
        this.offset = params.offset;
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.contacts_getTopPeers_ = contacts_getTopPeers_;
Object.defineProperty(contacts_getTopPeers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reset [rating](https://core.telegram.org/api/top-rating) of top peer */
class contacts_resetTopPeerRating_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1AE373AC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.resetTopPeerRating";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["category", _2_types_js_1.types._TopPeerCategory, "TopPeerCategory"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.category, _2_types_js_1.types._TopPeerCategory, "TopPeerCategory"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Top peer category */
        Object.defineProperty(this, "category", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peer whose rating should be reset */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.category = params.category;
        this.peer = params.peer;
    }
}
exports.contacts_resetTopPeerRating_ = contacts_resetTopPeerRating_;
Object.defineProperty(contacts_resetTopPeerRating_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Removes all contacts without an associated Telegram account. */
class contacts_resetSaved_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x879537F1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.resetSaved";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.contacts_resetSaved_ = contacts_resetSaved_;
Object.defineProperty(contacts_resetSaved_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get all contacts, requires a [takeout session, see here » for more info](https://core.telegram.org/api/takeout). */
class contacts_getSaved_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x82F1E39F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getSaved";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.contacts_getSaved_ = contacts_getSaved_;
Object.defineProperty(contacts_getSaved_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Enable/disable [top peers](https://core.telegram.org/api/top-rating) */
class contacts_toggleTopPeers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8514BDDA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.toggleTopPeers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Enable/disable */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.enabled = params.enabled;
    }
}
exports.contacts_toggleTopPeers_ = contacts_toggleTopPeers_;
Object.defineProperty(contacts_toggleTopPeers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Add an existing telegram user as contact. */
class contacts_addContact_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE8F463D0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.addContact";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["add_phone_privacy_exception", "true", "flags.0?true"],
            ["id", _2_types_js_1.types._InputUser, "InputUser"],
            ["first_name", "string", "string"],
            ["last_name", "string", "string"],
            ["phone", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.add_phone_privacy_exception ?? null, "true", "flags.0?true"],
            [this.id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.first_name, "string", "string"],
            [this.last_name, "string", "string"],
            [this.phone, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Allow the other user to see our phone number? */
        Object.defineProperty(this, "add_phone_privacy_exception", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Telegram ID of the other user */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** First name */
        Object.defineProperty(this, "first_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Last name */
        Object.defineProperty(this, "last_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User's phone number, may be omitted to simply add the user to the contact list, without a phone number. */
        Object.defineProperty(this, "phone", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.add_phone_privacy_exception = params.add_phone_privacy_exception;
        this.id = params.id;
        this.first_name = params.first_name;
        this.last_name = params.last_name;
        this.phone = params.phone;
    }
}
exports.contacts_addContact_ = contacts_addContact_;
Object.defineProperty(contacts_addContact_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** If the [add contact action bar is active](https://core.telegram.org/api/action-bar#add-contact), add that user as contact */
class contacts_acceptContact_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF831A20F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.acceptContact";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** The user to add as contact */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.contacts_acceptContact_ = contacts_acceptContact_;
Object.defineProperty(contacts_acceptContact_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get users and geochats near you, see [here »](https://core.telegram.org/api/nearby) for more info. */
class contacts_getLocated_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD348BC44;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getLocated";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["background", "true", "flags.1?true"],
            ["geo_point", _2_types_js_1.types._InputGeoPoint, "InputGeoPoint"],
            ["self_expires", "number", "flags.0?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.background ?? null, "true", "flags.1?true"],
            [this.geo_point, _2_types_js_1.types._InputGeoPoint, "InputGeoPoint"],
            [this.self_expires ?? null, "number", "flags.0?int"],
        ];
    }
    constructor(params) {
        super();
        /** While the geolocation of the current user is public, clients should update it in the background every half-an-hour or so, while setting this flag.
        Do this only if the new location is more than 1 KM away from the previous one, or if the previous location is unknown. */
        Object.defineProperty(this, "background", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Geolocation */
        Object.defineProperty(this, "geo_point", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, the geolocation of the current user will be public for the specified number of seconds; pass 0x7fffffff to disable expiry, 0 to make the current geolocation private; if the flag isn't set, no changes will be applied. */
        Object.defineProperty(this, "self_expires", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.background = params.background;
        this.geo_point = params.geo_point;
        this.self_expires = params.self_expires;
    }
}
exports.contacts_getLocated_ = contacts_getLocated_;
Object.defineProperty(contacts_getLocated_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Stop getting notifications about [discussion replies](https://core.telegram.org/api/discussion) of a certain user in `@replies` */
class contacts_blockFromReplies_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x29A8962C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.blockFromReplies";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["delete_message", "true", "flags.0?true"],
            ["delete_history", "true", "flags.1?true"],
            ["report_spam", "true", "flags.2?true"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.delete_message ?? null, "true", "flags.0?true"],
            [this.delete_history ?? null, "true", "flags.1?true"],
            [this.report_spam ?? null, "true", "flags.2?true"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to delete the specified message as well */
        Object.defineProperty(this, "delete_message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to delete all `@replies` messages from this user as well */
        Object.defineProperty(this, "delete_history", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to also report this user for spam */
        Object.defineProperty(this, "report_spam", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the message in the [@replies](https://core.telegram.org/api/discussion#replies) chat */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.delete_message = params.delete_message;
        this.delete_history = params.delete_history;
        this.report_spam = params.report_spam;
        this.msg_id = params.msg_id;
    }
}
exports.contacts_blockFromReplies_ = contacts_blockFromReplies_;
Object.defineProperty(contacts_blockFromReplies_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Resolve a phone number to get user info, if their privacy settings allow it. */
class contacts_resolvePhone_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8AF94344;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.resolvePhone";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["phone", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.phone, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Phone number in international format, possibly obtained from a [phone number deep link](https://core.telegram.org/api/links#phone-number-links). */
        Object.defineProperty(this, "phone", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.phone = params.phone;
    }
}
exports.contacts_resolvePhone_ = contacts_resolvePhone_;
Object.defineProperty(contacts_resolvePhone_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Generates a [temporary profile link](https://core.telegram.org/api/links#temporary-profile-links) for the currently logged-in user. */
class contacts_exportContactToken_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF8654027;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.exportContactToken";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.contacts_exportContactToken_ = contacts_exportContactToken_;
Object.defineProperty(contacts_exportContactToken_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain user info from a [temporary profile link](https://core.telegram.org/api/links#temporary-profile-links). */
class contacts_importContactToken_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x13005788;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.importContactToken";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["token", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.token, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The token extracted from the [temporary profile link](https://core.telegram.org/api/links#temporary-profile-links). */
        Object.defineProperty(this, "token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.token = params.token;
    }
}
exports.contacts_importContactToken_ = contacts_importContactToken_;
Object.defineProperty(contacts_importContactToken_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit the [close friends list, see here »](https://core.telegram.org/api/privacy) for more info. */
class contacts_editCloseFriends_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBA6705F0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.editCloseFriends";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** Full list of user IDs of close friends, see [here](https://core.telegram.org/api/privacy) for more info. */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.contacts_editCloseFriends_ = contacts_editCloseFriends_;
Object.defineProperty(contacts_editCloseFriends_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Replace the contents of an entire [blocklist, see here for more info »](https://core.telegram.org/api/block). */
class contacts_setBlocked_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x94C65C76;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.setBlocked";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["my_stories_from", "true", "flags.0?true"],
            ["id", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.my_stories_from ?? null, "true", "flags.0?true"],
            [this.id, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to edit the story blocklist; if not set, will edit the main blocklist. See [here »](https://core.telegram.org/api/block) for differences between the two. */
        Object.defineProperty(this, "my_stories_from", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Full content of the blocklist. */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.my_stories_from = params.my_stories_from;
        this.id = params.id;
        this.limit = params.limit;
    }
}
exports.contacts_setBlocked_ = contacts_setBlocked_;
Object.defineProperty(contacts_setBlocked_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class contacts_getBirthdays_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDAEDA864;
    }
    static get [_1_tl_object_js_1.name]() {
        return "contacts.getBirthdays";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.contacts_getBirthdays_ = contacts_getBirthdays_;
Object.defineProperty(contacts_getBirthdays_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the list of messages by their IDs. */
class messages_getMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x63C66506;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputMessage], "Vector<InputMessage>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputMessage], "Vector<InputMessage>"],
        ];
    }
    constructor(params) {
        super();
        /** Message ID list */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.messages_getMessages_ = messages_getMessages_;
Object.defineProperty(messages_getMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the current user dialog list. */
class messages_getDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA0F4CB4F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["exclude_pinned", "true", "flags.0?true"],
            ["folder_id", "number", "flags.1?int"],
            ["offset_date", "number", "int"],
            ["offset_id", "number", "int"],
            ["offset_peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.exclude_pinned ?? null, "true", "flags.0?true"],
            [this.folder_id ?? null, "number", "flags.1?int"],
            [this.offset_date, "number", "int"],
            [this.offset_id, "number", "int"],
            [this.offset_peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Exclude pinned dialogs */
        Object.defineProperty(this, "exclude_pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders) */
        Object.defineProperty(this, "folder_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) (`top_message` ID used for pagination) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offset peer for pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of list elements to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.exclude_pinned = params.exclude_pinned;
        this.folder_id = params.folder_id;
        this.offset_date = params.offset_date;
        this.offset_id = params.offset_id;
        this.offset_peer = params.offset_peer;
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.messages_getDialogs_ = messages_getDialogs_;
Object.defineProperty(messages_getDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the conversation history with one interlocutor / within a chat */
class messages_getHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4423E6C5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["offset_id", "number", "int"],
            ["offset_date", "number", "int"],
            ["add_offset", "number", "int"],
            ["limit", "number", "int"],
            ["max_id", "number", "int"],
            ["min_id", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.offset_id, "number", "int"],
            [this.offset_date, "number", "int"],
            [this.add_offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.max_id, "number", "int"],
            [this.min_id, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Target peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return messages starting from the specified message ID */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return messages sent before the specified date */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of list elements to be skipped, negative values are also accepted. */
        Object.defineProperty(this, "add_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of results to return */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with IDs less than **max\_id** */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with IDs more than **min\_id** */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Result hash](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.offset_id = params.offset_id;
        this.offset_date = params.offset_date;
        this.add_offset = params.add_offset;
        this.limit = params.limit;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
        this.hash = params.hash;
    }
}
exports.messages_getHistory_ = messages_getHistory_;
Object.defineProperty(messages_getHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Search for messages. */
class messages_search_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x29EE847A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.search";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["q", "string", "string"],
            ["from_id", _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
            ["saved_peer_id", _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            ["saved_reaction", [_2_types_js_1.types._Reaction], "flags.3?Vector<Reaction>"],
            ["top_msg_id", "number", "flags.1?int"],
            ["filter", _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            ["min_date", "number", "int"],
            ["max_date", "number", "int"],
            ["offset_id", "number", "int"],
            ["add_offset", "number", "int"],
            ["limit", "number", "int"],
            ["max_id", "number", "int"],
            ["min_id", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.q, "string", "string"],
            [this.from_id ?? null, _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
            [this.saved_peer_id ?? null, _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            [this.saved_reaction ?? null, [_2_types_js_1.types._Reaction], "flags.3?Vector<Reaction>"],
            [this.top_msg_id ?? null, "number", "flags.1?int"],
            [this.filter, _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            [this.min_date, "number", "int"],
            [this.max_date, "number", "int"],
            [this.offset_id, "number", "int"],
            [this.add_offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.max_id, "number", "int"],
            [this.min_id, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** User or chat, histories with which are searched, or [(inputPeerEmpty)](https://core.telegram.org/constructor/inputPeerEmpty) constructor to search in all private chats and [normal groups (not channels) »](https://core.telegram.org/api/channel). Use [messages.searchGlobal](https://core.telegram.org/method/messages.searchGlobal) to search globally in all chats, groups, supergroups and channels. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Text search request */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return messages sent by the specified user ID */
        Object.defineProperty(this, "from_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search within the [saved message dialog »](https://core.telegram.org/api/saved-messages) with this ID. */
        Object.defineProperty(this, "saved_peer_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "saved_reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Thread ID](https://core.telegram.org/api/threads) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Filter to return only specified message types */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, only messages with a sending date bigger than the transferred one will be returned */
        Object.defineProperty(this, "min_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, only messages with a sending date smaller than the transferred one will be returned */
        Object.defineProperty(this, "max_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return messages starting from the specified message ID */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Additional offset](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "add_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Number of results to return](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Maximum message ID to return](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Minimum message ID to return](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.q = params.q;
        this.from_id = params.from_id;
        this.saved_peer_id = params.saved_peer_id;
        this.saved_reaction = params.saved_reaction;
        this.top_msg_id = params.top_msg_id;
        this.filter = params.filter;
        this.min_date = params.min_date;
        this.max_date = params.max_date;
        this.offset_id = params.offset_id;
        this.add_offset = params.add_offset;
        this.limit = params.limit;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
        this.hash = params.hash;
    }
}
exports.messages_search_ = messages_search_;
Object.defineProperty(messages_search_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Marks message history as read. */
class messages_readHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0E306D3A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["max_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.max_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Target user or group */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value is passed, only messages with identifiers less or equal than the given one will be read */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.max_id = params.max_id;
    }
}
exports.messages_readHistory_ = messages_readHistory_;
Object.defineProperty(messages_readHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes communication history. */
class messages_deleteHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB08F922A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["just_clear", "true", "flags.0?true"],
            ["revoke", "true", "flags.1?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["max_id", "number", "int"],
            ["min_date", "number", "flags.2?int"],
            ["max_date", "number", "flags.3?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.just_clear ?? null, "true", "flags.0?true"],
            [this.revoke ?? null, "true", "flags.1?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.max_id, "number", "int"],
            [this.min_date ?? null, "number", "flags.2?int"],
            [this.max_date ?? null, "number", "flags.3?int"],
        ];
    }
    constructor(params) {
        super();
        /** Just clear history for the current user, without actually removing messages for every chat user */
        Object.defineProperty(this, "just_clear", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to delete the message history for all chat participants */
        Object.defineProperty(this, "revoke", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User or chat, communication history of which will be deleted */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum ID of message to delete */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Delete all messages newer than this UNIX timestamp */
        Object.defineProperty(this, "min_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Delete all messages older than this UNIX timestamp */
        Object.defineProperty(this, "max_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.just_clear = params.just_clear;
        this.revoke = params.revoke;
        this.peer = params.peer;
        this.max_id = params.max_id;
        this.min_date = params.min_date;
        this.max_date = params.max_date;
    }
}
exports.messages_deleteHistory_ = messages_deleteHistory_;
Object.defineProperty(messages_deleteHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes messages by their identifiers. */
class messages_deleteMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE58E95D2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["revoke", "true", "flags.0?true"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.revoke ?? null, "true", "flags.0?true"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to delete messages for all participants of the chat */
        Object.defineProperty(this, "revoke", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID list */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.revoke = params.revoke;
        this.id = params.id;
    }
}
exports.messages_deleteMessages_ = messages_deleteMessages_;
Object.defineProperty(messages_deleteMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Confirms receipt of messages by a client, cancels PUSH-notification sending. */
class messages_receivedMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x05A954C0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.receivedMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["max_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.max_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Maximum message ID available in a client. */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.max_id = params.max_id;
    }
}
exports.messages_receivedMessages_ = messages_receivedMessages_;
Object.defineProperty(messages_receivedMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a current user typing event (see [SendMessageAction](https://core.telegram.org/type/SendMessageAction) for all event types) to a conversation partner or group. */
class messages_setTyping_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x58943EE2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setTyping";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
            ["action", _2_types_js_1.types._SendMessageAction, "SendMessageAction"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
            [this.action, _2_types_js_1.types._SendMessageAction, "SendMessageAction"],
        ];
    }
    constructor(params) {
        super();
        /** Target user or group */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Topic ID](https://core.telegram.org/api/threads) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Type of action */
        Object.defineProperty(this, "action", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.top_msg_id = params.top_msg_id;
        this.action = params.action;
    }
}
exports.messages_setTyping_ = messages_setTyping_;
Object.defineProperty(messages_setTyping_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a message to a chat */
class messages_sendMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDFF8042C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["no_webpage", "true", "flags.1?true"],
            ["silent", "true", "flags.5?true"],
            ["background", "true", "flags.6?true"],
            ["clear_draft", "true", "flags.7?true"],
            ["noforwards", "true", "flags.14?true"],
            ["update_stickersets_order", "true", "flags.15?true"],
            ["invert_media", "true", "flags.16?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            ["message", "string", "string"],
            ["random_id", "bigint", "long"],
            ["reply_markup", _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            ["schedule_date", "number", "flags.10?int"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            ["quick_reply_shortcut", _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.no_webpage ?? null, "true", "flags.1?true"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.background ?? null, "true", "flags.6?true"],
            [this.clear_draft ?? null, "true", "flags.7?true"],
            [this.noforwards ?? null, "true", "flags.14?true"],
            [this.update_stickersets_order ?? null, "true", "flags.15?true"],
            [this.invert_media ?? null, "true", "flags.16?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            [this.message, "string", "string"],
            [this.random_id, "bigint", "long"],
            [this.reply_markup ?? null, _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            [this.schedule_date ?? null, "number", "flags.10?int"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            [this.quick_reply_shortcut ?? null, _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag to disable generation of the webpage preview */
        Object.defineProperty(this, "no_webpage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send this message silently (no notifications for the receivers) */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send this message as background message */
        Object.defineProperty(this, "background", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Clear the draft field */
        Object.defineProperty(this, "clear_draft", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled */
        Object.defineProperty(this, "noforwards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to move used stickersets to top, [see here for more info on this flag »](https://core.telegram.org/api/stickers#recent-stickersets) */
        Object.defineProperty(this, "update_stickersets_order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, any eventual webpage preview will be shown on top of the message instead of at the bottom. */
        Object.defineProperty(this, "invert_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The destination where the message will be sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the message should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The message */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID required to prevent message resending */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Reply markup for sending bot buttons */
        Object.defineProperty(this, "reply_markup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message [entities](https://core.telegram.org/api/entities) for sending styled text */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message date for [scheduled messages](https://core.telegram.org/api/scheduled-messages) */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send this message as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "quick_reply_shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.no_webpage = params.no_webpage;
        this.silent = params.silent;
        this.background = params.background;
        this.clear_draft = params.clear_draft;
        this.noforwards = params.noforwards;
        this.update_stickersets_order = params.update_stickersets_order;
        this.invert_media = params.invert_media;
        this.peer = params.peer;
        this.reply_to = params.reply_to;
        this.message = params.message;
        this.random_id = params.random_id;
        this.reply_markup = params.reply_markup;
        this.entities = params.entities;
        this.schedule_date = params.schedule_date;
        this.send_as = params.send_as;
        this.quick_reply_shortcut = params.quick_reply_shortcut;
    }
}
exports.messages_sendMessage_ = messages_sendMessage_;
Object.defineProperty(messages_sendMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send a media */
class messages_sendMedia_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7BD66041;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendMedia";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.5?true"],
            ["background", "true", "flags.6?true"],
            ["clear_draft", "true", "flags.7?true"],
            ["noforwards", "true", "flags.14?true"],
            ["update_stickersets_order", "true", "flags.15?true"],
            ["invert_media", "true", "flags.16?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            ["media", _2_types_js_1.types._InputMedia, "InputMedia"],
            ["message", "string", "string"],
            ["random_id", "bigint", "long"],
            ["reply_markup", _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            ["schedule_date", "number", "flags.10?int"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            ["quick_reply_shortcut", _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.background ?? null, "true", "flags.6?true"],
            [this.clear_draft ?? null, "true", "flags.7?true"],
            [this.noforwards ?? null, "true", "flags.14?true"],
            [this.update_stickersets_order ?? null, "true", "flags.15?true"],
            [this.invert_media ?? null, "true", "flags.16?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            [this.media, _2_types_js_1.types._InputMedia, "InputMedia"],
            [this.message, "string", "string"],
            [this.random_id, "bigint", "long"],
            [this.reply_markup ?? null, _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            [this.schedule_date ?? null, "number", "flags.10?int"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            [this.quick_reply_shortcut ?? null, _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    constructor(params) {
        super();
        /** Send message silently (no notification should be triggered) */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send message in background */
        Object.defineProperty(this, "background", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Clear the draft */
        Object.defineProperty(this, "clear_draft", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled */
        Object.defineProperty(this, "noforwards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to move used stickersets to top, [see here for more info on this flag »](https://core.telegram.org/api/stickers#recent-stickersets) */
        Object.defineProperty(this, "update_stickersets_order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, any eventual webpage preview will be shown on top of the message instead of at the bottom. */
        Object.defineProperty(this, "invert_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Destination */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the message should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Attached media */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Caption */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random ID to avoid resending the same message */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Reply markup for bot keyboards */
        Object.defineProperty(this, "reply_markup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message [entities](https://core.telegram.org/api/entities) for styled text */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message date for [scheduled messages](https://core.telegram.org/api/scheduled-messages) */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send this message as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "quick_reply_shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.background = params.background;
        this.clear_draft = params.clear_draft;
        this.noforwards = params.noforwards;
        this.update_stickersets_order = params.update_stickersets_order;
        this.invert_media = params.invert_media;
        this.peer = params.peer;
        this.reply_to = params.reply_to;
        this.media = params.media;
        this.message = params.message;
        this.random_id = params.random_id;
        this.reply_markup = params.reply_markup;
        this.entities = params.entities;
        this.schedule_date = params.schedule_date;
        this.send_as = params.send_as;
        this.quick_reply_shortcut = params.quick_reply_shortcut;
    }
}
exports.messages_sendMedia_ = messages_sendMedia_;
Object.defineProperty(messages_sendMedia_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Forwards messages by their IDs. */
class messages_forwardMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD5039208;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.forwardMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.5?true"],
            ["background", "true", "flags.6?true"],
            ["with_my_score", "true", "flags.8?true"],
            ["drop_author", "true", "flags.11?true"],
            ["drop_media_captions", "true", "flags.12?true"],
            ["noforwards", "true", "flags.14?true"],
            ["from_peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
            ["random_id", ["bigint"], "Vector<long>"],
            ["to_peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.9?int"],
            ["schedule_date", "number", "flags.10?int"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            ["quick_reply_shortcut", _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.background ?? null, "true", "flags.6?true"],
            [this.with_my_score ?? null, "true", "flags.8?true"],
            [this.drop_author ?? null, "true", "flags.11?true"],
            [this.drop_media_captions ?? null, "true", "flags.12?true"],
            [this.noforwards ?? null, "true", "flags.14?true"],
            [this.from_peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
            [this.random_id, ["bigint"], "Vector<long>"],
            [this.to_peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.9?int"],
            [this.schedule_date ?? null, "number", "flags.10?int"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            [this.quick_reply_shortcut ?? null, _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to send messages silently (no notification will be triggered on the destination clients) */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to send the message in background */
        Object.defineProperty(this, "background", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** When forwarding games, whether to include your score in the game */
        Object.defineProperty(this, "with_my_score", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to forward messages without quoting the original author */
        Object.defineProperty(this, "drop_author", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to strip captions from media */
        Object.defineProperty(this, "drop_media_captions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only for bots, disallows further re-forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled */
        Object.defineProperty(this, "noforwards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Source of messages */
        Object.defineProperty(this, "from_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of messages */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random ID to prevent resending of messages */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Destination peer */
        Object.defineProperty(this, "to_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Destination [forum topic](https://core.telegram.org/api/forum#forum-topics) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message date for scheduled messages */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Forward the messages as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "quick_reply_shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.background = params.background;
        this.with_my_score = params.with_my_score;
        this.drop_author = params.drop_author;
        this.drop_media_captions = params.drop_media_captions;
        this.noforwards = params.noforwards;
        this.from_peer = params.from_peer;
        this.id = params.id;
        this.random_id = params.random_id;
        this.to_peer = params.to_peer;
        this.top_msg_id = params.top_msg_id;
        this.schedule_date = params.schedule_date;
        this.send_as = params.send_as;
        this.quick_reply_shortcut = params.quick_reply_shortcut;
    }
}
exports.messages_forwardMessages_ = messages_forwardMessages_;
Object.defineProperty(messages_forwardMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a new incoming chat for spam, if the [peer settings](https://core.telegram.org/constructor/peerSettings) of the chat allow us to do that */
class messages_reportSpam_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCF1592DB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reportSpam";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Peer to report */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_reportSpam_ = messages_reportSpam_;
Object.defineProperty(messages_reportSpam_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get peer settings */
class messages_getPeerSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEFD9A6A2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getPeerSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_getPeerSettings_ = messages_getPeerSettings_;
Object.defineProperty(messages_getPeerSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a message in a chat for violation of telegram's Terms of Service */
class messages_report_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8953AB4E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.report";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
            ["reason", _2_types_js_1.types._ReportReason, "ReportReason"],
            ["message", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
            [this.reason, _2_types_js_1.types._ReportReason, "ReportReason"],
            [this.message, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of messages to report */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Why are these messages being reported */
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Comment for report moderation */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.reason = params.reason;
        this.message = params.message;
    }
}
exports.messages_report_ = messages_report_;
Object.defineProperty(messages_report_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns chat basic info on their IDs. */
class messages_getChats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x49E9528F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getChats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** List of chat IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.messages_getChats_ = messages_getChats_;
Object.defineProperty(messages_getChats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get full info about a [basic group](https://core.telegram.org/api/channel#basic-groups). */
class messages_getFullChat_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAEB00B34;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getFullChat";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Basic group](https://core.telegram.org/api/channel#basic-groups) ID. */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
    }
}
exports.messages_getFullChat_ = messages_getFullChat_;
Object.defineProperty(messages_getFullChat_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Changes chat name and sends a service message on it. */
class messages_editChatTitle_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x73783FFD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editChatTitle";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
            ["title", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
            [this.title, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Chat ID */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New chat name, different from the old one */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
        this.title = params.title;
    }
}
exports.messages_editChatTitle_ = messages_editChatTitle_;
Object.defineProperty(messages_editChatTitle_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Changes chat photo and sends a service message on it */
class messages_editChatPhoto_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x35DDD674;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editChatPhoto";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
            ["photo", _2_types_js_1.types._InputChatPhoto, "InputChatPhoto"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
            [this.photo, _2_types_js_1.types._InputChatPhoto, "InputChatPhoto"],
        ];
    }
    constructor(params) {
        super();
        /** Chat ID */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Photo to be set */
        Object.defineProperty(this, "photo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
        this.photo = params.photo;
    }
}
exports.messages_editChatPhoto_ = messages_editChatPhoto_;
Object.defineProperty(messages_editChatPhoto_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Adds a user to a chat and sends a service message on it. */
class messages_addChatUser_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCBC6D107;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.addChatUser";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["fwd_limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.fwd_limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Chat ID */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User ID to be added */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of last messages to be forwarded */
        Object.defineProperty(this, "fwd_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
        this.user_id = params.user_id;
        this.fwd_limit = params.fwd_limit;
    }
}
exports.messages_addChatUser_ = messages_addChatUser_;
Object.defineProperty(messages_addChatUser_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes a user from a chat and sends a service message on it. */
class messages_deleteChatUser_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA2185CAB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteChatUser";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["revoke_history", "true", "flags.0?true"],
            ["chat_id", "bigint", "long"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.revoke_history ?? null, "true", "flags.0?true"],
            [this.chat_id, "bigint", "long"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** Remove the entire chat history of the specified user in this chat. */
        Object.defineProperty(this, "revoke_history", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chat ID */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User ID to be deleted */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.revoke_history = params.revoke_history;
        this.chat_id = params.chat_id;
        this.user_id = params.user_id;
    }
}
exports.messages_deleteChatUser_ = messages_deleteChatUser_;
Object.defineProperty(messages_deleteChatUser_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Creates a new chat. */
class messages_createChat_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x92CEDDD4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.createChat";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["users", [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
            ["title", "string", "string"],
            ["ttl_period", "number", "flags.0?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.users, [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
            [this.title, "string", "string"],
            [this.ttl_period ?? null, "number", "flags.0?int"],
        ];
    }
    constructor(params) {
        super();
        /** List of user IDs to be invited */
        Object.defineProperty(this, "users", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chat name */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Time-to-live of all messages that will be sent in the chat: once message.date+message.ttl\_period === time(), the message will be deleted on the server, and must be deleted locally as well. You can use [messages.setDefaultHistoryTTL](https://core.telegram.org/method/messages.setDefaultHistoryTTL) to edit this value later. */
        Object.defineProperty(this, "ttl_period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.users = params.users;
        this.title = params.title;
        this.ttl_period = params.ttl_period;
    }
}
exports.messages_createChat_ = messages_createChat_;
Object.defineProperty(messages_createChat_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns configuration parameters for Diffie-Hellman key generation. Can also return a random sequence of bytes of required length. */
class messages_getDhConfig_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x26CF8950;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDhConfig";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["version", "number", "int"],
            ["random_length", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.version, "number", "int"],
            [this.random_length, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Value of the **version** parameter from [messages.dhConfig](https://core.telegram.org/constructor/messages.dhConfig), available at the client */
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Length of the required random sequence */
        Object.defineProperty(this, "random_length", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.version = params.version;
        this.random_length = params.random_length;
    }
}
exports.messages_getDhConfig_ = messages_getDhConfig_;
Object.defineProperty(messages_getDhConfig_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a request to start a secret chat to the user. */
class messages_requestEncryption_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF64DAF43;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.requestEncryption";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["random_id", "number", "int"],
            ["g_a", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.random_id, "number", "int"],
            [this.g_a, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client request ID required to prevent resending. This also doubles as the chat ID. */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** `A = g ^ a mod p`, see [Wikipedia](https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange) */
        Object.defineProperty(this, "g_a", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
        this.random_id = params.random_id;
        this.g_a = params.g_a;
    }
}
exports.messages_requestEncryption_ = messages_requestEncryption_;
Object.defineProperty(messages_requestEncryption_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Confirms creation of a secret chat */
class messages_acceptEncryption_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3DBC0415;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.acceptEncryption";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["g_b", Uint8Array, "bytes"],
            ["key_fingerprint", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.g_b, Uint8Array, "bytes"],
            [this.key_fingerprint, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Secret chat ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** `B = g ^ b mod p`, see [Wikipedia](https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange) */
        Object.defineProperty(this, "g_b", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** 64-bit fingerprint of the received key */
        Object.defineProperty(this, "key_fingerprint", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.g_b = params.g_b;
        this.key_fingerprint = params.key_fingerprint;
    }
}
exports.messages_acceptEncryption_ = messages_acceptEncryption_;
Object.defineProperty(messages_acceptEncryption_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Cancels a request for creation and/or delete info on secret chat. */
class messages_discardEncryption_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF393AEA0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.discardEncryption";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["delete_history", "true", "flags.0?true"],
            ["chat_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.delete_history ?? null, "true", "flags.0?true"],
            [this.chat_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to delete the entire chat history for the other user as well */
        Object.defineProperty(this, "delete_history", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Secret chat ID */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.delete_history = params.delete_history;
        this.chat_id = params.chat_id;
    }
}
exports.messages_discardEncryption_ = messages_discardEncryption_;
Object.defineProperty(messages_discardEncryption_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send typing event by the current user to a secret chat. */
class messages_setEncryptedTyping_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x791451ED;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setEncryptedTyping";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["typing", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.typing, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Secret chat ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Typing.
        **Possible values**:
        [(boolTrue)](https://core.telegram.org/constructor/boolTrue), if the user started typing and more than **5 seconds** have passed since the last request
        [(boolFalse)](https://core.telegram.org/constructor/boolFalse), if the user stopped typing */
        Object.defineProperty(this, "typing", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.typing = params.typing;
    }
}
exports.messages_setEncryptedTyping_ = messages_setEncryptedTyping_;
Object.defineProperty(messages_setEncryptedTyping_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Marks message history within a secret chat as read. */
class messages_readEncryptedHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7F4B690A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readEncryptedHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["max_date", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.max_date, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Secret chat ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum date value for received messages in history */
        Object.defineProperty(this, "max_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.max_date = params.max_date;
    }
}
exports.messages_readEncryptedHistory_ = messages_readEncryptedHistory_;
Object.defineProperty(messages_readEncryptedHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a text message to a secret chat. */
class messages_sendEncrypted_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x44FA7A15;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendEncrypted";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["random_id", "bigint", "long"],
            ["data", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.random_id, "bigint", "long"],
            [this.data, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Send encrypted message without a notification */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Secret chat ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID, necessary to avoid message resending */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** TL-serialization of [DecryptedMessage](https://core.telegram.org/type/DecryptedMessage) type, encrypted with a key that was created during chat initialization */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.peer = params.peer;
        this.random_id = params.random_id;
        this.data = params.data;
    }
}
exports.messages_sendEncrypted_ = messages_sendEncrypted_;
Object.defineProperty(messages_sendEncrypted_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a message with a file attachment to a secret chat */
class messages_sendEncryptedFile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5559481D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendEncryptedFile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["random_id", "bigint", "long"],
            ["data", Uint8Array, "bytes"],
            ["file", _2_types_js_1.types._InputEncryptedFile, "InputEncryptedFile"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.random_id, "bigint", "long"],
            [this.data, Uint8Array, "bytes"],
            [this.file, _2_types_js_1.types._InputEncryptedFile, "InputEncryptedFile"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to send the file without triggering a notification */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Secret chat ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID necessary to prevent message resending */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** TL-serialization of [DecryptedMessage](https://core.telegram.org/type/DecryptedMessage) type, encrypted with a key generated during chat initialization */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File attachment for the secret chat */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.peer = params.peer;
        this.random_id = params.random_id;
        this.data = params.data;
        this.file = params.file;
    }
}
exports.messages_sendEncryptedFile_ = messages_sendEncryptedFile_;
Object.defineProperty(messages_sendEncryptedFile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a service message to a secret chat. */
class messages_sendEncryptedService_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x32D439A4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendEncryptedService";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["random_id", "bigint", "long"],
            ["data", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.random_id, "bigint", "long"],
            [this.data, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Secret chat ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID required to prevent message resending */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** TL-serialization of [DecryptedMessage](https://core.telegram.org/type/DecryptedMessage) type, encrypted with a key generated during chat initialization */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.random_id = params.random_id;
        this.data = params.data;
    }
}
exports.messages_sendEncryptedService_ = messages_sendEncryptedService_;
Object.defineProperty(messages_sendEncryptedService_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Confirms receipt of messages in a secret chat by client, cancels push notifications.
The method returns a list of **random\_id**s of messages for which push notifications were cancelled. */
class messages_receivedQueue_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x55A5BB66;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.receivedQueue";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["max_qts", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.max_qts, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Maximum qts value available at the client */
        Object.defineProperty(this, "max_qts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.max_qts = params.max_qts;
    }
}
exports.messages_receivedQueue_ = messages_receivedQueue_;
Object.defineProperty(messages_receivedQueue_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a secret chat for spam */
class messages_reportEncryptedSpam_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4B0C8C0F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reportEncryptedSpam";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
        ];
    }
    constructor(params) {
        super();
        /** The secret chat to report */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_reportEncryptedSpam_ = messages_reportEncryptedSpam_;
Object.defineProperty(messages_reportEncryptedSpam_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Notifies the sender about the recipient having listened a voice message or watched a video. */
class messages_readMessageContents_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x36A73F77;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readMessageContents";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Message ID list */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.messages_readMessageContents_ = messages_readMessageContents_;
Object.defineProperty(messages_readMessageContents_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get stickers by emoji */
class messages_getStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD5A5D3A1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["emoticon", "string", "string"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.emoticon, "string", "string"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** The emoji */
        Object.defineProperty(this, "emoticon", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.emoticon = params.emoticon;
        this.hash = params.hash;
    }
}
exports.messages_getStickers_ = messages_getStickers_;
Object.defineProperty(messages_getStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get all installed stickers */
class messages_getAllStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB8A0A1A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAllStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getAllStickers_ = messages_getAllStickers_;
Object.defineProperty(messages_getAllStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get preview of webpage */
class messages_getWebPagePreview_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8B68B0CC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getWebPagePreview";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["message", "string", "string"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.message, "string", "string"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
        ];
    }
    constructor(params) {
        super();
        /** Message from which to extract the preview */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Message entities for styled text](https://core.telegram.org/api/entities) */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.message = params.message;
        this.entities = params.entities;
    }
}
exports.messages_getWebPagePreview_ = messages_getWebPagePreview_;
Object.defineProperty(messages_getWebPagePreview_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Export an invite link for a chat */
class messages_exportChatInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA02CE5D5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.exportChatInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["legacy_revoke_permanent", "true", "flags.2?true"],
            ["request_needed", "true", "flags.3?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["expire_date", "number", "flags.0?int"],
            ["usage_limit", "number", "flags.1?int"],
            ["title", "string", "flags.4?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.legacy_revoke_permanent ?? null, "true", "flags.2?true"],
            [this.request_needed ?? null, "true", "flags.3?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.expire_date ?? null, "number", "flags.0?int"],
            [this.usage_limit ?? null, "number", "flags.1?int"],
            [this.title ?? null, "string", "flags.4?string"],
        ];
    }
    constructor(params) {
        super();
        /** Legacy flag, reproducing legacy behavior of this method: if set, revokes all previous links before creating a new one. Kept for bot API BC, should not be used by modern clients. */
        Object.defineProperty(this, "legacy_revoke_permanent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether admin confirmation is required before admitting each separate user into the chat */
        Object.defineProperty(this, "request_needed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Expiration date */
        Object.defineProperty(this, "expire_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of users that can join using this link */
        Object.defineProperty(this, "usage_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Description of the invite link, visible only to administrators */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.legacy_revoke_permanent = params.legacy_revoke_permanent;
        this.request_needed = params.request_needed;
        this.peer = params.peer;
        this.expire_date = params.expire_date;
        this.usage_limit = params.usage_limit;
        this.title = params.title;
    }
}
exports.messages_exportChatInvite_ = messages_exportChatInvite_;
Object.defineProperty(messages_exportChatInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check the validity of a chat invite link and get basic info about it */
class messages_checkChatInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3EADB1BB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.checkChatInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Invite hash from [chat invite deep link »](https://core.telegram.org/api/links#chat-invite-links). */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_checkChatInvite_ = messages_checkChatInvite_;
Object.defineProperty(messages_checkChatInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Import a chat invite and join a private chat/supergroup/channel */
class messages_importChatInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6C50051C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.importChatInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** `hash` from a [chat invite deep link](https://core.telegram.org/api/links#chat-invite-links) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_importChatInvite_ = messages_importChatInvite_;
Object.defineProperty(messages_importChatInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about a stickerset */
class messages_getStickerSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC8A0EC74;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getStickerSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Stickerset */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
        this.hash = params.hash;
    }
}
exports.messages_getStickerSet_ = messages_getStickerSet_;
Object.defineProperty(messages_getStickerSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Install a stickerset */
class messages_installStickerSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC78FE460;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.installStickerSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            ["archived", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            [this.archived, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Stickerset to install */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to archive stickerset */
        Object.defineProperty(this, "archived", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
        this.archived = params.archived;
    }
}
exports.messages_installStickerSet_ = messages_installStickerSet_;
Object.defineProperty(messages_installStickerSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Uninstall a stickerset */
class messages_uninstallStickerSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF96E55DE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.uninstallStickerSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    constructor(params) {
        super();
        /** The stickerset to uninstall */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
    }
}
exports.messages_uninstallStickerSet_ = messages_uninstallStickerSet_;
Object.defineProperty(messages_uninstallStickerSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Start a conversation with a bot using a [deep linking parameter](https://core.telegram.org/api/links#bot-links) */
class messages_startBot_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE6DF7378;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.startBot";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["random_id", "bigint", "long"],
            ["start_param", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.random_id, "bigint", "long"],
            [this.start_param, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The bot */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The chat where to start the bot, can be the bot's private chat or a group */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random ID to avoid resending the same message */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Deep linking parameter](https://core.telegram.org/api/links#bot-links) */
        Object.defineProperty(this, "start_param", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.peer = params.peer;
        this.random_id = params.random_id;
        this.start_param = params.start_param;
    }
}
exports.messages_startBot_ = messages_startBot_;
Object.defineProperty(messages_startBot_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get and increase the view counter of a message sent or forwarded from a [channel](https://core.telegram.org/api/channel) */
class messages_getMessagesViews_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5784D3E1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMessagesViews";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
            ["increment", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
            [this.increment, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the message was found */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of message */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to mark the message as viewed and increment the view counter */
        Object.defineProperty(this, "increment", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.increment = params.increment;
    }
}
exports.messages_getMessagesViews_ = messages_getMessagesViews_;
Object.defineProperty(messages_getMessagesViews_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Make a user admin in a [basic group](https://core.telegram.org/api/channel#basic-groups). */
class messages_editChatAdmin_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA85BD1C2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editChatAdmin";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["is_admin", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.is_admin, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** The ID of the group */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The user to make admin */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to make them admin */
        Object.defineProperty(this, "is_admin", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
        this.user_id = params.user_id;
        this.is_admin = params.is_admin;
    }
}
exports.messages_editChatAdmin_ = messages_editChatAdmin_;
Object.defineProperty(messages_editChatAdmin_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Turn a [basic group into a supergroup](https://core.telegram.org/api/channel#migration) */
class messages_migrateChat_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA2875319;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.migrateChat";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Basic group](https://core.telegram.org/api/channel#basic-groups) to migrate */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
    }
}
exports.messages_migrateChat_ = messages_migrateChat_;
Object.defineProperty(messages_migrateChat_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Search for messages and peers globally */
class messages_searchGlobal_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4BC6589A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.searchGlobal";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["folder_id", "number", "flags.0?int"],
            ["q", "string", "string"],
            ["filter", _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            ["min_date", "number", "int"],
            ["max_date", "number", "int"],
            ["offset_rate", "number", "int"],
            ["offset_peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["offset_id", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.folder_id ?? null, "number", "flags.0?int"],
            [this.q, "string", "string"],
            [this.filter, _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            [this.min_date, "number", "int"],
            [this.max_date, "number", "int"],
            [this.offset_rate, "number", "int"],
            [this.offset_peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.offset_id, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders) */
        Object.defineProperty(this, "folder_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Global search filter */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was specified, the method will return only messages with date bigger than min\_date */
        Object.defineProperty(this, "min_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with date smaller than max\_date */
        Object.defineProperty(this, "max_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Initially 0, then set to the [`next_rate` parameter of messages.messagesSlice](https://core.telegram.org/constructor/messages.messagesSlice) */
        Object.defineProperty(this, "offset_rate", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.folder_id = params.folder_id;
        this.q = params.q;
        this.filter = params.filter;
        this.min_date = params.min_date;
        this.max_date = params.max_date;
        this.offset_rate = params.offset_rate;
        this.offset_peer = params.offset_peer;
        this.offset_id = params.offset_id;
        this.limit = params.limit;
    }
}
exports.messages_searchGlobal_ = messages_searchGlobal_;
Object.defineProperty(messages_searchGlobal_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder installed stickersets */
class messages_reorderStickerSets_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x78337739;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reorderStickerSets";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["masks", "true", "flags.0?true"],
            ["emojis", "true", "flags.1?true"],
            ["order", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.masks ?? null, "true", "flags.0?true"],
            [this.emojis ?? null, "true", "flags.1?true"],
            [this.order, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** Reorder mask stickersets */
        Object.defineProperty(this, "masks", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Reorder [custom emoji stickersets](https://core.telegram.org/api/custom-emoji) */
        Object.defineProperty(this, "emojis", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New stickerset order by stickerset IDs */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.masks = params.masks;
        this.emojis = params.emojis;
        this.order = params.order;
    }
}
exports.messages_reorderStickerSets_ = messages_reorderStickerSets_;
Object.defineProperty(messages_reorderStickerSets_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a document by its SHA256 hash, mainly used for gifs */
class messages_getDocumentByHash_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB1F2061F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDocumentByHash";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["sha256", Uint8Array, "bytes"],
            ["size", "bigint", "long"],
            ["mime_type", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.sha256, Uint8Array, "bytes"],
            [this.size, "bigint", "long"],
            [this.mime_type, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** SHA256 of file */
        Object.defineProperty(this, "sha256", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Size of the file in bytes */
        Object.defineProperty(this, "size", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Mime type */
        Object.defineProperty(this, "mime_type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.sha256 = params.sha256;
        this.size = params.size;
        this.mime_type = params.mime_type;
    }
}
exports.messages_getDocumentByHash_ = messages_getDocumentByHash_;
Object.defineProperty(messages_getDocumentByHash_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get saved GIFs */
class messages_getSavedGifs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5CF09635;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSavedGifs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getSavedGifs_ = messages_getSavedGifs_;
Object.defineProperty(messages_getSavedGifs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Add GIF to saved gifs list */
class messages_saveGif_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x327A30CB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.saveGif";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["unsave", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.unsave, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** GIF to save */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to remove GIF from saved gifs list */
        Object.defineProperty(this, "unsave", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.unsave = params.unsave;
    }
}
exports.messages_saveGif_ = messages_saveGif_;
Object.defineProperty(messages_saveGif_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Query an inline bot */
class messages_getInlineBotResults_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x514E999D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getInlineBotResults";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["geo_point", _2_types_js_1.types._InputGeoPoint, "flags.0?InputGeoPoint"],
            ["query", "string", "string"],
            ["offset", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.geo_point ?? null, _2_types_js_1.types._InputGeoPoint, "flags.0?InputGeoPoint"],
            [this.query, "string", "string"],
            [this.offset, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The bot to query */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The currently opened chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The geolocation, if requested */
        Object.defineProperty(this, "geo_point", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The query */
        Object.defineProperty(this, "query", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The offset within the results, will be passed directly as-is to the bot. */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.peer = params.peer;
        this.geo_point = params.geo_point;
        this.query = params.query;
        this.offset = params.offset;
    }
}
exports.messages_getInlineBotResults_ = messages_getInlineBotResults_;
Object.defineProperty(messages_getInlineBotResults_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Answer an inline query, for bots only */
class messages_setInlineBotResults_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBB12A419;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setInlineBotResults";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["gallery", "true", "flags.0?true"],
            ["private", "true", "flags.1?true"],
            ["query_id", "bigint", "long"],
            ["results", [_2_types_js_1.types._InputBotInlineResult], "Vector<InputBotInlineResult>"],
            ["cache_time", "number", "int"],
            ["next_offset", "string", "flags.2?string"],
            ["switch_pm", _2_types_js_1.types._InlineBotSwitchPM, "flags.3?InlineBotSwitchPM"],
            ["switch_webview", _2_types_js_1.types._InlineBotWebView, "flags.4?InlineBotWebView"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.gallery ?? null, "true", "flags.0?true"],
            [this.private ?? null, "true", "flags.1?true"],
            [this.query_id, "bigint", "long"],
            [this.results, [_2_types_js_1.types._InputBotInlineResult], "Vector<InputBotInlineResult>"],
            [this.cache_time, "number", "int"],
            [this.next_offset ?? null, "string", "flags.2?string"],
            [this.switch_pm ?? null, _2_types_js_1.types._InlineBotSwitchPM, "flags.3?InlineBotSwitchPM"],
            [this.switch_webview ?? null, _2_types_js_1.types._InlineBotWebView, "flags.4?InlineBotWebView"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag if the results are composed of media files */
        Object.defineProperty(this, "gallery", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Set this flag if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query */
        Object.defineProperty(this, "private", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique identifier for the answered query */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Vector of results for the inline query */
        Object.defineProperty(this, "results", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300. */
        Object.defineProperty(this, "cache_time", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don't support pagination. Offset length can't exceed 64 bytes. */
        Object.defineProperty(this, "next_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If passed, clients will display a button on top of the remaining inline result list with the specified text, that switches the user to a private chat with the bot and sends the bot a start message with a certain parameter. */
        Object.defineProperty(this, "switch_pm", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If passed, clients will display a button on top of the remaining inline result list with the specified text, that switches the user to the specified [inline mode mini app](https://core.telegram.org/api/bots/webapps#inline-mode-mini-apps). */
        Object.defineProperty(this, "switch_webview", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.gallery = params.gallery;
        this.private = params.private;
        this.query_id = params.query_id;
        this.results = params.results;
        this.cache_time = params.cache_time;
        this.next_offset = params.next_offset;
        this.switch_pm = params.switch_pm;
        this.switch_webview = params.switch_webview;
    }
}
exports.messages_setInlineBotResults_ = messages_setInlineBotResults_;
Object.defineProperty(messages_setInlineBotResults_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send a result obtained using [messages.getInlineBotResults](https://core.telegram.org/method/messages.getInlineBotResults). */
class messages_sendInlineBotResult_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3EBEE86A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendInlineBotResult";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.5?true"],
            ["background", "true", "flags.6?true"],
            ["clear_draft", "true", "flags.7?true"],
            ["hide_via", "true", "flags.11?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            ["random_id", "bigint", "long"],
            ["query_id", "bigint", "long"],
            ["id", "string", "string"],
            ["schedule_date", "number", "flags.10?int"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            ["quick_reply_shortcut", _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.background ?? null, "true", "flags.6?true"],
            [this.clear_draft ?? null, "true", "flags.7?true"],
            [this.hide_via ?? null, "true", "flags.11?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            [this.random_id, "bigint", "long"],
            [this.query_id, "bigint", "long"],
            [this.id, "string", "string"],
            [this.schedule_date ?? null, "number", "flags.10?int"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            [this.quick_reply_shortcut ?? null, _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to send the message silently (no notification will be triggered on the other client) */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to send the message in background */
        Object.defineProperty(this, "background", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to clear the [draft](https://core.telegram.org/api/drafts) */
        Object.defineProperty(this, "clear_draft", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to hide the `via @botname` in the resulting message (only for bot usernames encountered in the [config](https://core.telegram.org/constructor/config)) */
        Object.defineProperty(this, "hide_via", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Destination */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the message should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random ID to avoid resending the same query */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query ID from [messages.getInlineBotResults](https://core.telegram.org/method/messages.getInlineBotResults) */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Result ID from [messages.getInlineBotResults](https://core.telegram.org/method/messages.getInlineBotResults) */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message date for scheduled messages */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send this message as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "quick_reply_shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.background = params.background;
        this.clear_draft = params.clear_draft;
        this.hide_via = params.hide_via;
        this.peer = params.peer;
        this.reply_to = params.reply_to;
        this.random_id = params.random_id;
        this.query_id = params.query_id;
        this.id = params.id;
        this.schedule_date = params.schedule_date;
        this.send_as = params.send_as;
        this.quick_reply_shortcut = params.quick_reply_shortcut;
    }
}
exports.messages_sendInlineBotResult_ = messages_sendInlineBotResult_;
Object.defineProperty(messages_sendInlineBotResult_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Find out if a media message's caption can be edited */
class messages_getMessageEditData_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFDA68D36;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMessageEditData";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the media was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of message */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_getMessageEditData_ = messages_getMessageEditData_;
Object.defineProperty(messages_getMessageEditData_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit message */
class messages_editMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDFD14005;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["no_webpage", "true", "flags.1?true"],
            ["invert_media", "true", "flags.16?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["message", "string", "flags.11?string"],
            ["media", _2_types_js_1.types._InputMedia, "flags.14?InputMedia"],
            ["reply_markup", _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            ["schedule_date", "number", "flags.15?int"],
            ["quick_reply_shortcut_id", "number", "flags.17?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.no_webpage ?? null, "true", "flags.1?true"],
            [this.invert_media ?? null, "true", "flags.16?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.message ?? null, "string", "flags.11?string"],
            [this.media ?? null, _2_types_js_1.types._InputMedia, "flags.14?InputMedia"],
            [this.reply_markup ?? null, _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            [this.schedule_date ?? null, "number", "flags.15?int"],
            [this.quick_reply_shortcut_id ?? null, "number", "flags.17?int"],
        ];
    }
    constructor(params) {
        super();
        /** Disable webpage preview */
        Object.defineProperty(this, "no_webpage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, any eventual webpage preview will be shown on top of the message instead of at the bottom. */
        Object.defineProperty(this, "invert_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Where was the message sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the message to edit */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New message */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New attached media */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Reply markup for inline keyboards */
        Object.defineProperty(this, "reply_markup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Message entities for styled text](https://core.telegram.org/api/entities) */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message date for [scheduled messages](https://core.telegram.org/api/scheduled-messages) */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "quick_reply_shortcut_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.no_webpage = params.no_webpage;
        this.invert_media = params.invert_media;
        this.peer = params.peer;
        this.id = params.id;
        this.message = params.message;
        this.media = params.media;
        this.reply_markup = params.reply_markup;
        this.entities = params.entities;
        this.schedule_date = params.schedule_date;
        this.quick_reply_shortcut_id = params.quick_reply_shortcut_id;
    }
}
exports.messages_editMessage_ = messages_editMessage_;
Object.defineProperty(messages_editMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit an inline bot message */
class messages_editInlineBotMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x83557DBA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editInlineBotMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["no_webpage", "true", "flags.1?true"],
            ["invert_media", "true", "flags.16?true"],
            ["id", _2_types_js_1.types._InputBotInlineMessageID, "InputBotInlineMessageID"],
            ["message", "string", "flags.11?string"],
            ["media", _2_types_js_1.types._InputMedia, "flags.14?InputMedia"],
            ["reply_markup", _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.no_webpage ?? null, "true", "flags.1?true"],
            [this.invert_media ?? null, "true", "flags.16?true"],
            [this.id, _2_types_js_1.types._InputBotInlineMessageID, "InputBotInlineMessageID"],
            [this.message ?? null, "string", "flags.11?string"],
            [this.media ?? null, _2_types_js_1.types._InputMedia, "flags.14?InputMedia"],
            [this.reply_markup ?? null, _2_types_js_1.types._ReplyMarkup, "flags.2?ReplyMarkup"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
        ];
    }
    constructor(params) {
        super();
        /** Disable webpage preview */
        Object.defineProperty(this, "no_webpage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, any eventual webpage preview will be shown on top of the message instead of at the bottom. */
        Object.defineProperty(this, "invert_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Sent inline message ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Media */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Reply markup for inline keyboards */
        Object.defineProperty(this, "reply_markup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Message entities for styled text](https://core.telegram.org/api/entities) */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.no_webpage = params.no_webpage;
        this.invert_media = params.invert_media;
        this.id = params.id;
        this.message = params.message;
        this.media = params.media;
        this.reply_markup = params.reply_markup;
        this.entities = params.entities;
    }
}
exports.messages_editInlineBotMessage_ = messages_editInlineBotMessage_;
Object.defineProperty(messages_editInlineBotMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Press an inline callback button and get a callback answer from the bot */
class messages_getBotCallbackAnswer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9342CA07;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getBotCallbackAnswer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["game", "true", "flags.1?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["data", Uint8Array, "flags.0?bytes"],
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "flags.2?InputCheckPasswordSRP"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.game ?? null, "true", "flags.1?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.data ?? null, Uint8Array, "flags.0?bytes"],
            [this.password ?? null, _2_types_js_1.types._InputCheckPasswordSRP, "flags.2?InputCheckPasswordSRP"],
        ];
    }
    constructor(params) {
        super();
        /** Whether this is a "play game" button */
        Object.defineProperty(this, "game", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Where was the inline keyboard sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the Message with the inline keyboard */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Callback data */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** For buttons [requiring you to verify your identity with your 2FA password](https://core.telegram.org/constructor/keyboardButtonCallback), the SRP payload generated using [SRP](https://core.telegram.org/api/srp). */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.game = params.game;
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.data = params.data;
        this.password = params.password;
    }
}
exports.messages_getBotCallbackAnswer_ = messages_getBotCallbackAnswer_;
Object.defineProperty(messages_getBotCallbackAnswer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set the callback answer to a user button press (bots only) */
class messages_setBotCallbackAnswer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD58F130A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setBotCallbackAnswer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["alert", "true", "flags.1?true"],
            ["query_id", "bigint", "long"],
            ["message", "string", "flags.0?string"],
            ["url", "string", "flags.2?string"],
            ["cache_time", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.alert ?? null, "true", "flags.1?true"],
            [this.query_id, "bigint", "long"],
            [this.message ?? null, "string", "flags.0?string"],
            [this.url ?? null, "string", "flags.2?string"],
            [this.cache_time, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to show the message as a popup instead of a toast notification */
        Object.defineProperty(this, "alert", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query ID */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Popup to show */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** URL to open */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Cache validity */
        Object.defineProperty(this, "cache_time", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.alert = params.alert;
        this.query_id = params.query_id;
        this.message = params.message;
        this.url = params.url;
        this.cache_time = params.cache_time;
    }
}
exports.messages_setBotCallbackAnswer_ = messages_setBotCallbackAnswer_;
Object.defineProperty(messages_setBotCallbackAnswer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get dialog info of specified peers */
class messages_getPeerDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE470BCFD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getPeerDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peers", [_2_types_js_1.types._InputDialogPeer], "Vector<InputDialogPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peers, [_2_types_js_1.types._InputDialogPeer], "Vector<InputDialogPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** Peers */
        Object.defineProperty(this, "peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peers = params.peers;
    }
}
exports.messages_getPeerDialogs_ = messages_getPeerDialogs_;
Object.defineProperty(messages_getPeerDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Save a message [draft](https://core.telegram.org/api/drafts) associated to a chat. */
class messages_saveDraft_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7FF3B806;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.saveDraft";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["no_webpage", "true", "flags.1?true"],
            ["invert_media", "true", "flags.6?true"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.4?InputReplyTo"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["message", "string", "string"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            ["media", _2_types_js_1.types._InputMedia, "flags.5?InputMedia"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.no_webpage ?? null, "true", "flags.1?true"],
            [this.invert_media ?? null, "true", "flags.6?true"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.4?InputReplyTo"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.message, "string", "string"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.3?Vector<MessageEntity>"],
            [this.media ?? null, _2_types_js_1.types._InputMedia, "flags.5?InputMedia"],
        ];
    }
    constructor(params) {
        super();
        /** Disable generation of the webpage preview */
        Object.defineProperty(this, "no_webpage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, any eventual webpage preview will be shown on top of the message instead of at the bottom. */
        Object.defineProperty(this, "invert_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the message should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Destination of the message that should be sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The draft */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message [entities](https://core.telegram.org/api/entities) for styled text */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Attached media */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.no_webpage = params.no_webpage;
        this.invert_media = params.invert_media;
        this.reply_to = params.reply_to;
        this.peer = params.peer;
        this.message = params.message;
        this.entities = params.entities;
        this.media = params.media;
    }
}
exports.messages_saveDraft_ = messages_saveDraft_;
Object.defineProperty(messages_saveDraft_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Return all message [drafts](https://core.telegram.org/api/drafts).
Returns all the latest [updateDraftMessage](https://core.telegram.org/constructor/updateDraftMessage) updates related to all chats with drafts. */
class messages_getAllDrafts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6A3F8D65;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAllDrafts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getAllDrafts_ = messages_getAllDrafts_;
Object.defineProperty(messages_getAllDrafts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get featured stickers */
class messages_getFeaturedStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x64780B14;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getFeaturedStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getFeaturedStickers_ = messages_getFeaturedStickers_;
Object.defineProperty(messages_getFeaturedStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark new featured stickers as read */
class messages_readFeaturedStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5B118126;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readFeaturedStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** IDs of stickersets to mark as read */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.messages_readFeaturedStickers_ = messages_readFeaturedStickers_;
Object.defineProperty(messages_readFeaturedStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get recent stickers */
class messages_getRecentStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9DA9403B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getRecentStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["attached", "true", "flags.0?true"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.attached ?? null, "true", "flags.0?true"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Get stickers recently attached to photo or video files */
        Object.defineProperty(this, "attached", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.attached = params.attached;
        this.hash = params.hash;
    }
}
exports.messages_getRecentStickers_ = messages_getRecentStickers_;
Object.defineProperty(messages_getRecentStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Add/remove sticker from recent stickers list */
class messages_saveRecentSticker_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x392718F8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.saveRecentSticker";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["attached", "true", "flags.0?true"],
            ["id", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["unsave", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.attached ?? null, "true", "flags.0?true"],
            [this.id, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.unsave, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to add/remove stickers recently attached to photo or video files */
        Object.defineProperty(this, "attached", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Sticker */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to save or unsave the sticker */
        Object.defineProperty(this, "unsave", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.attached = params.attached;
        this.id = params.id;
        this.unsave = params.unsave;
    }
}
exports.messages_saveRecentSticker_ = messages_saveRecentSticker_;
Object.defineProperty(messages_saveRecentSticker_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clear recent stickers */
class messages_clearRecentStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8999602D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.clearRecentStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["attached", "true", "flags.0?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.attached ?? null, "true", "flags.0?true"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag to clear the list of stickers recently attached to photo or video files */
        Object.defineProperty(this, "attached", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.attached = params?.attached;
    }
}
exports.messages_clearRecentStickers_ = messages_clearRecentStickers_;
Object.defineProperty(messages_clearRecentStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get all archived stickers */
class messages_getArchivedStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x57F17692;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getArchivedStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["masks", "true", "flags.0?true"],
            ["emojis", "true", "flags.1?true"],
            ["offset_id", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.masks ?? null, "true", "flags.0?true"],
            [this.emojis ?? null, "true", "flags.1?true"],
            [this.offset_id, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Get [mask stickers](https://core.telegram.org/api/stickers#mask-stickers) */
        Object.defineProperty(this, "masks", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Get [custom emoji stickers](https://core.telegram.org/api/custom-emoji) */
        Object.defineProperty(this, "emojis", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.masks = params.masks;
        this.emojis = params.emojis;
        this.offset_id = params.offset_id;
        this.limit = params.limit;
    }
}
exports.messages_getArchivedStickers_ = messages_getArchivedStickers_;
Object.defineProperty(messages_getArchivedStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get installed mask stickers */
class messages_getMaskStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x640F82B8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMaskStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getMaskStickers_ = messages_getMaskStickers_;
Object.defineProperty(messages_getMaskStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get stickers attached to a photo or video */
class messages_getAttachedStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCC5B67CC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAttachedStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["media", _2_types_js_1.types._InputStickeredMedia, "InputStickeredMedia"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.media, _2_types_js_1.types._InputStickeredMedia, "InputStickeredMedia"],
        ];
    }
    constructor(params) {
        super();
        /** Stickered media */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.media = params.media;
    }
}
exports.messages_getAttachedStickers_ = messages_getAttachedStickers_;
Object.defineProperty(messages_getAttachedStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Use this method to set the score of the specified user in a game sent as a normal message (bots only). */
class messages_setGameScore_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8EF8ECC0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setGameScore";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["edit_message", "true", "flags.0?true"],
            ["force", "true", "flags.1?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["score", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.edit_message ?? null, "true", "flags.0?true"],
            [this.force ?? null, "true", "flags.1?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.score, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag if the game message should be automatically edited to include the current scoreboard */
        Object.defineProperty(this, "edit_message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Set this flag if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters */
        Object.defineProperty(this, "force", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique identifier of target chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Identifier of the sent message */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User identifier */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New score */
        Object.defineProperty(this, "score", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.edit_message = params.edit_message;
        this.force = params.force;
        this.peer = params.peer;
        this.id = params.id;
        this.user_id = params.user_id;
        this.score = params.score;
    }
}
exports.messages_setGameScore_ = messages_setGameScore_;
Object.defineProperty(messages_setGameScore_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Use this method to set the score of the specified user in a game sent as an inline message (bots only). */
class messages_setInlineGameScore_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x15AD9F64;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setInlineGameScore";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["edit_message", "true", "flags.0?true"],
            ["force", "true", "flags.1?true"],
            ["id", _2_types_js_1.types._InputBotInlineMessageID, "InputBotInlineMessageID"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["score", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.edit_message ?? null, "true", "flags.0?true"],
            [this.force ?? null, "true", "flags.1?true"],
            [this.id, _2_types_js_1.types._InputBotInlineMessageID, "InputBotInlineMessageID"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.score, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag if the game message should be automatically edited to include the current scoreboard */
        Object.defineProperty(this, "edit_message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Set this flag if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters */
        Object.defineProperty(this, "force", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the inline message */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User identifier */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New score */
        Object.defineProperty(this, "score", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.edit_message = params.edit_message;
        this.force = params.force;
        this.id = params.id;
        this.user_id = params.user_id;
        this.score = params.score;
    }
}
exports.messages_setInlineGameScore_ = messages_setInlineGameScore_;
Object.defineProperty(messages_setInlineGameScore_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get highscores of a game */
class messages_getGameHighScores_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE822649D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getGameHighScores";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** Where was the game sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of message with game media attachment */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Get high scores made by a certain user */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.user_id = params.user_id;
    }
}
exports.messages_getGameHighScores_ = messages_getGameHighScores_;
Object.defineProperty(messages_getGameHighScores_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get highscores of a game sent using an inline bot */
class messages_getInlineGameHighScores_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0F635E1B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getInlineGameHighScores";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputBotInlineMessageID, "InputBotInlineMessageID"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputBotInlineMessageID, "InputBotInlineMessageID"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** ID of inline message */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Get high scores of a certain user */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.user_id = params.user_id;
    }
}
exports.messages_getInlineGameHighScores_ = messages_getInlineGameHighScores_;
Object.defineProperty(messages_getInlineGameHighScores_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get chats in common with a user */
class messages_getCommonChats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE40CA104;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getCommonChats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["max_id", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.max_id, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum ID of chat to return (see [pagination](https://core.telegram.org/api/offsets)) */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
        this.max_id = params.max_id;
        this.limit = params.limit;
    }
}
exports.messages_getCommonChats_ = messages_getCommonChats_;
Object.defineProperty(messages_getCommonChats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [instant view](https://instantview.telegram.org) page */
class messages_getWebPage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8D9692A3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getWebPage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["url", "string", "string"],
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.url, "string", "string"],
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** URL of IV page to fetch */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.url = params.url;
        this.hash = params.hash;
    }
}
exports.messages_getWebPage_ = messages_getWebPage_;
Object.defineProperty(messages_getWebPage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Pin/unpin a dialog */
class messages_toggleDialogPin_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA731E257;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.toggleDialogPin";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["pinned", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputDialogPeer, "InputDialogPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.pinned ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputDialogPeer, "InputDialogPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to pin or unpin the dialog */
        Object.defineProperty(this, "pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The dialog to pin */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pinned = params.pinned;
        this.peer = params.peer;
    }
}
exports.messages_toggleDialogPin_ = messages_toggleDialogPin_;
Object.defineProperty(messages_toggleDialogPin_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder pinned dialogs */
class messages_reorderPinnedDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3B1ADF37;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reorderPinnedDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["force", "true", "flags.0?true"],
            ["folder_id", "number", "int"],
            ["order", [_2_types_js_1.types._InputDialogPeer], "Vector<InputDialogPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.force ?? null, "true", "flags.0?true"],
            [this.folder_id, "number", "int"],
            [this.order, [_2_types_js_1.types._InputDialogPeer], "Vector<InputDialogPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** If set, dialogs pinned server-side but not present in the `order` field will be unpinned. */
        Object.defineProperty(this, "force", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders) */
        Object.defineProperty(this, "folder_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New dialog order */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.force = params.force;
        this.folder_id = params.folder_id;
        this.order = params.order;
    }
}
exports.messages_reorderPinnedDialogs_ = messages_reorderPinnedDialogs_;
Object.defineProperty(messages_reorderPinnedDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get pinned dialogs */
class messages_getPinnedDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD6B94DF2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getPinnedDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["folder_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.folder_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders) */
        Object.defineProperty(this, "folder_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.folder_id = params.folder_id;
    }
}
exports.messages_getPinnedDialogs_ = messages_getPinnedDialogs_;
Object.defineProperty(messages_getPinnedDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** If you sent an invoice requesting a shipping address and the parameter is\_flexible was specified, the bot will receive an [updateBotShippingQuery](https://core.telegram.org/constructor/updateBotShippingQuery) update. Use this method to reply to shipping queries. */
class messages_setBotShippingResults_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE5F672FA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setBotShippingResults";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["query_id", "bigint", "long"],
            ["error", "string", "flags.0?string"],
            ["shipping_options", [_2_types_js_1.types._ShippingOption], "flags.1?Vector<ShippingOption>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.query_id, "bigint", "long"],
            [this.error ?? null, "string", "flags.0?string"],
            [this.shipping_options ?? null, [_2_types_js_1.types._ShippingOption], "flags.1?Vector<ShippingOption>"],
        ];
    }
    constructor(params) {
        super();
        /** Unique identifier for the query to be answered */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable"). Telegram will display this message to the user. */
        Object.defineProperty(this, "error", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** A vector of available shipping options. */
        Object.defineProperty(this, "shipping_options", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.query_id = params.query_id;
        this.error = params.error;
        this.shipping_options = params.shipping_options;
    }
}
exports.messages_setBotShippingResults_ = messages_setBotShippingResults_;
Object.defineProperty(messages_setBotShippingResults_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Once the user has confirmed their payment and shipping details, the bot receives an [updateBotPrecheckoutQuery](https://core.telegram.org/constructor/updateBotPrecheckoutQuery) update.
Use this method to respond to such pre-checkout queries.
**Note**: Telegram must receive an answer within 10 seconds after the pre-checkout query was sent. */
class messages_setBotPrecheckoutResults_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x09C2DD95;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setBotPrecheckoutResults";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["success", "true", "flags.1?true"],
            ["query_id", "bigint", "long"],
            ["error", "string", "flags.0?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.success ?? null, "true", "flags.1?true"],
            [this.query_id, "bigint", "long"],
            [this.error ?? null, "string", "flags.0?string"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order, otherwise do not set it, and set the `error` field, instead */
        Object.defineProperty(this, "success", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique identifier for the query to be answered */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Required if the `success` isn't set. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. "Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!"). Telegram will display this message to the user. */
        Object.defineProperty(this, "error", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.success = params.success;
        this.query_id = params.query_id;
        this.error = params.error;
    }
}
exports.messages_setBotPrecheckoutResults_ = messages_setBotPrecheckoutResults_;
Object.defineProperty(messages_setBotPrecheckoutResults_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Upload a file and associate it to a chat (without actually sending it to the chat) */
class messages_uploadMedia_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x14967978;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.uploadMedia";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["business_connection_id", "string", "flags.0?string"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["media", _2_types_js_1.types._InputMedia, "InputMedia"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.business_connection_id ?? null, "string", "flags.0?string"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.media, _2_types_js_1.types._InputMedia, "InputMedia"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "business_connection_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The chat, can be [inputPeerEmpty](https://core.telegram.org/constructor/inputPeerEmpty) for bots and [inputPeerSelf](https://core.telegram.org/constructor/inputPeerSelf) for users. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File uploaded in chunks as described in [files »](https://core.telegram.org/api/files) */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.business_connection_id = params.business_connection_id;
        this.peer = params.peer;
        this.media = params.media;
    }
}
exports.messages_uploadMedia_ = messages_uploadMedia_;
Object.defineProperty(messages_uploadMedia_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Notify the other user in a private chat that a screenshot of the chat was taken */
class messages_sendScreenshotNotification_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA1405817;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendScreenshotNotification";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "InputReplyTo"],
            ["random_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.reply_to, _2_types_js_1.types._InputReplyTo, "InputReplyTo"],
            [this.random_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Other user */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Indicates the message that was screenshotted (the specified message ID can also be `0` to avoid indicating any specific message). */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random ID to avoid message resending */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.reply_to = params.reply_to;
        this.random_id = params.random_id;
    }
}
exports.messages_sendScreenshotNotification_ = messages_sendScreenshotNotification_;
Object.defineProperty(messages_sendScreenshotNotification_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get faved stickers */
class messages_getFavedStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x04F1AAA9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getFavedStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getFavedStickers_ = messages_getFavedStickers_;
Object.defineProperty(messages_getFavedStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark or unmark a sticker as favorite */
class messages_faveSticker_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB9FFC55B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.faveSticker";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["unfave", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.unfave, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Sticker in question */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to add or remove a sticker from favorites */
        Object.defineProperty(this, "unfave", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.unfave = params.unfave;
    }
}
exports.messages_faveSticker_ = messages_faveSticker_;
Object.defineProperty(messages_faveSticker_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get unread messages where we were mentioned */
class messages_getUnreadMentions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF107E790;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getUnreadMentions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
            ["offset_id", "number", "int"],
            ["add_offset", "number", "int"],
            ["limit", "number", "int"],
            ["max_id", "number", "int"],
            ["min_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
            [this.offset_id, "number", "int"],
            [this.add_offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.max_id, "number", "int"],
            [this.min_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where to look for mentions */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, considers only messages within the specified [forum topic](https://core.telegram.org/api/forum#forum-topics) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "add_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum message ID to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Minimum message ID to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.top_msg_id = params.top_msg_id;
        this.offset_id = params.offset_id;
        this.add_offset = params.add_offset;
        this.limit = params.limit;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
    }
}
exports.messages_getUnreadMentions_ = messages_getUnreadMentions_;
Object.defineProperty(messages_getUnreadMentions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark mentions as read */
class messages_readMentions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x36E5BF4D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readMentions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
        ];
    }
    constructor(params) {
        super();
        /** Dialog */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Mark as read only mentions within the specified [forum topic](https://core.telegram.org/api/forum#forum-topics) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.top_msg_id = params.top_msg_id;
    }
}
exports.messages_readMentions_ = messages_readMentions_;
Object.defineProperty(messages_readMentions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get live location history of a certain user */
class messages_getRecentLocations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x702A40E0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getRecentLocations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** User */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.messages_getRecentLocations_ = messages_getRecentLocations_;
Object.defineProperty(messages_getRecentLocations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send an [album or grouped media](https://core.telegram.org/api/files#albums-grouped-media) */
class messages_sendMultiMedia_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0C964709;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendMultiMedia";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.5?true"],
            ["background", "true", "flags.6?true"],
            ["clear_draft", "true", "flags.7?true"],
            ["noforwards", "true", "flags.14?true"],
            ["update_stickersets_order", "true", "flags.15?true"],
            ["invert_media", "true", "flags.16?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            ["multi_media", [_2_types_js_1.types._InputSingleMedia], "Vector<InputSingleMedia>"],
            ["schedule_date", "number", "flags.10?int"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            ["quick_reply_shortcut", _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.background ?? null, "true", "flags.6?true"],
            [this.clear_draft ?? null, "true", "flags.7?true"],
            [this.noforwards ?? null, "true", "flags.14?true"],
            [this.update_stickersets_order ?? null, "true", "flags.15?true"],
            [this.invert_media ?? null, "true", "flags.16?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            [this.multi_media, [_2_types_js_1.types._InputSingleMedia], "Vector<InputSingleMedia>"],
            [this.schedule_date ?? null, "number", "flags.10?int"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
            [this.quick_reply_shortcut ?? null, _2_types_js_1.types._InputQuickReplyShortcut, "flags.17?InputQuickReplyShortcut"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to send the album silently (no notification triggered) */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send in background? */
        Object.defineProperty(this, "background", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to clear [drafts](https://core.telegram.org/api/drafts) */
        Object.defineProperty(this, "clear_draft", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled */
        Object.defineProperty(this, "noforwards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to move used stickersets to top, [see here for more info on this flag »](https://core.telegram.org/api/stickers#recent-stickersets) */
        Object.defineProperty(this, "update_stickersets_order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, any eventual webpage preview will be shown on top of the message instead of at the bottom. */
        Object.defineProperty(this, "invert_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The destination chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the message should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The medias to send: note that they must be separately uploaded using [messages.uploadMedia](https://core.telegram.org/method/messages.uploadMedia) first, using raw `inputMediaUploaded*` constructors is not supported. */
        Object.defineProperty(this, "multi_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message date for scheduled messages */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Send this message as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "quick_reply_shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.background = params.background;
        this.clear_draft = params.clear_draft;
        this.noforwards = params.noforwards;
        this.update_stickersets_order = params.update_stickersets_order;
        this.invert_media = params.invert_media;
        this.peer = params.peer;
        this.reply_to = params.reply_to;
        this.multi_media = params.multi_media;
        this.schedule_date = params.schedule_date;
        this.send_as = params.send_as;
        this.quick_reply_shortcut = params.quick_reply_shortcut;
    }
}
exports.messages_sendMultiMedia_ = messages_sendMultiMedia_;
Object.defineProperty(messages_sendMultiMedia_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Upload encrypted file and associate it to a secret chat */
class messages_uploadEncryptedFile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5057C497;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.uploadEncryptedFile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            ["file", _2_types_js_1.types._InputEncryptedFile, "InputEncryptedFile"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputEncryptedChat, "InputEncryptedChat"],
            [this.file, _2_types_js_1.types._InputEncryptedFile, "InputEncryptedFile"],
        ];
    }
    constructor(params) {
        super();
        /** The secret chat to associate the file to */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The file */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.file = params.file;
    }
}
exports.messages_uploadEncryptedFile_ = messages_uploadEncryptedFile_;
Object.defineProperty(messages_uploadEncryptedFile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Search for stickersets */
class messages_searchStickerSets_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x35705B8A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.searchStickerSets";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["exclude_featured", "true", "flags.0?true"],
            ["q", "string", "string"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.exclude_featured ?? null, "true", "flags.0?true"],
            [this.q, "string", "string"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Exclude featured stickersets from results */
        Object.defineProperty(this, "exclude_featured", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query string */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.exclude_featured = params.exclude_featured;
        this.q = params.q;
        this.hash = params.hash;
    }
}
exports.messages_searchStickerSets_ = messages_searchStickerSets_;
Object.defineProperty(messages_searchStickerSets_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get message ranges for saving the user's chat history */
class messages_getSplitRanges_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1CFF7E08;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSplitRanges";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getSplitRanges_ = messages_getSplitRanges_;
Object.defineProperty(messages_getSplitRanges_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Manually mark dialog as unread */
class messages_markDialogUnread_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC286D98F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.markDialogUnread";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["unread", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputDialogPeer, "InputDialogPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.unread ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputDialogPeer, "InputDialogPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Mark as unread/read */
        Object.defineProperty(this, "unread", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Dialog */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.unread = params.unread;
        this.peer = params.peer;
    }
}
exports.messages_markDialogUnread_ = messages_markDialogUnread_;
Object.defineProperty(messages_markDialogUnread_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get dialogs manually marked as unread */
class messages_getDialogUnreadMarks_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x22E24E22;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDialogUnreadMarks";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getDialogUnreadMarks_ = messages_getDialogUnreadMarks_;
Object.defineProperty(messages_getDialogUnreadMarks_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clear all [drafts](https://core.telegram.org/api/drafts). */
class messages_clearAllDrafts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7E58EE9C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.clearAllDrafts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_clearAllDrafts_ = messages_clearAllDrafts_;
Object.defineProperty(messages_clearAllDrafts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Pin a message */
class messages_updatePinnedMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD2AAF7EC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.updatePinnedMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.0?true"],
            ["unpin", "true", "flags.1?true"],
            ["pm_oneside", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.0?true"],
            [this.unpin ?? null, "true", "flags.1?true"],
            [this.pm_oneside ?? null, "true", "flags.2?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Pin the message silently, without triggering a notification */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the message should unpinned or pinned */
        Object.defineProperty(this, "unpin", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the message should only be pinned on the local side of a one-to-one chat */
        Object.defineProperty(this, "pm_oneside", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The peer where to pin the message */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The message to pin or unpin */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.unpin = params.unpin;
        this.pm_oneside = params.pm_oneside;
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_updatePinnedMessage_ = messages_updatePinnedMessage_;
Object.defineProperty(messages_updatePinnedMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Vote in a [poll](https://core.telegram.org/constructor/poll) */
class messages_sendVote_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x10EA6184;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendVote";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["options", [Uint8Array], "Vector<bytes>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.options, [Uint8Array], "Vector<bytes>"],
        ];
    }
    constructor(params) {
        super();
        /** The chat where the poll was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The message ID of the poll */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The options that were chosen */
        Object.defineProperty(this, "options", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.options = params.options;
    }
}
exports.messages_sendVote_ = messages_sendVote_;
Object.defineProperty(messages_sendVote_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get poll results */
class messages_getPollResults_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x73BB643B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getPollResults";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the poll was found */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID of poll message */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.messages_getPollResults_ = messages_getPollResults_;
Object.defineProperty(messages_getPollResults_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get count of online users in a chat */
class messages_getOnlines_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6E2BE050;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getOnlines";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_getOnlines_ = messages_getOnlines_;
Object.defineProperty(messages_getOnlines_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit the description of a [group/supergroup/channel](https://core.telegram.org/api/channel). */
class messages_editChatAbout_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDEF60797;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editChatAbout";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["about", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.about, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The [group/supergroup/channel](https://core.telegram.org/api/channel). */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new description */
        Object.defineProperty(this, "about", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.about = params.about;
    }
}
exports.messages_editChatAbout_ = messages_editChatAbout_;
Object.defineProperty(messages_editChatAbout_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit the default banned rights of a [channel/supergroup/group](https://core.telegram.org/api/channel). */
class messages_editChatDefaultBannedRights_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA5866B41;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editChatDefaultBannedRights";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["banned_rights", _2_types_js_1.types._ChatBannedRights, "ChatBannedRights"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.banned_rights, _2_types_js_1.types._ChatBannedRights, "ChatBannedRights"],
        ];
    }
    constructor(params) {
        super();
        /** The peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new global rights */
        Object.defineProperty(this, "banned_rights", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.banned_rights = params.banned_rights;
    }
}
exports.messages_editChatDefaultBannedRights_ = messages_editChatDefaultBannedRights_;
Object.defineProperty(messages_editChatDefaultBannedRights_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get localized [emoji keywords »](https://core.telegram.org/api/custom-emoji#emoji-keywords). */
class messages_getEmojiKeywords_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x35A0E062;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiKeywords";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_code = params.lang_code;
    }
}
exports.messages_getEmojiKeywords_ = messages_getEmojiKeywords_;
Object.defineProperty(messages_getEmojiKeywords_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get changed [emoji keywords »](https://core.telegram.org/api/custom-emoji#emoji-keywords). */
class messages_getEmojiKeywordsDifference_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1508B6AF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiKeywordsDifference";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_code", "string", "string"],
            ["from_version", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_code, "string", "string"],
            [this.from_version, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Previous stored emoji keyword list `version` */
        Object.defineProperty(this, "from_version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_code = params.lang_code;
        this.from_version = params.from_version;
    }
}
exports.messages_getEmojiKeywordsDifference_ = messages_getEmojiKeywordsDifference_;
Object.defineProperty(messages_getEmojiKeywordsDifference_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain a list of related languages that must be used when fetching [emoji keyword lists »](https://core.telegram.org/api/custom-emoji#emoji-keywords). */
class messages_getEmojiKeywordsLanguages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4E9963B2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiKeywordsLanguages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_codes", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_codes, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** The user's language codes */
        Object.defineProperty(this, "lang_codes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_codes = params.lang_codes;
    }
}
exports.messages_getEmojiKeywordsLanguages_ = messages_getEmojiKeywordsLanguages_;
Object.defineProperty(messages_getEmojiKeywordsLanguages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns an HTTP URL which can be used to automatically log in into translation platform and suggest new [emoji keywords »](https://core.telegram.org/api/custom-emoji#emoji-keywords). The URL will be valid for 30 seconds after generation. */
class messages_getEmojiURL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD5B10C26;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiURL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Language code for which the emoji keywords will be suggested */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_code = params.lang_code;
    }
}
exports.messages_getEmojiURL_ = messages_getEmojiURL_;
Object.defineProperty(messages_getEmojiURL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the number of results that would be found by a [messages.search](https://core.telegram.org/method/messages.search) call with the same parameters */
class messages_getSearchCounters_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1BBCF300;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSearchCounters";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["saved_peer_id", _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
            ["filters", [_2_types_js_1.types._MessagesFilter], "Vector<MessagesFilter>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.saved_peer_id ?? null, _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
            [this.filters, [_2_types_js_1.types._MessagesFilter], "Vector<MessagesFilter>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where to search */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search within the [saved message dialog »](https://core.telegram.org/api/saved-messages) with this ID. */
        Object.defineProperty(this, "saved_peer_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, consider only messages within the specified [forum topic](https://core.telegram.org/api/forum#forum-topics) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search filters */
        Object.defineProperty(this, "filters", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.saved_peer_id = params.saved_peer_id;
        this.top_msg_id = params.top_msg_id;
        this.filters = params.filters;
    }
}
exports.messages_getSearchCounters_ = messages_getSearchCounters_;
Object.defineProperty(messages_getSearchCounters_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get more info about a Seamless Telegram Login authorization request, for more info [click here »](https://core.telegram.org/api/url-authorization) */
class messages_requestUrlAuth_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x198FB446;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.requestUrlAuth";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "flags.1?InputPeer"],
            ["msg_id", "number", "flags.1?int"],
            ["button_id", "number", "flags.1?int"],
            ["url", "string", "flags.2?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer ?? null, _2_types_js_1.types._InputPeer, "flags.1?InputPeer"],
            [this.msg_id ?? null, "number", "flags.1?int"],
            [this.button_id ?? null, "number", "flags.1?int"],
            [this.url ?? null, "string", "flags.2?string"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the message is located */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The message */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The ID of the button with the authorization request */
        Object.defineProperty(this, "button_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** URL used for [link URL authorization, click here for more info »](https://core.telegram.org/api/url-authorization#link-url-authorization) */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params?.peer;
        this.msg_id = params?.msg_id;
        this.button_id = params?.button_id;
        this.url = params?.url;
    }
}
exports.messages_requestUrlAuth_ = messages_requestUrlAuth_;
Object.defineProperty(messages_requestUrlAuth_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Use this to accept a Seamless Telegram Login authorization request, for more info [click here »](https://core.telegram.org/api/url-authorization) */
class messages_acceptUrlAuth_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB12C7125;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.acceptUrlAuth";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["write_allowed", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "flags.1?InputPeer"],
            ["msg_id", "number", "flags.1?int"],
            ["button_id", "number", "flags.1?int"],
            ["url", "string", "flags.2?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.write_allowed ?? null, "true", "flags.0?true"],
            [this.peer ?? null, _2_types_js_1.types._InputPeer, "flags.1?InputPeer"],
            [this.msg_id ?? null, "number", "flags.1?int"],
            [this.button_id ?? null, "number", "flags.1?int"],
            [this.url ?? null, "string", "flags.2?string"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag to allow the bot to send messages to you (if requested) */
        Object.defineProperty(this, "write_allowed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The location of the message */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID of the message with the login button */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the login button */
        Object.defineProperty(this, "button_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** URL used for [link URL authorization, click here for more info »](https://core.telegram.org/api/url-authorization#link-url-authorization) */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.write_allowed = params?.write_allowed;
        this.peer = params?.peer;
        this.msg_id = params?.msg_id;
        this.button_id = params?.button_id;
        this.url = params?.url;
    }
}
exports.messages_acceptUrlAuth_ = messages_acceptUrlAuth_;
Object.defineProperty(messages_acceptUrlAuth_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Should be called after the user hides the [report spam/add as contact bar](https://core.telegram.org/api/action-bar) of a new chat, effectively prevents the user from executing the actions specified in the [action bar »](https://core.telegram.org/api/action-bar). */
class messages_hidePeerSettingsBar_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4FACB138;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.hidePeerSettingsBar";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_hidePeerSettingsBar_ = messages_hidePeerSettingsBar_;
Object.defineProperty(messages_hidePeerSettingsBar_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get scheduled messages */
class messages_getScheduledHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF516760B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getScheduledHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.hash = params.hash;
    }
}
exports.messages_getScheduledHistory_ = messages_getScheduledHistory_;
Object.defineProperty(messages_getScheduledHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get scheduled messages */
class messages_getScheduledMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBDBB0464;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getScheduledMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of scheduled messages */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_getScheduledMessages_ = messages_getScheduledMessages_;
Object.defineProperty(messages_getScheduledMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send scheduled messages right away */
class messages_sendScheduledMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBD38850A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendScheduledMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_sendScheduledMessages_ = messages_sendScheduledMessages_;
Object.defineProperty(messages_sendScheduledMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete scheduled messages */
class messages_deleteScheduledMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x59AE2B16;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteScheduledMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Scheduled message IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_deleteScheduledMessages_ = messages_deleteScheduledMessages_;
Object.defineProperty(messages_deleteScheduledMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get poll results for non-anonymous polls */
class messages_getPollVotes_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB86E380E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getPollVotes";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["option", Uint8Array, "flags.0?bytes"],
            ["offset", "string", "flags.1?string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.option ?? null, Uint8Array, "flags.0?bytes"],
            [this.offset ?? null, "string", "flags.1?string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Chat where the poll was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Get only results for the specified poll `option` */
        Object.defineProperty(this, "option", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for results, taken from the `next_offset` field of [messages.votesList](https://core.telegram.org/constructor/messages.votesList), initially an empty string.
        Note: if no more results are available, the method call will return an empty `next_offset`; thus, avoid providing the `next_offset` returned in [messages.votesList](https://core.telegram.org/constructor/messages.votesList) if it is empty, to avoid an infinite loop. */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of results to return */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.option = params.option;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.messages_getPollVotes_ = messages_getPollVotes_;
Object.defineProperty(messages_getPollVotes_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Apply changes to multiple stickersets */
class messages_toggleStickerSets_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB5052FEA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.toggleStickerSets";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["uninstall", "true", "flags.0?true"],
            ["archive", "true", "flags.1?true"],
            ["unarchive", "true", "flags.2?true"],
            ["stickersets", [_2_types_js_1.types._InputStickerSet], "Vector<InputStickerSet>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.uninstall ?? null, "true", "flags.0?true"],
            [this.archive ?? null, "true", "flags.1?true"],
            [this.unarchive ?? null, "true", "flags.2?true"],
            [this.stickersets, [_2_types_js_1.types._InputStickerSet], "Vector<InputStickerSet>"],
        ];
    }
    constructor(params) {
        super();
        /** Uninstall the specified stickersets */
        Object.defineProperty(this, "uninstall", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Archive the specified stickersets */
        Object.defineProperty(this, "archive", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unarchive the specified stickersets */
        Object.defineProperty(this, "unarchive", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Stickersets to act upon */
        Object.defineProperty(this, "stickersets", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.uninstall = params.uninstall;
        this.archive = params.archive;
        this.unarchive = params.unarchive;
        this.stickersets = params.stickersets;
    }
}
exports.messages_toggleStickerSets_ = messages_toggleStickerSets_;
Object.defineProperty(messages_toggleStickerSets_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [folders](https://core.telegram.org/api/folders) */
class messages_getDialogFilters_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEFD48C89;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDialogFilters";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getDialogFilters_ = messages_getDialogFilters_;
Object.defineProperty(messages_getDialogFilters_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [suggested folders](https://core.telegram.org/api/folders) */
class messages_getSuggestedDialogFilters_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA29CD42C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSuggestedDialogFilters";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getSuggestedDialogFilters_ = messages_getSuggestedDialogFilters_;
Object.defineProperty(messages_getSuggestedDialogFilters_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Update [folder](https://core.telegram.org/api/folders) */
class messages_updateDialogFilter_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1AD4A04A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.updateDialogFilter";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["id", "number", "int"],
            ["filter", _2_types_js_1.types._DialogFilter, "flags.0?DialogFilter"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.id, "number", "int"],
            [this.filter ?? null, _2_types_js_1.types._DialogFilter, "flags.0?DialogFilter"],
        ];
    }
    constructor(params) {
        super();
        /** [Folder](https://core.telegram.org/api/folders) ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Folder](https://core.telegram.org/api/folders) info */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
        this.filter = params.filter;
    }
}
exports.messages_updateDialogFilter_ = messages_updateDialogFilter_;
Object.defineProperty(messages_updateDialogFilter_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder [folders](https://core.telegram.org/api/folders) */
class messages_updateDialogFiltersOrder_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC563C1E4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.updateDialogFiltersOrder";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["order", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.order, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** New [folder](https://core.telegram.org/api/folders) order */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.order = params.order;
    }
}
exports.messages_updateDialogFiltersOrder_ = messages_updateDialogFiltersOrder_;
Object.defineProperty(messages_updateDialogFiltersOrder_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Method for fetching previously featured stickers */
class messages_getOldFeaturedStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7ED094A1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getOldFeaturedStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["offset", "number", "int"],
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Offset */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.offset = params.offset;
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.messages_getOldFeaturedStickers_ = messages_getOldFeaturedStickers_;
Object.defineProperty(messages_getOldFeaturedStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get messages in a reply thread */
class messages_getReplies_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x22DDD30C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getReplies";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["offset_id", "number", "int"],
            ["offset_date", "number", "int"],
            ["add_offset", "number", "int"],
            ["limit", "number", "int"],
            ["max_id", "number", "int"],
            ["min_id", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.offset_id, "number", "int"],
            [this.offset_date, "number", "int"],
            [this.add_offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.max_id, "number", "int"],
            [this.min_id, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "add_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with ID smaller than max\_id */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with ID bigger than min\_id */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.offset_id = params.offset_id;
        this.offset_date = params.offset_date;
        this.add_offset = params.add_offset;
        this.limit = params.limit;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
        this.hash = params.hash;
    }
}
exports.messages_getReplies_ = messages_getReplies_;
Object.defineProperty(messages_getReplies_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [discussion message](https://core.telegram.org/api/threads) from the [associated discussion group](https://core.telegram.org/api/discussion) of a channel to show it on top of the comment section, without actually joining the group */
class messages_getDiscussionMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x446972FD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDiscussionMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Channel ID](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.messages_getDiscussionMessage_ = messages_getDiscussionMessage_;
Object.defineProperty(messages_getDiscussionMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark a [thread](https://core.telegram.org/api/threads) as read */
class messages_readDiscussion_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF731A9F4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readDiscussion";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["read_max_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.read_max_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Group ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of message that started the thread */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID up to which thread messages were read */
        Object.defineProperty(this, "read_max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.read_max_id = params.read_max_id;
    }
}
exports.messages_readDiscussion_ = messages_readDiscussion_;
Object.defineProperty(messages_readDiscussion_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** [Unpin](https://core.telegram.org/api/pin) all pinned messages */
class messages_unpinAllMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEE22B9A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.unpinAllMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
        ];
    }
    constructor(params) {
        super();
        /** Chat where to unpin */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Forum topic](https://core.telegram.org/api/forum#forum-topics) where to unpin */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.top_msg_id = params.top_msg_id;
    }
}
exports.messages_unpinAllMessages_ = messages_unpinAllMessages_;
Object.defineProperty(messages_unpinAllMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete a [chat](https://core.telegram.org/api/channel) */
class messages_deleteChat_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5BD0EE50;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteChat";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chat_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chat_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Chat ID */
        Object.defineProperty(this, "chat_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chat_id = params.chat_id;
    }
}
exports.messages_deleteChat_ = messages_deleteChat_;
Object.defineProperty(messages_deleteChat_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete the entire phone call history. */
class messages_deletePhoneCallHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF9CBE409;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deletePhoneCallHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["revoke", "true", "flags.0?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.revoke ?? null, "true", "flags.0?true"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to remove phone call history for participants as well */
        Object.defineProperty(this, "revoke", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.revoke = params?.revoke;
    }
}
exports.messages_deletePhoneCallHistory_ = messages_deletePhoneCallHistory_;
Object.defineProperty(messages_deletePhoneCallHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtains information about a chat export file, generated by a foreign chat app, [click here for more info about imported chats »](https://core.telegram.org/api/import). */
class messages_checkHistoryImport_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x43FE19F3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.checkHistoryImport";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["import_head", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.import_head, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Beginning of the message file; up to 100 lines. */
        Object.defineProperty(this, "import_head", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.import_head = params.import_head;
    }
}
exports.messages_checkHistoryImport_ = messages_checkHistoryImport_;
Object.defineProperty(messages_checkHistoryImport_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Import chat history from a foreign chat app into a specific Telegram chat, [click here for more info about imported chats »](https://core.telegram.org/api/import). */
class messages_initHistoryImport_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x34090C3B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.initHistoryImport";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["file", _2_types_js_1.types._InputFile, "InputFile"],
            ["media_count", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.file, _2_types_js_1.types._InputFile, "InputFile"],
            [this.media_count, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The Telegram chat where the [history should be imported](https://core.telegram.org/api/import). */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File with messages to import. */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of media files associated with the chat that will be uploaded using [messages.uploadImportedMedia](https://core.telegram.org/method/messages.uploadImportedMedia). */
        Object.defineProperty(this, "media_count", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.file = params.file;
        this.media_count = params.media_count;
    }
}
exports.messages_initHistoryImport_ = messages_initHistoryImport_;
Object.defineProperty(messages_initHistoryImport_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Upload a media file associated with an [imported chat, click here for more info »](https://core.telegram.org/api/import). */
class messages_uploadImportedMedia_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2A862092;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.uploadImportedMedia";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["import_id", "bigint", "long"],
            ["file_name", "string", "string"],
            ["media", _2_types_js_1.types._InputMedia, "InputMedia"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.import_id, "bigint", "long"],
            [this.file_name, "string", "string"],
            [this.media, _2_types_js_1.types._InputMedia, "InputMedia"],
        ];
    }
    constructor(params) {
        super();
        /** The Telegram chat where the media will be imported */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Identifier of a [history import session](https://core.telegram.org/api/import), returned by [messages.initHistoryImport](https://core.telegram.org/method/messages.initHistoryImport) */
        Object.defineProperty(this, "import_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File name */
        Object.defineProperty(this, "file_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Media metadata */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.import_id = params.import_id;
        this.file_name = params.file_name;
        this.media = params.media;
    }
}
exports.messages_uploadImportedMedia_ = messages_uploadImportedMedia_;
Object.defineProperty(messages_uploadImportedMedia_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Complete the [history import process](https://core.telegram.org/api/import), importing all messages into the chat.
To be called only after initializing the import with [messages.initHistoryImport](https://core.telegram.org/method/messages.initHistoryImport) and uploading all files using [messages.uploadImportedMedia](https://core.telegram.org/method/messages.uploadImportedMedia). */
class messages_startHistoryImport_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB43DF344;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.startHistoryImport";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["import_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.import_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** The Telegram chat where the messages should be [imported, click here for more info »](https://core.telegram.org/api/import) */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Identifier of a history import session, returned by [messages.initHistoryImport](https://core.telegram.org/method/messages.initHistoryImport). */
        Object.defineProperty(this, "import_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.import_id = params.import_id;
    }
}
exports.messages_startHistoryImport_ = messages_startHistoryImport_;
Object.defineProperty(messages_startHistoryImport_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about the chat invites of a specific chat */
class messages_getExportedChatInvites_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA2B5A3F6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getExportedChatInvites";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["revoked", "true", "flags.3?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["admin_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["offset_date", "number", "flags.2?int"],
            ["offset_link", "string", "flags.2?string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.revoked ?? null, "true", "flags.3?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.admin_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.offset_date ?? null, "number", "flags.2?int"],
            [this.offset_link ?? null, "string", "flags.2?string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to fetch revoked chat invites */
        Object.defineProperty(this, "revoked", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to only fetch chat invites from this admin */
        Object.defineProperty(this, "admin_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.revoked = params.revoked;
        this.peer = params.peer;
        this.admin_id = params.admin_id;
        this.offset_date = params.offset_date;
        this.offset_link = params.offset_link;
        this.limit = params.limit;
    }
}
exports.messages_getExportedChatInvites_ = messages_getExportedChatInvites_;
Object.defineProperty(messages_getExportedChatInvites_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about a chat invite */
class messages_getExportedChatInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x73746F5C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getExportedChatInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["link", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.link, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Invite link */
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.link = params.link;
    }
}
exports.messages_getExportedChatInvite_ = messages_getExportedChatInvite_;
Object.defineProperty(messages_getExportedChatInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit an exported chat invite */
class messages_editExportedChatInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBDCA2F75;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editExportedChatInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["revoked", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["link", "string", "string"],
            ["expire_date", "number", "flags.0?int"],
            ["usage_limit", "number", "flags.1?int"],
            ["request_needed", "boolean", "flags.3?Bool"],
            ["title", "string", "flags.4?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.revoked ?? null, "true", "flags.2?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.link, "string", "string"],
            [this.expire_date ?? null, "number", "flags.0?int"],
            [this.usage_limit ?? null, "number", "flags.1?int"],
            [this.request_needed ?? null, "boolean", "flags.3?Bool"],
            [this.title ?? null, "string", "flags.4?string"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to revoke the chat invite */
        Object.defineProperty(this, "revoked", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Invite link */
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New expiration date */
        Object.defineProperty(this, "expire_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of users that can join using this link */
        Object.defineProperty(this, "usage_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether admin confirmation is required before admitting each separate user into the chat */
        Object.defineProperty(this, "request_needed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Description of the invite link, visible only to administrators */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.revoked = params.revoked;
        this.peer = params.peer;
        this.link = params.link;
        this.expire_date = params.expire_date;
        this.usage_limit = params.usage_limit;
        this.request_needed = params.request_needed;
        this.title = params.title;
    }
}
exports.messages_editExportedChatInvite_ = messages_editExportedChatInvite_;
Object.defineProperty(messages_editExportedChatInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete all revoked chat invites */
class messages_deleteRevokedExportedChatInvites_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x56987BD5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteRevokedExportedChatInvites";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["admin_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.admin_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the admin that originally generated the revoked chat invites */
        Object.defineProperty(this, "admin_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.admin_id = params.admin_id;
    }
}
exports.messages_deleteRevokedExportedChatInvites_ = messages_deleteRevokedExportedChatInvites_;
Object.defineProperty(messages_deleteRevokedExportedChatInvites_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete a chat invite */
class messages_deleteExportedChatInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD464A42B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteExportedChatInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["link", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.link, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Invite link */
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.link = params.link;
    }
}
exports.messages_deleteExportedChatInvite_ = messages_deleteExportedChatInvite_;
Object.defineProperty(messages_deleteExportedChatInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about chat invites generated by admins. */
class messages_getAdminsWithInvites_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3920E6EF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAdminsWithInvites";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_getAdminsWithInvites_ = messages_getAdminsWithInvites_;
Object.defineProperty(messages_getAdminsWithInvites_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about the users that joined the chat using a specific chat invite */
class messages_getChatInviteImporters_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDF04DD4E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getChatInviteImporters";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["requested", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["link", "string", "flags.1?string"],
            ["q", "string", "flags.2?string"],
            ["offset_date", "number", "int"],
            ["offset_user", _2_types_js_1.types._InputUser, "InputUser"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.requested ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.link ?? null, "string", "flags.1?string"],
            [this.q ?? null, "string", "flags.2?string"],
            [this.offset_date, "number", "int"],
            [this.offset_user, _2_types_js_1.types._InputUser, "InputUser"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** If set, only returns info about users with pending [join requests »](https://core.telegram.org/api/invites#join-requests) */
        Object.defineProperty(this, "requested", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chat */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Invite link */
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search for a user in the pending [join requests »](https://core.telegram.org/api/invites#join-requests) list: only available when the `requested` flag is set, cannot be used together with a specific `link`. */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** User ID for [pagination](https://core.telegram.org/api/offsets): if set, `offset_date` must also be set. */
        Object.defineProperty(this, "offset_user", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.requested = params.requested;
        this.peer = params.peer;
        this.link = params.link;
        this.q = params.q;
        this.offset_date = params.offset_date;
        this.offset_user = params.offset_user;
        this.limit = params.limit;
    }
}
exports.messages_getChatInviteImporters_ = messages_getChatInviteImporters_;
Object.defineProperty(messages_getChatInviteImporters_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set maximum Time-To-Live of all messages in the specified chat */
class messages_setHistoryTTL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB80E5FE4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setHistoryTTL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["period", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.period, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The dialog */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Automatically delete all messages sent in the chat after this many seconds */
        Object.defineProperty(this, "period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.period = params.period;
    }
}
exports.messages_setHistoryTTL_ = messages_setHistoryTTL_;
Object.defineProperty(messages_setHistoryTTL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check whether chat history exported from another chat app can be [imported into a specific Telegram chat, click here for more info »](https://core.telegram.org/api/import). */
class messages_checkHistoryImportPeer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5DC60F03;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.checkHistoryImportPeer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The chat where we want to [import history »](https://core.telegram.org/api/import). */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.messages_checkHistoryImportPeer_ = messages_checkHistoryImportPeer_;
Object.defineProperty(messages_checkHistoryImportPeer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change the chat theme of a certain chat */
class messages_setChatTheme_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE63BE13F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setChatTheme";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["emoticon", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.emoticon, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Private chat where to change theme */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Emoji, identifying a specific chat theme; a list of chat themes can be fetched using [account.getChatThemes](https://core.telegram.org/method/account.getChatThemes) */
        Object.defineProperty(this, "emoticon", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.emoticon = params.emoticon;
    }
}
exports.messages_setChatTheme_ = messages_setChatTheme_;
Object.defineProperty(messages_setChatTheme_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get which users read a specific message: only available for groups and supergroups with less than [`chat_read_mark_size_threshold` members](https://core.telegram.org/api/config#chat-read-mark-size-threshold), read receipts will be stored for [`chat_read_mark_expire_period` seconds after the message was sent](https://core.telegram.org/api/config#chat-read-mark-expire-period), see [client configuration for more info »](https://core.telegram.org/api/config#client-configuration). */
class messages_getMessageReadParticipants_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x31C1C44F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMessageReadParticipants";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Dialog */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.messages_getMessageReadParticipants_ = messages_getMessageReadParticipants_;
Object.defineProperty(messages_getMessageReadParticipants_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns information about the next messages of the specified type in the chat split by days. */
class messages_getSearchResultsCalendar_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6AA3F6BD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSearchResultsCalendar";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["saved_peer_id", _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            ["filter", _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            ["offset_id", "number", "int"],
            ["offset_date", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.saved_peer_id ?? null, _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            [this.filter, _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            [this.offset_id, "number", "int"],
            [this.offset_date, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where to search */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search within the [saved message dialog »](https://core.telegram.org/api/saved-messages) with this ID. */
        Object.defineProperty(this, "saved_peer_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message filter, [inputMessagesFilterEmpty](https://core.telegram.org/constructor/inputMessagesFilterEmpty), [inputMessagesFilterMyMentions](https://core.telegram.org/constructor/inputMessagesFilterMyMentions) filters are not supported by this method. */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.saved_peer_id = params.saved_peer_id;
        this.filter = params.filter;
        this.offset_id = params.offset_id;
        this.offset_date = params.offset_date;
    }
}
exports.messages_getSearchResultsCalendar_ = messages_getSearchResultsCalendar_;
Object.defineProperty(messages_getSearchResultsCalendar_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns sparse positions of messages of the specified type in the chat to be used for shared media scroll implementation. */
class messages_getSearchResultsPositions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9C7F2F10;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSearchResultsPositions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["saved_peer_id", _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            ["filter", _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            ["offset_id", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.saved_peer_id ?? null, _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
            [this.filter, _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            [this.offset_id, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where to search */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search within the [saved message dialog »](https://core.telegram.org/api/saved-messages) with this ID. */
        Object.defineProperty(this, "saved_peer_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message filter, [inputMessagesFilterEmpty](https://core.telegram.org/constructor/inputMessagesFilterEmpty), [inputMessagesFilterMyMentions](https://core.telegram.org/constructor/inputMessagesFilterMyMentions) filters are not supported by this method. */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.saved_peer_id = params.saved_peer_id;
        this.filter = params.filter;
        this.offset_id = params.offset_id;
        this.limit = params.limit;
    }
}
exports.messages_getSearchResultsPositions_ = messages_getSearchResultsPositions_;
Object.defineProperty(messages_getSearchResultsPositions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Dismiss or approve a chat [join request](https://core.telegram.org/api/invites#join-requests) related to a specific chat or channel. */
class messages_hideChatJoinRequest_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7FE7E815;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.hideChatJoinRequest";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["approved", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.approved ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to dismiss or approve the chat [join request »](https://core.telegram.org/api/invites#join-requests) */
        Object.defineProperty(this, "approved", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The chat or channel */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The user whose [join request »](https://core.telegram.org/api/invites#join-requests) should be dismissed or approved */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.approved = params.approved;
        this.peer = params.peer;
        this.user_id = params.user_id;
    }
}
exports.messages_hideChatJoinRequest_ = messages_hideChatJoinRequest_;
Object.defineProperty(messages_hideChatJoinRequest_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Dismiss or approve all [join requests](https://core.telegram.org/api/invites#join-requests) related to a specific chat or channel. */
class messages_hideAllChatJoinRequests_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE085F4EA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.hideAllChatJoinRequests";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["approved", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["link", "string", "flags.1?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.approved ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.link ?? null, "string", "flags.1?string"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to dismiss or approve all chat [join requests »](https://core.telegram.org/api/invites#join-requests) */
        Object.defineProperty(this, "approved", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The chat or channel */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only dismiss or approve [join requests »](https://core.telegram.org/api/invites#join-requests) initiated using this invite link */
        Object.defineProperty(this, "link", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.approved = params.approved;
        this.peer = params.peer;
        this.link = params.link;
    }
}
exports.messages_hideAllChatJoinRequests_ = messages_hideAllChatJoinRequests_;
Object.defineProperty(messages_hideAllChatJoinRequests_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Enable or disable [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) on a channel or chat */
class messages_toggleNoForwards_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB11EAFA2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.toggleNoForwards";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** The chat or channel */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Enable or disable content protection */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.enabled = params.enabled;
    }
}
exports.messages_toggleNoForwards_ = messages_toggleNoForwards_;
Object.defineProperty(messages_toggleNoForwards_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change the default peer that should be used when sending messages, reactions, poll votes to a specific group */
class messages_saveDefaultSendAs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCCFDDF96;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.saveDefaultSendAs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["send_as", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.send_as, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Group */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The default peer that should be used when sending messages to the group */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.send_as = params.send_as;
    }
}
exports.messages_saveDefaultSendAs_ = messages_saveDefaultSendAs_;
Object.defineProperty(messages_saveDefaultSendAs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** React to message. */
class messages_sendReaction_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD30D78D4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendReaction";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["big", "true", "flags.1?true"],
            ["add_to_recent", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["reaction", [_2_types_js_1.types._Reaction], "flags.0?Vector<Reaction>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.big ?? null, "true", "flags.1?true"],
            [this.add_to_recent ?? null, "true", "flags.2?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.reaction ?? null, [_2_types_js_1.types._Reaction], "flags.0?Vector<Reaction>"],
        ];
    }
    constructor(params) {
        super();
        /** Whether a bigger and longer reaction should be shown */
        Object.defineProperty(this, "big", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to add this reaction to the [recent reactions list »](https://core.telegram.org/api/reactions#recent-reactions). */
        Object.defineProperty(this, "add_to_recent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID to react to */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** A list of reactions */
        Object.defineProperty(this, "reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.big = params.big;
        this.add_to_recent = params.add_to_recent;
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.reaction = params.reaction;
    }
}
exports.messages_sendReaction_ = messages_sendReaction_;
Object.defineProperty(messages_sendReaction_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [message reactions »](https://core.telegram.org/api/reactions) */
class messages_getMessagesReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8BBA90E6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMessagesReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_getMessagesReactions_ = messages_getMessagesReactions_;
Object.defineProperty(messages_getMessagesReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [message reaction](https://core.telegram.org/api/reactions) list, along with the sender of each reaction. */
class messages_getMessageReactionsList_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x461B3F48;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMessageReactionsList";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["reaction", _2_types_js_1.types._Reaction, "flags.0?Reaction"],
            ["offset", "string", "flags.1?string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.reaction ?? null, _2_types_js_1.types._Reaction, "flags.0?Reaction"],
            [this.offset ?? null, "string", "flags.1?string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Get only reactions of this type */
        Object.defineProperty(this, "reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for pagination (taken from the `next_offset` field of the returned [messages.MessageReactionsList](https://core.telegram.org/type/messages.MessageReactionsList)); empty in the first request. */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.reaction = params.reaction;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.messages_getMessageReactionsList_ = messages_getMessageReactionsList_;
Object.defineProperty(messages_getMessageReactionsList_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change the set of [message reactions »](https://core.telegram.org/api/reactions) that can be used in a certain group, supergroup or channel */
class messages_setChatAvailableReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFEB16771;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setChatAvailableReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["available_reactions", _2_types_js_1.types._ChatReactions, "ChatReactions"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.available_reactions, _2_types_js_1.types._ChatReactions, "ChatReactions"],
        ];
    }
    constructor(params) {
        super();
        /** Group where to apply changes */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Allowed reaction emojis */
        Object.defineProperty(this, "available_reactions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.available_reactions = params.available_reactions;
    }
}
exports.messages_setChatAvailableReactions_ = messages_setChatAvailableReactions_;
Object.defineProperty(messages_setChatAvailableReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain available [message reactions »](https://core.telegram.org/api/reactions) */
class messages_getAvailableReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x18DEA0AC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAvailableReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getAvailableReactions_ = messages_getAvailableReactions_;
Object.defineProperty(messages_getAvailableReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change default emoji reaction to use in the quick reaction menu: the value is synced across devices and can be fetched using [help.getConfig, `reactions_default` field](https://core.telegram.org/method/help.getConfig). */
class messages_setDefaultReaction_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4F47A016;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setDefaultReaction";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["reaction", _2_types_js_1.types._Reaction, "Reaction"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.reaction, _2_types_js_1.types._Reaction, "Reaction"],
        ];
    }
    constructor(params) {
        super();
        /** New emoji reaction */
        Object.defineProperty(this, "reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.reaction = params.reaction;
    }
}
exports.messages_setDefaultReaction_ = messages_setDefaultReaction_;
Object.defineProperty(messages_setDefaultReaction_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Translate a given text. */
class messages_translateText_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x63183030;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.translateText";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
            ["id", ["number"], "flags.0?Vector<int>"],
            ["text", [_2_types_js_1.types._TextWithEntities], "flags.1?Vector<TextWithEntities>"],
            ["to_lang", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer ?? null, _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
            [this.id ?? null, ["number"], "flags.0?Vector<int>"],
            [this.text ?? null, [_2_types_js_1.types._TextWithEntities], "flags.1?Vector<TextWithEntities>"],
            [this.to_lang, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** If the text is a chat message, the peer ID */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** A list of message IDs to translate */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** A list of styled messages to translate */
        Object.defineProperty(this, "text", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Two-letter ISO 639-1 language code of the language to which the message is translated */
        Object.defineProperty(this, "to_lang", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.text = params.text;
        this.to_lang = params.to_lang;
    }
}
exports.messages_translateText_ = messages_translateText_;
Object.defineProperty(messages_translateText_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get unread reactions to messages you sent */
class messages_getUnreadReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3223495B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getUnreadReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
            ["offset_id", "number", "int"],
            ["add_offset", "number", "int"],
            ["limit", "number", "int"],
            ["max_id", "number", "int"],
            ["min_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
            [this.offset_id, "number", "int"],
            [this.add_offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.max_id, "number", "int"],
            [this.min_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, considers only reactions to messages within the specified [forum topic](https://core.telegram.org/api/forum#forum-topics) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "add_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return reactions for messages up until this message ID */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return reactions for messages starting from this message ID */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.top_msg_id = params.top_msg_id;
        this.offset_id = params.offset_id;
        this.add_offset = params.add_offset;
        this.limit = params.limit;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
    }
}
exports.messages_getUnreadReactions_ = messages_getUnreadReactions_;
Object.defineProperty(messages_getUnreadReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark [message reactions »](https://core.telegram.org/api/reactions) as read */
class messages_readReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x54AA7F8E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.readReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["top_msg_id", "number", "flags.0?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.top_msg_id ?? null, "number", "flags.0?int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Mark as read only reactions to messages within the specified [forum topic](https://core.telegram.org/api/forum#forum-topics) */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.top_msg_id = params.top_msg_id;
    }
}
exports.messages_readReactions_ = messages_readReactions_;
Object.defineProperty(messages_readReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** View and search recently sent media.
This method does not support pagination. */
class messages_searchSentMedia_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x107E31A0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.searchSentMedia";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["q", "string", "string"],
            ["filter", _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.q, "string", "string"],
            [this.filter, _2_types_js_1.types._MessagesFilter, "MessagesFilter"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Optional search query */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message filter */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return (max 100). */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.q = params.q;
        this.filter = params.filter;
        this.limit = params.limit;
    }
}
exports.messages_searchSentMedia_ = messages_searchSentMedia_;
Object.defineProperty(messages_searchSentMedia_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns installed attachment menu [bot mini apps »](https://core.telegram.org/api/bots/attach) */
class messages_getAttachMenuBots_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x16FCC2CB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAttachMenuBots";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getAttachMenuBots_ = messages_getAttachMenuBots_;
Object.defineProperty(messages_getAttachMenuBots_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns attachment menu entry for a [bot mini app that can be launched from the attachment menu »](https://core.telegram.org/api/bots/attach) */
class messages_getAttachMenuBot_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x77216192;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getAttachMenuBot";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** Bot ID */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
    }
}
exports.messages_getAttachMenuBot_ = messages_getAttachMenuBot_;
Object.defineProperty(messages_getAttachMenuBot_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Enable or disable [web bot attachment menu »](https://core.telegram.org/api/bots/attach) */
class messages_toggleBotInAttachMenu_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x69F59D69;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.toggleBotInAttachMenu";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["write_allowed", "true", "flags.0?true"],
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.write_allowed ?? null, "true", "flags.0?true"],
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the user authorizes the bot to write messages to them, if requested by [attachMenuBot](https://core.telegram.org/constructor/attachMenuBot).`request_write_access` */
        Object.defineProperty(this, "write_allowed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot ID */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Toggle */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.write_allowed = params.write_allowed;
        this.bot = params.bot;
        this.enabled = params.enabled;
    }
}
exports.messages_toggleBotInAttachMenu_ = messages_toggleBotInAttachMenu_;
Object.defineProperty(messages_toggleBotInAttachMenu_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Open a [bot mini app](https://core.telegram.org/bots/webapps), sending over user information after user confirmation. */
class messages_requestWebView_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x269DC2C1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.requestWebView";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["from_bot_menu", "true", "flags.4?true"],
            ["silent", "true", "flags.5?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["url", "string", "flags.1?string"],
            ["start_param", "string", "flags.3?string"],
            ["theme_params", _2_types_js_1.types._DataJSON, "flags.2?DataJSON"],
            ["platform", "string", "string"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.from_bot_menu ?? null, "true", "flags.4?true"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.url ?? null, "string", "flags.1?string"],
            [this.start_param ?? null, "string", "flags.3?string"],
            [this.theme_params ?? null, _2_types_js_1.types._DataJSON, "flags.2?DataJSON"],
            [this.platform, "string", "string"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the webview was opened by clicking on the bot's [menu button »](https://core.telegram.org/api/bots/menu). */
        Object.defineProperty(this, "from_bot_menu", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://core.telegram.org/method/messages.sendWebViewResultMessage) should be sent silently (no notifications for the receivers). */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Dialog where the web app is being opened, and where the resulting message will be sent (see the [docs for more info »](https://core.telegram.org/api/bots/webapps)). */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot that owns the [web app](https://core.telegram.org/api/bots/webapps) */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Web app URL](https://core.telegram.org/api/bots/webapps) */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If the web app was opened from the attachment menu using a [attachment menu deep link](https://core.telegram.org/api/links#bot-attachment-or-side-menu-links), `start_param` should contain the `data` from the `startattach` parameter. */
        Object.defineProperty(this, "start_param", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Theme parameters »](https://core.telegram.org/api/bots/webapps#theme-parameters) */
        Object.defineProperty(this, "theme_params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Short name of the application; 0-64 English letters, digits, and underscores */
        Object.defineProperty(this, "platform", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://core.telegram.org/method/messages.sendWebViewResultMessage) should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Open the web app as the specified peer, sending the resulting the message as the specified peer. */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.from_bot_menu = params.from_bot_menu;
        this.silent = params.silent;
        this.peer = params.peer;
        this.bot = params.bot;
        this.url = params.url;
        this.start_param = params.start_param;
        this.theme_params = params.theme_params;
        this.platform = params.platform;
        this.reply_to = params.reply_to;
        this.send_as = params.send_as;
    }
}
exports.messages_requestWebView_ = messages_requestWebView_;
Object.defineProperty(messages_requestWebView_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Indicate to the server (from the user side) that the user is still using a web app. */
class messages_prolongWebView_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB0D81A83;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.prolongWebView";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["silent", "true", "flags.5?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["query_id", "bigint", "long"],
            ["reply_to", _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.silent ?? null, "true", "flags.5?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.query_id, "bigint", "long"],
            [this.reply_to ?? null, _2_types_js_1.types._InputReplyTo, "flags.0?InputReplyTo"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.13?InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://core.telegram.org/method/messages.sendWebViewResultMessage) should be sent silently (no notifications for the receivers). */
        Object.defineProperty(this, "silent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Dialog where the web app was opened. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot that owns the [web app](https://core.telegram.org/api/bots/webapps) */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Web app interaction ID obtained from [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView) */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://core.telegram.org/method/messages.sendWebViewResultMessage) should be sent in reply to the specified message or story. */
        Object.defineProperty(this, "reply_to", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Open the web app as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.silent = params.silent;
        this.peer = params.peer;
        this.bot = params.bot;
        this.query_id = params.query_id;
        this.reply_to = params.reply_to;
        this.send_as = params.send_as;
    }
}
exports.messages_prolongWebView_ = messages_prolongWebView_;
Object.defineProperty(messages_prolongWebView_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Open a [bot mini app](https://core.telegram.org/api/bots/webapps). */
class messages_requestSimpleWebView_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1A46500A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.requestSimpleWebView";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["from_switch_webview", "true", "flags.1?true"],
            ["from_side_menu", "true", "flags.2?true"],
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["url", "string", "flags.3?string"],
            ["start_param", "string", "flags.4?string"],
            ["theme_params", _2_types_js_1.types._DataJSON, "flags.0?DataJSON"],
            ["platform", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.from_switch_webview ?? null, "true", "flags.1?true"],
            [this.from_side_menu ?? null, "true", "flags.2?true"],
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.url ?? null, "string", "flags.3?string"],
            [this.start_param ?? null, "string", "flags.4?string"],
            [this.theme_params ?? null, _2_types_js_1.types._DataJSON, "flags.0?DataJSON"],
            [this.platform, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the webapp was opened by clicking on the `switch_webview` button shown on top of the inline results list returned by [messages.getInlineBotResults](https://core.telegram.org/method/messages.getInlineBotResults). */
        Object.defineProperty(this, "from_switch_webview", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Set this flag if opening the Mini App from the installed [side menu entry »](https://core.telegram.org/api/bots/attach) or from a [Mini App link »](https://core.telegram.org/api/links#mini-app-links). */
        Object.defineProperty(this, "from_side_menu", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot that owns the mini app */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Web app URL, if opening from a keyboard button or inline result */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Start parameter, if opening from a [Mini App link »](https://core.telegram.org/api/links#mini-app-links). */
        Object.defineProperty(this, "start_param", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Theme parameters »](https://core.telegram.org/api/bots/webapps#theme-parameters) */
        Object.defineProperty(this, "theme_params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Short name of the application; 0-64 English letters, digits, and underscores */
        Object.defineProperty(this, "platform", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.from_switch_webview = params.from_switch_webview;
        this.from_side_menu = params.from_side_menu;
        this.bot = params.bot;
        this.url = params.url;
        this.start_param = params.start_param;
        this.theme_params = params.theme_params;
        this.platform = params.platform;
    }
}
exports.messages_requestSimpleWebView_ = messages_requestSimpleWebView_;
Object.defineProperty(messages_requestSimpleWebView_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Terminate webview interaction started with [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView), sending the specified message to the chat on behalf of the user. */
class messages_sendWebViewResultMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0A4314F5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendWebViewResultMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot_query_id", "string", "string"],
            ["result", _2_types_js_1.types._InputBotInlineResult, "InputBotInlineResult"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot_query_id, "string", "string"],
            [this.result, _2_types_js_1.types._InputBotInlineResult, "InputBotInlineResult"],
        ];
    }
    constructor(params) {
        super();
        /** Webview interaction ID obtained from [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView) */
        Object.defineProperty(this, "bot_query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message to send */
        Object.defineProperty(this, "result", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot_query_id = params.bot_query_id;
        this.result = params.result;
    }
}
exports.messages_sendWebViewResultMessage_ = messages_sendWebViewResultMessage_;
Object.defineProperty(messages_sendWebViewResultMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Used by the user to relay data from an opened [reply keyboard bot mini app](https://core.telegram.org/api/bots/webapps) to the bot that owns it. */
class messages_sendWebViewData_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDC0242C8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendWebViewData";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["random_id", "bigint", "long"],
            ["button_text", "string", "string"],
            ["data", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.random_id, "bigint", "long"],
            [this.button_text, "string", "string"],
            [this.data, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Bot that owns the web app */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID to prevent duplicate sending of the same event */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Text of the [keyboardButtonSimpleWebView](https://core.telegram.org/constructor/keyboardButtonSimpleWebView) that was pressed to open the web app. */
        Object.defineProperty(this, "button_text", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Data to relay to the bot, obtained from a [`web_app_data_send` JS event](https://core.telegram.org/api/web-events#web-app-data-send). */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.random_id = params.random_id;
        this.button_text = params.button_text;
        this.data = params.data;
    }
}
exports.messages_sendWebViewData_ = messages_sendWebViewData_;
Object.defineProperty(messages_sendWebViewData_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** [Transcribe voice message](https://core.telegram.org/api/transcribe) */
class messages_transcribeAudio_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x269E9A49;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.transcribeAudio";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer ID where the voice message was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Voice message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.messages_transcribeAudio_ = messages_transcribeAudio_;
Object.defineProperty(messages_transcribeAudio_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Rate [transcribed voice message](https://core.telegram.org/api/transcribe) */
class messages_rateTranscribedAudio_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7F1D072F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.rateTranscribedAudio";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["transcription_id", "bigint", "long"],
            ["good", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.transcription_id, "bigint", "long"],
            [this.good, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the voice message was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Transcription ID */
        Object.defineProperty(this, "transcription_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the transcription was correct */
        Object.defineProperty(this, "good", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.transcription_id = params.transcription_id;
        this.good = params.good;
    }
}
exports.messages_rateTranscribedAudio_ = messages_rateTranscribedAudio_;
Object.defineProperty(messages_rateTranscribedAudio_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch [custom emoji stickers »](https://core.telegram.org/api/custom-emoji). */
class messages_getCustomEmojiDocuments_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD9AB0F54;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getCustomEmojiDocuments";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["document_id", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.document_id, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        /** [Custom emoji](https://core.telegram.org/api/custom-emoji) IDs from a [messageEntityCustomEmoji](https://core.telegram.org/constructor/messageEntityCustomEmoji). */
        Object.defineProperty(this, "document_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.document_id = params.document_id;
    }
}
exports.messages_getCustomEmojiDocuments_ = messages_getCustomEmojiDocuments_;
Object.defineProperty(messages_getCustomEmojiDocuments_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Gets the list of currently installed [custom emoji stickersets](https://core.telegram.org/api/custom-emoji). */
class messages_getEmojiStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFBFCA18F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getEmojiStickers_ = messages_getEmojiStickers_;
Object.defineProperty(messages_getEmojiStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Gets featured custom emoji stickersets. */
class messages_getFeaturedEmojiStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0ECF6736;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getFeaturedEmojiStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getFeaturedEmojiStickers_ = messages_getFeaturedEmojiStickers_;
Object.defineProperty(messages_getFeaturedEmojiStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a [message reaction](https://core.telegram.org/api/reactions) */
class messages_reportReaction_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3F64C076;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reportReaction";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["reaction_peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.reaction_peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the message was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peer that sent the reaction */
        Object.defineProperty(this, "reaction_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.reaction_peer = params.reaction_peer;
    }
}
exports.messages_reportReaction_ = messages_reportReaction_;
Object.defineProperty(messages_reportReaction_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Got popular [message reactions](https://core.telegram.org/api/reactions) */
class messages_getTopReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBB8125BA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getTopReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.messages_getTopReactions_ = messages_getTopReactions_;
Object.defineProperty(messages_getTopReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get recently used [message reactions](https://core.telegram.org/api/reactions) */
class messages_getRecentReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x39461DB2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getRecentReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.messages_getRecentReactions_ = messages_getRecentReactions_;
Object.defineProperty(messages_getRecentReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clear recently used [message reactions](https://core.telegram.org/api/reactions) */
class messages_clearRecentReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9DFEEFB4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.clearRecentReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_clearRecentReactions_ = messages_clearRecentReactions_;
Object.defineProperty(messages_clearRecentReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get information about extended media */
class messages_getExtendedMedia_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x84F80814;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getExtendedMedia";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.messages_getExtendedMedia_ = messages_getExtendedMedia_;
Object.defineProperty(messages_getExtendedMedia_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Changes the default value of the Time-To-Live setting, applied to all new chats. */
class messages_setDefaultHistoryTTL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9EB51445;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setDefaultHistoryTTL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["period", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.period, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The new default Time-To-Live of all messages sent in new chats. */
        Object.defineProperty(this, "period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.period = params.period;
    }
}
exports.messages_setDefaultHistoryTTL_ = messages_setDefaultHistoryTTL_;
Object.defineProperty(messages_setDefaultHistoryTTL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Gets the default value of the Time-To-Live setting, applied to all new chats. */
class messages_getDefaultHistoryTTL_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x658B7188;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDefaultHistoryTTL";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getDefaultHistoryTTL_ = messages_getDefaultHistoryTTL_;
Object.defineProperty(messages_getDefaultHistoryTTL_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send one or more chosen peers, as requested by a [keyboardButtonRequestPeer](https://core.telegram.org/constructor/keyboardButtonRequestPeer) button. */
class messages_sendBotRequestedPeer_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x91B2D060;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendBotRequestedPeer";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
            ["button_id", "number", "int"],
            ["requested_peers", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
            [this.button_id, "number", "int"],
            [this.requested_peers, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** The bot that sent the [keyboardButtonRequestPeer](https://core.telegram.org/constructor/keyboardButtonRequestPeer) button. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the message that contained the reply keyboard with the [keyboardButtonRequestPeer](https://core.telegram.org/constructor/keyboardButtonRequestPeer) button. */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The `button_id` field from the [keyboardButtonRequestPeer](https://core.telegram.org/constructor/keyboardButtonRequestPeer) constructor. */
        Object.defineProperty(this, "button_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The chosen peers. */
        Object.defineProperty(this, "requested_peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
        this.button_id = params.button_id;
        this.requested_peers = params.requested_peers;
    }
}
exports.messages_sendBotRequestedPeer_ = messages_sendBotRequestedPeer_;
Object.defineProperty(messages_sendBotRequestedPeer_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Represents a list of [emoji categories](https://core.telegram.org/api/custom-emoji#emoji-categories), to be used when selecting [custom emojis](https://core.telegram.org/api/custom-emoji). */
class messages_getEmojiGroups_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7488CE5B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiGroups";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getEmojiGroups_ = messages_getEmojiGroups_;
Object.defineProperty(messages_getEmojiGroups_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Represents a list of [emoji categories](https://core.telegram.org/api/custom-emoji#emoji-categories), to be used when selecting custom emojis to set as [custom emoji status](https://core.telegram.org/api). */
class messages_getEmojiStatusGroups_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2ECD56CD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiStatusGroups";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getEmojiStatusGroups_ = messages_getEmojiStatusGroups_;
Object.defineProperty(messages_getEmojiStatusGroups_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Represents a list of [emoji categories](https://core.telegram.org/api/custom-emoji#emoji-categories), to be used when selecting custom emojis to set as [profile picture](https://core.telegram.org/api/files#sticker-profile-pictures). */
class messages_getEmojiProfilePhotoGroups_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x21A548F3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getEmojiProfilePhotoGroups";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getEmojiProfilePhotoGroups_ = messages_getEmojiProfilePhotoGroups_;
Object.defineProperty(messages_getEmojiProfilePhotoGroups_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Look for [custom emojis](https://core.telegram.org/api/custom-emoji) associated to a UTF8 emoji */
class messages_searchCustomEmoji_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2C11C0D7;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.searchCustomEmoji";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["emoticon", "string", "string"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.emoticon, "string", "string"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** The emoji */
        Object.defineProperty(this, "emoticon", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.emoticon = params.emoticon;
        this.hash = params.hash;
    }
}
exports.messages_searchCustomEmoji_ = messages_searchCustomEmoji_;
Object.defineProperty(messages_searchCustomEmoji_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Show or hide the [real-time chat translation popup](https://core.telegram.org/api/translation) for a certain chat */
class messages_togglePeerTranslations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE47CB579;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.togglePeerTranslations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["disabled", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.disabled ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to disable or enable the real-time chat translation popup */
        Object.defineProperty(this, "disabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.disabled = params.disabled;
        this.peer = params.peer;
    }
}
exports.messages_togglePeerTranslations_ = messages_togglePeerTranslations_;
Object.defineProperty(messages_togglePeerTranslations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain information about a [direct link Mini App](https://core.telegram.org/api/bots/webapps#direct-link-mini-apps) */
class messages_getBotApp_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x34FDC5C3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getBotApp";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["app", _2_types_js_1.types._InputBotApp, "InputBotApp"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.app, _2_types_js_1.types._InputBotApp, "InputBotApp"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Bot app information obtained from a [Direct Mini App deep link »](https://core.telegram.org/api/links#direct-mini-app-links). */
        Object.defineProperty(this, "app", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.app = params.app;
        this.hash = params.hash;
    }
}
exports.messages_getBotApp_ = messages_getBotApp_;
Object.defineProperty(messages_getBotApp_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Open a [bot mini app](https://core.telegram.org/bots/webapps) from a [direct Mini App deep link](https://core.telegram.org/api/links#direct-mini-app-links), sending over user information after user confirmation. */
class messages_requestAppWebView_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8C5A3B3C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.requestAppWebView";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["write_allowed", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["app", _2_types_js_1.types._InputBotApp, "InputBotApp"],
            ["start_param", "string", "flags.1?string"],
            ["theme_params", _2_types_js_1.types._DataJSON, "flags.2?DataJSON"],
            ["platform", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.write_allowed ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.app, _2_types_js_1.types._InputBotApp, "InputBotApp"],
            [this.start_param ?? null, "string", "flags.1?string"],
            [this.theme_params ?? null, _2_types_js_1.types._DataJSON, "flags.2?DataJSON"],
            [this.platform, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Set this flag if the bot is asking permission to send messages to the user as specified in the [direct Mini App deep link](https://core.telegram.org/api/links#direct-mini-app-links) docs, and the user agreed. */
        Object.defineProperty(this, "write_allowed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If the client has clicked on the link in a Telegram chat, pass the chat's peer information; otherwise pass the bot's peer information, instead. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The app obtained by invoking [messages.getBotApp](https://core.telegram.org/method/messages.getBotApp) as specified in the [direct Mini App deep link](https://core.telegram.org/api/links#direct-mini-app-links) docs. */
        Object.defineProperty(this, "app", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If the `startapp` query string parameter is present in the [direct Mini App deep link](https://core.telegram.org/api/links#direct-mini-app-links), pass it to `start_param`. */
        Object.defineProperty(this, "start_param", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Theme parameters »](https://core.telegram.org/api/bots/webapps#theme-parameters) */
        Object.defineProperty(this, "theme_params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Short name of the application; 0-64 English letters, digits, and underscores */
        Object.defineProperty(this, "platform", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.write_allowed = params.write_allowed;
        this.peer = params.peer;
        this.app = params.app;
        this.start_param = params.start_param;
        this.theme_params = params.theme_params;
        this.platform = params.platform;
    }
}
exports.messages_requestAppWebView_ = messages_requestAppWebView_;
Object.defineProperty(messages_requestAppWebView_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set a custom [wallpaper »](https://core.telegram.org/api/wallpapers) in a specific private chat with another user. */
class messages_setChatWallPaper_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8FFACAE1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.setChatWallPaper";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["for_both", "true", "flags.3?true"],
            ["revert", "true", "flags.4?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["wallpaper", _2_types_js_1.types._InputWallPaper, "flags.0?InputWallPaper"],
            ["settings", _2_types_js_1.types._WallPaperSettings, "flags.2?WallPaperSettings"],
            ["id", "number", "flags.1?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.for_both ?? null, "true", "flags.3?true"],
            [this.revert ?? null, "true", "flags.4?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.wallpaper ?? null, _2_types_js_1.types._InputWallPaper, "flags.0?InputWallPaper"],
            [this.settings ?? null, _2_types_js_1.types._WallPaperSettings, "flags.2?WallPaperSettings"],
            [this.id ?? null, "number", "flags.1?int"],
        ];
    }
    constructor(params) {
        super();
        /** Only for [Premium](https://core.telegram.org/api/premium) users, sets the specified wallpaper for both users of the chat, without requiring confirmation from the other user. */
        Object.defineProperty(this, "for_both", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If we don't like the new wallpaper the other user of the chat has chosen for us using the `for_both` flag, we can re-set our previous wallpaper just on our side using this flag. */
        Object.defineProperty(this, "revert", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The private chat where the wallpaper will be set */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The [wallpaper »](https://core.telegram.org/api/wallpapers), obtained as described in the [wallpaper documentation »](https://core.telegram.org/api/wallpapers#uploading-wallpapers); must **not** be provided when installing a wallpaper obtained from a [messageActionSetChatWallPaper](https://core.telegram.org/constructor/messageActionSetChatWallPaper) service message (`id` must be provided, instead). */
        Object.defineProperty(this, "wallpaper", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Wallpaper settings, obtained as described in the [wallpaper documentation »](https://core.telegram.org/api/wallpapers#uploading-wallpapers) or from [messageActionSetChatWallPaper](https://core.telegram.org/constructor/messageActionSetChatWallPaper).`wallpaper`.`settings`. */
        Object.defineProperty(this, "settings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If the wallpaper was obtained from a [messageActionSetChatWallPaper](https://core.telegram.org/constructor/messageActionSetChatWallPaper) service message, must contain the ID of that message. */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.for_both = params.for_both;
        this.revert = params.revert;
        this.peer = params.peer;
        this.wallpaper = params.wallpaper;
        this.settings = params.settings;
        this.id = params.id;
    }
}
exports.messages_setChatWallPaper_ = messages_setChatWallPaper_;
Object.defineProperty(messages_setChatWallPaper_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Search for [custom emoji stickersets »](https://core.telegram.org/api/custom-emoji) */
class messages_searchEmojiStickerSets_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x92B4494C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.searchEmojiStickerSets";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["exclude_featured", "true", "flags.0?true"],
            ["q", "string", "string"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.exclude_featured ?? null, "true", "flags.0?true"],
            [this.q, "string", "string"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Exclude featured stickersets from results */
        Object.defineProperty(this, "exclude_featured", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Query string */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.exclude_featured = params.exclude_featured;
        this.q = params.q;
        this.hash = params.hash;
    }
}
exports.messages_searchEmojiStickerSets_ = messages_searchEmojiStickerSets_;
Object.defineProperty(messages_searchEmojiStickerSets_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the current saved dialog list, see [here »](https://core.telegram.org/api/saved-messages) for more info. */
class messages_getSavedDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5381D21A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSavedDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["exclude_pinned", "true", "flags.0?true"],
            ["offset_date", "number", "int"],
            ["offset_id", "number", "int"],
            ["offset_peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.exclude_pinned ?? null, "true", "flags.0?true"],
            [this.offset_date, "number", "int"],
            [this.offset_id, "number", "int"],
            [this.offset_peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Exclude pinned dialogs */
        Object.defineProperty(this, "exclude_pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) (`top_message` ID used for pagination) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offset peer for pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of list elements to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.exclude_pinned = params.exclude_pinned;
        this.offset_date = params.offset_date;
        this.offset_id = params.offset_id;
        this.offset_peer = params.offset_peer;
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.messages_getSavedDialogs_ = messages_getSavedDialogs_;
Object.defineProperty(messages_getSavedDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns [saved messages »](https://core.telegram.org/api/saved-messages) forwarded from a specific peer */
class messages_getSavedHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3D9A414D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSavedHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["offset_id", "number", "int"],
            ["offset_date", "number", "int"],
            ["add_offset", "number", "int"],
            ["limit", "number", "int"],
            ["max_id", "number", "int"],
            ["min_id", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.offset_id, "number", "int"],
            [this.offset_date, "number", "int"],
            [this.add_offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.max_id, "number", "int"],
            [this.min_id, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Target peer */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return messages starting from the specified message ID */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only return messages sent before the specified date */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of list elements to be skipped, negative values are also accepted. */
        Object.defineProperty(this, "add_offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of results to return */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with IDs less than **max\_id** */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only messages with IDs more than **min\_id** */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Result hash](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.offset_id = params.offset_id;
        this.offset_date = params.offset_date;
        this.add_offset = params.add_offset;
        this.limit = params.limit;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
        this.hash = params.hash;
    }
}
exports.messages_getSavedHistory_ = messages_getSavedHistory_;
Object.defineProperty(messages_getSavedHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes messages forwarded from a specific peer to [saved messages »](https://core.telegram.org/api/saved-messages). */
class messages_deleteSavedHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6E98102B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteSavedHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["max_id", "number", "int"],
            ["min_date", "number", "flags.2?int"],
            ["max_date", "number", "flags.3?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.max_id, "number", "int"],
            [this.min_date ?? null, "number", "flags.2?int"],
            [this.max_date ?? null, "number", "flags.3?int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer, whose messages will be deleted from [saved messages »](https://core.telegram.org/api/saved-messages) */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum ID of message to delete */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Delete all messages newer than this UNIX timestamp */
        Object.defineProperty(this, "min_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Delete all messages older than this UNIX timestamp */
        Object.defineProperty(this, "max_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.max_id = params.max_id;
        this.min_date = params.min_date;
        this.max_date = params.max_date;
    }
}
exports.messages_deleteSavedHistory_ = messages_deleteSavedHistory_;
Object.defineProperty(messages_deleteSavedHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get pinned [saved dialogs, see here »](https://core.telegram.org/api/saved-messages) for more info. */
class messages_getPinnedSavedDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD63D94E0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getPinnedSavedDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.messages_getPinnedSavedDialogs_ = messages_getPinnedSavedDialogs_;
Object.defineProperty(messages_getPinnedSavedDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Pin or unpin a [saved message dialog »](https://core.telegram.org/api/saved-messages). */
class messages_toggleSavedDialogPin_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAC81BBDE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.toggleSavedDialogPin";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["pinned", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputDialogPeer, "InputDialogPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.pinned ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputDialogPeer, "InputDialogPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to pin or unpin the dialog */
        Object.defineProperty(this, "pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The dialog to pin */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pinned = params.pinned;
        this.peer = params.peer;
    }
}
exports.messages_toggleSavedDialogPin_ = messages_toggleSavedDialogPin_;
Object.defineProperty(messages_toggleSavedDialogPin_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder pinned [saved message dialogs »](https://core.telegram.org/api/saved-messages). */
class messages_reorderPinnedSavedDialogs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8B716587;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reorderPinnedSavedDialogs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["force", "true", "flags.0?true"],
            ["order", [_2_types_js_1.types._InputDialogPeer], "Vector<InputDialogPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.force ?? null, "true", "flags.0?true"],
            [this.order, [_2_types_js_1.types._InputDialogPeer], "Vector<InputDialogPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** If set, dialogs pinned server-side but not present in the `order` field will be unpinned. */
        Object.defineProperty(this, "force", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New dialog order */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.force = params.force;
        this.order = params.order;
    }
}
exports.messages_reorderPinnedSavedDialogs_ = messages_reorderPinnedSavedDialogs_;
Object.defineProperty(messages_reorderPinnedSavedDialogs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_getSavedReactionTags_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3637E05B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getSavedReactionTags";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer ?? null, _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.hash = params.hash;
    }
}
exports.messages_getSavedReactionTags_ = messages_getSavedReactionTags_;
Object.defineProperty(messages_getSavedReactionTags_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_updateSavedReactionTag_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x60297DEC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.updateSavedReactionTag";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["reaction", _2_types_js_1.types._Reaction, "Reaction"],
            ["title", "string", "flags.0?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.reaction, _2_types_js_1.types._Reaction, "Reaction"],
            [this.title ?? null, "string", "flags.0?string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.reaction = params.reaction;
        this.title = params.title;
    }
}
exports.messages_updateSavedReactionTag_ = messages_updateSavedReactionTag_;
Object.defineProperty(messages_updateSavedReactionTag_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_getDefaultTagReactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBDF93428;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getDefaultTagReactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getDefaultTagReactions_ = messages_getDefaultTagReactions_;
Object.defineProperty(messages_getDefaultTagReactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_getOutboxReadDate_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8C4BFE5D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getOutboxReadDate";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.messages_getOutboxReadDate_ = messages_getOutboxReadDate_;
Object.defineProperty(messages_getOutboxReadDate_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_getQuickReplies_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD483F2A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getQuickReplies";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.messages_getQuickReplies_ = messages_getQuickReplies_;
Object.defineProperty(messages_getQuickReplies_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_reorderQuickReplies_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x60331907;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.reorderQuickReplies";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["order", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.order, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.order = params.order;
    }
}
exports.messages_reorderQuickReplies_ = messages_reorderQuickReplies_;
Object.defineProperty(messages_reorderQuickReplies_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_checkQuickReplyShortcut_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF1D0FBD3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.checkQuickReplyShortcut";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["shortcut", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.shortcut, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.shortcut = params.shortcut;
    }
}
exports.messages_checkQuickReplyShortcut_ = messages_checkQuickReplyShortcut_;
Object.defineProperty(messages_checkQuickReplyShortcut_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_editQuickReplyShortcut_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5C003CEF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.editQuickReplyShortcut";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["shortcut_id", "number", "int"],
            ["shortcut", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.shortcut_id, "number", "int"],
            [this.shortcut, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "shortcut_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortcut", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.shortcut_id = params.shortcut_id;
        this.shortcut = params.shortcut;
    }
}
exports.messages_editQuickReplyShortcut_ = messages_editQuickReplyShortcut_;
Object.defineProperty(messages_editQuickReplyShortcut_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_deleteQuickReplyShortcut_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3CC04740;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteQuickReplyShortcut";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["shortcut_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.shortcut_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "shortcut_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.shortcut_id = params.shortcut_id;
    }
}
exports.messages_deleteQuickReplyShortcut_ = messages_deleteQuickReplyShortcut_;
Object.defineProperty(messages_deleteQuickReplyShortcut_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_getQuickReplyMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x94A495C3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getQuickReplyMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["shortcut_id", "number", "int"],
            ["id", ["number"], "flags.0?Vector<int>"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.shortcut_id, "number", "int"],
            [this.id ?? null, ["number"], "flags.0?Vector<int>"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "shortcut_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.shortcut_id = params.shortcut_id;
        this.id = params.id;
        this.hash = params.hash;
    }
}
exports.messages_getQuickReplyMessages_ = messages_getQuickReplyMessages_;
Object.defineProperty(messages_getQuickReplyMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_sendQuickReplyMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6C750DE1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.sendQuickReplyMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["shortcut_id", "number", "int"],
            ["id", ["number"], "Vector<int>"],
            ["random_id", ["bigint"], "Vector<long>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.shortcut_id, "number", "int"],
            [this.id, ["number"], "Vector<int>"],
            [this.random_id, ["bigint"], "Vector<long>"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortcut_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.shortcut_id = params.shortcut_id;
        this.id = params.id;
        this.random_id = params.random_id;
    }
}
exports.messages_sendQuickReplyMessages_ = messages_sendQuickReplyMessages_;
Object.defineProperty(messages_sendQuickReplyMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_deleteQuickReplyMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE105E910;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.deleteQuickReplyMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["shortcut_id", "number", "int"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.shortcut_id, "number", "int"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "shortcut_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.shortcut_id = params.shortcut_id;
        this.id = params.id;
    }
}
exports.messages_deleteQuickReplyMessages_ = messages_deleteQuickReplyMessages_;
Object.defineProperty(messages_deleteQuickReplyMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_toggleDialogFilterTags_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFD2DDA49;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.toggleDialogFilterTags";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.enabled = params.enabled;
    }
}
exports.messages_toggleDialogFilterTags_ = messages_toggleDialogFilterTags_;
Object.defineProperty(messages_toggleDialogFilterTags_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class messages_getMyStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD0B5E1FC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "messages.getMyStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["offset_id", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.offset_id, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.offset_id = params.offset_id;
        this.limit = params.limit;
    }
}
exports.messages_getMyStickers_ = messages_getMyStickers_;
Object.defineProperty(messages_getMyStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns a current state of updates. */
class updates_getState_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEDD4882A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "updates.getState";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.updates_getState_ = updates_getState_;
Object.defineProperty(updates_getState_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get new [updates](https://core.telegram.org/api/updates). */
class updates_getDifference_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x19C2F763;
    }
    static get [_1_tl_object_js_1.name]() {
        return "updates.getDifference";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["pts", "number", "int"],
            ["pts_limit", "number", "flags.1?int"],
            ["pts_total_limit", "number", "flags.0?int"],
            ["date", "number", "int"],
            ["qts", "number", "int"],
            ["qts_limit", "number", "flags.2?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.pts, "number", "int"],
            [this.pts_limit ?? null, "number", "flags.1?int"],
            [this.pts_total_limit ?? null, "number", "flags.0?int"],
            [this.date, "number", "int"],
            [this.qts, "number", "int"],
            [this.qts_limit ?? null, "number", "flags.2?int"],
        ];
    }
    constructor(params) {
        super();
        /** PTS, see [updates](https://core.telegram.org/api/updates). */
        Object.defineProperty(this, "pts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** PTS limit */
        Object.defineProperty(this, "pts_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** For fast updating: if provided and `pts + pts_total_limit < remote pts`, [updates.differenceTooLong](https://core.telegram.org/constructor/updates.differenceTooLong) will be returned.
        Simply tells the server to not return the difference if it is bigger than `pts_total_limit`
        If the remote pts is too big (> ~4000000), this field will default to 1000000 */
        Object.defineProperty(this, "pts_total_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** date, see [updates](https://core.telegram.org/api/updates). */
        Object.defineProperty(this, "date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** QTS, see [updates](https://core.telegram.org/api/updates). */
        Object.defineProperty(this, "qts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** QTS limit */
        Object.defineProperty(this, "qts_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pts = params.pts;
        this.pts_limit = params.pts_limit;
        this.pts_total_limit = params.pts_total_limit;
        this.date = params.date;
        this.qts = params.qts;
        this.qts_limit = params.qts_limit;
    }
}
exports.updates_getDifference_ = updates_getDifference_;
Object.defineProperty(updates_getDifference_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the difference between the current state of updates of a certain channel and transmitted. */
class updates_getChannelDifference_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x03173D78;
    }
    static get [_1_tl_object_js_1.name]() {
        return "updates.getChannelDifference";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["force", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["filter", _2_types_js_1.types._ChannelMessagesFilter, "ChannelMessagesFilter"],
            ["pts", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.force ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.filter, _2_types_js_1.types._ChannelMessagesFilter, "ChannelMessagesFilter"],
            [this.pts, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Set to true to skip some possibly unneeded updates and reduce server-side load */
        Object.defineProperty(this, "force", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Messsage filter */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Persistent timestamp (see [updates](https://core.telegram.org/api/updates)) */
        Object.defineProperty(this, "pts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** How many updates to fetch, max `100000`
        Ordinary (non-bot) users are supposed to pass `10-100` */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.force = params.force;
        this.channel = params.channel;
        this.filter = params.filter;
        this.pts = params.pts;
        this.limit = params.limit;
    }
}
exports.updates_getChannelDifference_ = updates_getChannelDifference_;
Object.defineProperty(updates_getChannelDifference_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Installs a previously uploaded photo as a profile photo. */
class photos_updateProfilePhoto_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x09E82039;
    }
    static get [_1_tl_object_js_1.name]() {
        return "photos.updateProfilePhoto";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["fallback", "true", "flags.0?true"],
            ["bot", _2_types_js_1.types._InputUser, "flags.1?InputUser"],
            ["id", _2_types_js_1.types._InputPhoto, "InputPhoto"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.fallback ?? null, "true", "flags.0?true"],
            [this.bot ?? null, _2_types_js_1.types._InputUser, "flags.1?InputUser"],
            [this.id, _2_types_js_1.types._InputPhoto, "InputPhoto"],
        ];
    }
    constructor(params) {
        super();
        /** If set, the chosen profile photo will be shown to users that can't display your main profile photo due to your privacy settings. */
        Object.defineProperty(this, "fallback", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Can contain info of a bot we own, to change the profile photo of that bot, instead of the current user. */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Input photo */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.fallback = params.fallback;
        this.bot = params.bot;
        this.id = params.id;
    }
}
exports.photos_updateProfilePhoto_ = photos_updateProfilePhoto_;
Object.defineProperty(photos_updateProfilePhoto_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Updates current user profile photo. */
class photos_uploadProfilePhoto_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0388A3B5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "photos.uploadProfilePhoto";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["fallback", "true", "flags.3?true"],
            ["bot", _2_types_js_1.types._InputUser, "flags.5?InputUser"],
            ["file", _2_types_js_1.types._InputFile, "flags.0?InputFile"],
            ["video", _2_types_js_1.types._InputFile, "flags.1?InputFile"],
            ["video_start_ts", "number", "flags.2?double"],
            ["video_emoji_markup", _2_types_js_1.types._VideoSize, "flags.4?VideoSize"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.fallback ?? null, "true", "flags.3?true"],
            [this.bot ?? null, _2_types_js_1.types._InputUser, "flags.5?InputUser"],
            [this.file ?? null, _2_types_js_1.types._InputFile, "flags.0?InputFile"],
            [this.video ?? null, _2_types_js_1.types._InputFile, "flags.1?InputFile"],
            [this.video_start_ts ?? null, "number", "flags.2?double"],
            [this.video_emoji_markup ?? null, _2_types_js_1.types._VideoSize, "flags.4?VideoSize"],
        ];
    }
    constructor(params) {
        super();
        /** If set, the chosen profile photo will be shown to users that can't display your main profile photo due to your privacy settings. */
        Object.defineProperty(this, "fallback", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Can contain info of a bot we own, to change the profile photo of that bot, instead of the current user. */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Profile photo */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Animated profile picture](https://core.telegram.org/api/files#animated-profile-pictures) video */
        Object.defineProperty(this, "video", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Floating point UNIX timestamp in seconds, indicating the frame of the video/sticker that should be used as static preview; can only be used if `video` or `video_emoji_markup` is set. */
        Object.defineProperty(this, "video_start_ts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Animated sticker profile picture, must contain either a [videoSizeEmojiMarkup](https://core.telegram.org/constructor/videoSizeEmojiMarkup) or a [videoSizeStickerMarkup](https://core.telegram.org/constructor/videoSizeStickerMarkup) constructor. */
        Object.defineProperty(this, "video_emoji_markup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.fallback = params?.fallback;
        this.bot = params?.bot;
        this.file = params?.file;
        this.video = params?.video;
        this.video_start_ts = params?.video_start_ts;
        this.video_emoji_markup = params?.video_emoji_markup;
    }
}
exports.photos_uploadProfilePhoto_ = photos_uploadProfilePhoto_;
Object.defineProperty(photos_uploadProfilePhoto_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes profile photos. The method returns a list of successfully deleted photo IDs. */
class photos_deletePhotos_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x87CF7F2F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "photos.deletePhotos";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputPhoto], "Vector<InputPhoto>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputPhoto], "Vector<InputPhoto>"],
        ];
    }
    constructor(params) {
        super();
        /** Input photos to delete */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.photos_deletePhotos_ = photos_deletePhotos_;
Object.defineProperty(photos_deletePhotos_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the list of user photos. */
class photos_getUserPhotos_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x91CD32A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "photos.getUserPhotos";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["offset", "number", "int"],
            ["max_id", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.offset, "number", "int"],
            [this.max_id, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of list elements to be skipped */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If a positive value was transferred, the method will return only photos with IDs less than the set one. This parameter is often useful when [refetching file references »](https://core.telegram.org/api/file_reference), as in conjuction with `limit=1` and `offset=-1` the [photo](https://core.telegram.org/constructor/photo) object with the `id` specified in `max_id` can be fetched. */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of list elements to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
        this.offset = params.offset;
        this.max_id = params.max_id;
        this.limit = params.limit;
    }
}
exports.photos_getUserPhotos_ = photos_getUserPhotos_;
Object.defineProperty(photos_getUserPhotos_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Upload a custom profile picture for a contact, or suggest a new profile picture to a contact. */
class photos_uploadContactProfilePhoto_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE14C4A71;
    }
    static get [_1_tl_object_js_1.name]() {
        return "photos.uploadContactProfilePhoto";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["suggest", "true", "flags.3?true"],
            ["save", "true", "flags.4?true"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["file", _2_types_js_1.types._InputFile, "flags.0?InputFile"],
            ["video", _2_types_js_1.types._InputFile, "flags.1?InputFile"],
            ["video_start_ts", "number", "flags.2?double"],
            ["video_emoji_markup", _2_types_js_1.types._VideoSize, "flags.5?VideoSize"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.suggest ?? null, "true", "flags.3?true"],
            [this.save ?? null, "true", "flags.4?true"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.file ?? null, _2_types_js_1.types._InputFile, "flags.0?InputFile"],
            [this.video ?? null, _2_types_js_1.types._InputFile, "flags.1?InputFile"],
            [this.video_start_ts ?? null, "number", "flags.2?double"],
            [this.video_emoji_markup ?? null, _2_types_js_1.types._VideoSize, "flags.5?VideoSize"],
        ];
    }
    constructor(params) {
        super();
        /** If set, will send a [messageActionSuggestProfilePhoto](https://core.telegram.org/constructor/messageActionSuggestProfilePhoto) service message to `user_id`, suggesting them to use the specified profile picture; otherwise, will set a personal profile picture for the user (only visible to the current user). */
        Object.defineProperty(this, "suggest", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, removes a previously set personal profile picture (does not affect suggested profile pictures, to remove them simply deleted the [messageActionSuggestProfilePhoto](https://core.telegram.org/constructor/messageActionSuggestProfilePhoto) service message with [messages.deleteMessages](https://core.telegram.org/method/messages.deleteMessages)). */
        Object.defineProperty(this, "save", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The contact */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Profile photo */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Animated profile picture](https://core.telegram.org/api/files#animated-profile-pictures) video */
        Object.defineProperty(this, "video", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Floating point UNIX timestamp in seconds, indicating the frame of the video/sticker that should be used as static preview; can only be used if `video` or `video_emoji_markup` is set. */
        Object.defineProperty(this, "video_start_ts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Animated sticker profile picture, must contain either a [videoSizeEmojiMarkup](https://core.telegram.org/constructor/videoSizeEmojiMarkup) or a [videoSizeStickerMarkup](https://core.telegram.org/constructor/videoSizeStickerMarkup) constructor. */
        Object.defineProperty(this, "video_emoji_markup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.suggest = params.suggest;
        this.save = params.save;
        this.user_id = params.user_id;
        this.file = params.file;
        this.video = params.video;
        this.video_start_ts = params.video_start_ts;
        this.video_emoji_markup = params.video_emoji_markup;
    }
}
exports.photos_uploadContactProfilePhoto_ = photos_uploadContactProfilePhoto_;
Object.defineProperty(photos_uploadContactProfilePhoto_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Saves a part of file for further sending to one of the methods. */
class upload_saveFilePart_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB304A621;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.saveFilePart";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["file_id", "bigint", "long"],
            ["file_part", "number", "int"],
            ["bytes", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.file_id, "bigint", "long"],
            [this.file_part, "number", "int"],
            [this.bytes, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Random file identifier created by the client */
        Object.defineProperty(this, "file_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Numerical order of a part */
        Object.defineProperty(this, "file_part", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Binary data, content of a part */
        Object.defineProperty(this, "bytes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file_id = params.file_id;
        this.file_part = params.file_part;
        this.bytes = params.bytes;
    }
}
exports.upload_saveFilePart_ = upload_saveFilePart_;
Object.defineProperty(upload_saveFilePart_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns content of a whole file or its part. */
class upload_getFile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBE5335BE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.getFile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["precise", "true", "flags.0?true"],
            ["cdn_supported", "true", "flags.1?true"],
            ["location", _2_types_js_1.types._InputFileLocation, "InputFileLocation"],
            ["offset", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.precise ?? null, "true", "flags.0?true"],
            [this.cdn_supported ?? null, "true", "flags.1?true"],
            [this.location, _2_types_js_1.types._InputFileLocation, "InputFileLocation"],
            [this.offset, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Disable some checks on limit and offset values, useful for example to stream videos by keyframes */
        Object.defineProperty(this, "precise", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the current client supports [CDN downloads](https://core.telegram.org/cdn) */
        Object.defineProperty(this, "cdn_supported", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** File location */
        Object.defineProperty(this, "location", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of bytes to be skipped */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of bytes to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.precise = params.precise;
        this.cdn_supported = params.cdn_supported;
        this.location = params.location;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.upload_getFile_ = upload_getFile_;
Object.defineProperty(upload_getFile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Saves a part of a large file (over 10 MB in size) to be later passed to one of the methods. */
class upload_saveBigFilePart_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDE7B673D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.saveBigFilePart";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["file_id", "bigint", "long"],
            ["file_part", "number", "int"],
            ["file_total_parts", "number", "int"],
            ["bytes", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.file_id, "bigint", "long"],
            [this.file_part, "number", "int"],
            [this.file_total_parts, "number", "int"],
            [this.bytes, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Random file id, created by the client */
        Object.defineProperty(this, "file_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Part sequence number */
        Object.defineProperty(this, "file_part", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Total number of parts */
        Object.defineProperty(this, "file_total_parts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Binary data, part contents */
        Object.defineProperty(this, "bytes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file_id = params.file_id;
        this.file_part = params.file_part;
        this.file_total_parts = params.file_total_parts;
        this.bytes = params.bytes;
    }
}
exports.upload_saveBigFilePart_ = upload_saveBigFilePart_;
Object.defineProperty(upload_saveBigFilePart_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns content of a web file, by proxying the request through telegram, see the [webfile docs for more info](https://core.telegram.org/api/files#downloading-webfiles). */
class upload_getWebFile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x24E6818D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.getWebFile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["location", _2_types_js_1.types._InputWebFileLocation, "InputWebFileLocation"],
            ["offset", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.location, _2_types_js_1.types._InputWebFileLocation, "InputWebFileLocation"],
            [this.offset, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The file to download */
        Object.defineProperty(this, "location", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of bytes to be skipped */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Number of bytes to be returned */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.location = params.location;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.upload_getWebFile_ = upload_getWebFile_;
Object.defineProperty(upload_getWebFile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Download a [CDN](https://core.telegram.org/cdn) file. */
class upload_getCdnFile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x395F69DA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.getCdnFile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["file_token", Uint8Array, "bytes"],
            ["offset", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.file_token, Uint8Array, "bytes"],
            [this.offset, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** File token */
        Object.defineProperty(this, "file_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset of chunk to download */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Length of chunk to download */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file_token = params.file_token;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.upload_getCdnFile_ = upload_getCdnFile_;
Object.defineProperty(upload_getCdnFile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Request a reupload of a certain file to a [CDN DC](https://core.telegram.org/cdn). */
class upload_reuploadCdnFile_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9B2754A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.reuploadCdnFile";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["file_token", Uint8Array, "bytes"],
            ["request_token", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.file_token, Uint8Array, "bytes"],
            [this.request_token, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** File token */
        Object.defineProperty(this, "file_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Request token */
        Object.defineProperty(this, "request_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file_token = params.file_token;
        this.request_token = params.request_token;
    }
}
exports.upload_reuploadCdnFile_ = upload_reuploadCdnFile_;
Object.defineProperty(upload_reuploadCdnFile_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get SHA256 hashes for verifying downloaded [CDN](https://core.telegram.org/cdn) files */
class upload_getCdnFileHashes_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x91DC3F31;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.getCdnFileHashes";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["file_token", Uint8Array, "bytes"],
            ["offset", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.file_token, Uint8Array, "bytes"],
            [this.offset, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** File */
        Object.defineProperty(this, "file_token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset from which to start getting hashes */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.file_token = params.file_token;
        this.offset = params.offset;
    }
}
exports.upload_getCdnFileHashes_ = upload_getCdnFileHashes_;
Object.defineProperty(upload_getCdnFileHashes_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get SHA256 hashes for verifying downloaded files */
class upload_getFileHashes_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9156982A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "upload.getFileHashes";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["location", _2_types_js_1.types._InputFileLocation, "InputFileLocation"],
            ["offset", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.location, _2_types_js_1.types._InputFileLocation, "InputFileLocation"],
            [this.offset, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** File */
        Object.defineProperty(this, "location", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset from which to get file hashes */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.location = params.location;
        this.offset = params.offset;
    }
}
exports.upload_getFileHashes_ = upload_getFileHashes_;
Object.defineProperty(upload_getFileHashes_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns current configuration, including data center configuration. */
class help_getConfig_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC4F9186B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getConfig";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getConfig_ = help_getConfig_;
Object.defineProperty(help_getConfig_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns info on data center nearest to the user. */
class help_getNearestDc_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1FB33026;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getNearestDc";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getNearestDc_ = help_getNearestDc_;
Object.defineProperty(help_getNearestDc_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns information on update availability for the current application. */
class help_getAppUpdate_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x522D5A7D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getAppUpdate";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["source", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.source, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Source */
        Object.defineProperty(this, "source", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.source = params.source;
    }
}
exports.help_getAppUpdate_ = help_getAppUpdate_;
Object.defineProperty(help_getAppUpdate_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns localized text of a text message with an invitation. */
class help_getInviteText_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4D392343;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getInviteText";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getInviteText_ = help_getInviteText_;
Object.defineProperty(help_getInviteText_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the support user for the "ask a question" feature. */
class help_getSupport_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9CDF08CD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getSupport";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getSupport_ = help_getSupport_;
Object.defineProperty(help_getSupport_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only */
class help_setBotUpdatesStatus_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEC22CFCD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.setBotUpdatesStatus";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["pending_updates_count", "number", "int"],
            ["message", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.pending_updates_count, "number", "int"],
            [this.message, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Number of pending updates */
        Object.defineProperty(this, "pending_updates_count", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Error message, if present */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pending_updates_count = params.pending_updates_count;
        this.message = params.message;
    }
}
exports.help_setBotUpdatesStatus_ = help_setBotUpdatesStatus_;
Object.defineProperty(help_setBotUpdatesStatus_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get configuration for [CDN](https://core.telegram.org/cdn) file downloads. */
class help_getCdnConfig_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x52029342;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getCdnConfig";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getCdnConfig_ = help_getCdnConfig_;
Object.defineProperty(help_getCdnConfig_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get recently used `t.me` links. */
class help_getRecentMeUrls_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3DC0F114;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getRecentMeUrls";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["referer", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.referer, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Referrer */
        Object.defineProperty(this, "referer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.referer = params.referer;
    }
}
exports.help_getRecentMeUrls_ = help_getRecentMeUrls_;
Object.defineProperty(help_getRecentMeUrls_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Look for updates of telegram's terms of service */
class help_getTermsOfServiceUpdate_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2CA51FD1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getTermsOfServiceUpdate";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getTermsOfServiceUpdate_ = help_getTermsOfServiceUpdate_;
Object.defineProperty(help_getTermsOfServiceUpdate_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Accept the new terms of service */
class help_acceptTermsOfService_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEE72F79A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.acceptTermsOfService";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** ID of terms of service */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.help_acceptTermsOfService_ = help_acceptTermsOfService_;
Object.defineProperty(help_acceptTermsOfService_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about an unsupported deep link, see [here for more info »](https://core.telegram.org/api/links#unsupported-links). */
class help_getDeepLinkInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3FEDC75F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getDeepLinkInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["path", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.path, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Path component of a `tg:` link */
        Object.defineProperty(this, "path", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.path = params.path;
    }
}
exports.help_getDeepLinkInfo_ = help_getDeepLinkInfo_;
Object.defineProperty(help_getDeepLinkInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get app-specific configuration, see [client configuration](https://core.telegram.org/api/config#client-configuration) for more info on the result. */
class help_getAppConfig_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x61E3F854;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getAppConfig";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.help_getAppConfig_ = help_getAppConfig_;
Object.defineProperty(help_getAppConfig_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Saves logs of application on the server. */
class help_saveAppLog_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6F02F748;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.saveAppLog";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["events", [_2_types_js_1.types._InputAppEvent], "Vector<InputAppEvent>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.events, [_2_types_js_1.types._InputAppEvent], "Vector<InputAppEvent>"],
        ];
    }
    constructor(params) {
        super();
        /** List of input events */
        Object.defineProperty(this, "events", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.events = params.events;
    }
}
exports.help_saveAppLog_ = help_saveAppLog_;
Object.defineProperty(help_saveAppLog_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [passport](https://core.telegram.org/passport) configuration */
class help_getPassportConfig_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC661AD08;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getPassportConfig";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.help_getPassportConfig_ = help_getPassportConfig_;
Object.defineProperty(help_getPassportConfig_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get localized name of the telegram support user */
class help_getSupportName_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD360E72C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getSupportName";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getSupportName_ = help_getSupportName_;
Object.defineProperty(help_getSupportName_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Can only be used by TSF members to obtain internal information. */
class help_getUserInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x038A08D3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getUserInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
    }
}
exports.help_getUserInfo_ = help_getUserInfo_;
Object.defineProperty(help_getUserInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Internal use */
class help_editUserInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x66B91B70;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.editUserInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["message", "string", "string"],
            ["entities", [_2_types_js_1.types._MessageEntity], "Vector<MessageEntity>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.message, "string", "string"],
            [this.entities, [_2_types_js_1.types._MessageEntity], "Vector<MessageEntity>"],
        ];
    }
    constructor(params) {
        super();
        /** User */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Message entities for styled text](https://core.telegram.org/api/entities) */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
        this.message = params.message;
        this.entities = params.entities;
    }
}
exports.help_editUserInfo_ = help_editUserInfo_;
Object.defineProperty(help_editUserInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get MTProxy/Public Service Announcement information */
class help_getPromoData_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC0977421;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getPromoData";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getPromoData_ = help_getPromoData_;
Object.defineProperty(help_getPromoData_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Hide MTProxy/Public Service Announcement information */
class help_hidePromoData_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1E251C95;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.hidePromoData";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Peer to hide */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.help_hidePromoData_ = help_hidePromoData_;
Object.defineProperty(help_hidePromoData_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Dismiss a [suggestion, see here for more info »](https://core.telegram.org/api/config#suggestions). */
class help_dismissSuggestion_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF50DBAA1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.dismissSuggestion";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["suggestion", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.suggestion, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** In the case of pending suggestions in [channels](https://core.telegram.org/constructor/channelFull), the channel ID. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Suggestion, see here for more info »](https://core.telegram.org/api/config#suggestions). */
        Object.defineProperty(this, "suggestion", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.suggestion = params.suggestion;
    }
}
exports.help_dismissSuggestion_ = help_dismissSuggestion_;
Object.defineProperty(help_dismissSuggestion_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get name, ISO code, localized name and phone codes/patterns of all available countries */
class help_getCountriesList_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x735787A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getCountriesList";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_code", "string", "string"],
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_code, "string", "string"],
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Language code of the current user */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_code = params.lang_code;
        this.hash = params.hash;
    }
}
exports.help_getCountriesList_ = help_getCountriesList_;
Object.defineProperty(help_getCountriesList_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get Telegram Premium promotion information */
class help_getPremiumPromo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB81B93D4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getPremiumPromo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.help_getPremiumPromo_ = help_getPremiumPromo_;
Object.defineProperty(help_getPremiumPromo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the set of [accent color palettes »](https://core.telegram.org/api/colors) that can be used for message accents. */
class help_getPeerColors_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDA80F42F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getPeerColors";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.help_getPeerColors_ = help_getPeerColors_;
Object.defineProperty(help_getPeerColors_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the set of [accent color palettes »](https://core.telegram.org/api/colors) that can be used in profile page backgrounds. */
class help_getPeerProfileColors_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xABCFA9FD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getPeerProfileColors";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Hash for pagination, for more info click here](https://core.telegram.org/api/offsets#hash-generation) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.help_getPeerProfileColors_ = help_getPeerProfileColors_;
Object.defineProperty(help_getPeerProfileColors_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class help_getTimezonesList_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x49B30240;
    }
    static get [_1_tl_object_js_1.name]() {
        return "help.getTimezonesList";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hash", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hash, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hash = params.hash;
    }
}
exports.help_getTimezonesList_ = help_getTimezonesList_;
Object.defineProperty(help_getTimezonesList_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark [channel/supergroup](https://core.telegram.org/api/channel) history as read */
class channels_readHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCC104937;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.readHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["max_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.max_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** [Channel/supergroup](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of message up to which messages should be marked as read */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.max_id = params.max_id;
    }
}
exports.channels_readHistory_ = channels_readHistory_;
Object.defineProperty(channels_readHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete messages in a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_deleteMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x84C1FD4E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.deleteMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** [Channel/supergroup](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of messages to delete */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.id = params.id;
    }
}
exports.channels_deleteMessages_ = channels_deleteMessages_;
Object.defineProperty(channels_deleteMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reports some messages from a user in a supergroup as spam; requires administrator rights in the supergroup */
class channels_reportSpam_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF44A8315;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.reportSpam";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["participant", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.participant, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Participant whose messages should be reported */
        Object.defineProperty(this, "participant", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of spam messages */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.participant = params.participant;
        this.id = params.id;
    }
}
exports.channels_reportSpam_ = channels_reportSpam_;
Object.defineProperty(channels_reportSpam_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [channel/supergroup](https://core.telegram.org/api/channel) messages */
class channels_getMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAD8C9A23;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["id", [_2_types_js_1.types._InputMessage], "Vector<InputMessage>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.id, [_2_types_js_1.types._InputMessage], "Vector<InputMessage>"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of messages to get */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.id = params.id;
    }
}
exports.channels_getMessages_ = channels_getMessages_;
Object.defineProperty(channels_getMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the participants of a [supergroup/channel](https://core.telegram.org/api/channel) */
class channels_getParticipants_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x77CED9D0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getParticipants";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["filter", _2_types_js_1.types._ChannelParticipantsFilter, "ChannelParticipantsFilter"],
            ["offset", "number", "int"],
            ["limit", "number", "int"],
            ["hash", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.filter, _2_types_js_1.types._ChannelParticipantsFilter, "ChannelParticipantsFilter"],
            [this.offset, "number", "int"],
            [this.limit, "number", "int"],
            [this.hash, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Which participant types to fetch */
        Object.defineProperty(this, "filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offset](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Limit](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Hash](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.filter = params.filter;
        this.offset = params.offset;
        this.limit = params.limit;
        this.hash = params.hash;
    }
}
exports.channels_getParticipants_ = channels_getParticipants_;
Object.defineProperty(channels_getParticipants_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about a [channel/supergroup](https://core.telegram.org/api/channel) participant */
class channels_getParticipant_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA0AB6CC6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getParticipant";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["participant", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.participant, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Participant to get info about */
        Object.defineProperty(this, "participant", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.participant = params.participant;
    }
}
exports.channels_getParticipant_ = channels_getParticipant_;
Object.defineProperty(channels_getParticipant_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about [channels/supergroups](https://core.telegram.org/api/channel) */
class channels_getChannels_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0A7F6BBB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getChannels";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputChannel], "Vector<InputChannel>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputChannel], "Vector<InputChannel>"],
        ];
    }
    constructor(params) {
        super();
        /** IDs of channels/supergroups to get info about */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.channels_getChannels_ = channels_getChannels_;
Object.defineProperty(channels_getChannels_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get full info about a [supergroup](https://core.telegram.org/api/channel#supergroups), [gigagroup](https://core.telegram.org/api/channel#gigagroups) or [channel](https://core.telegram.org/api/channel#channels) */
class channels_getFullChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x08736A09;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getFullChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** The [channel](https://core.telegram.org/api/channel#channels), [supergroup](https://core.telegram.org/api/channel#supergroups) or [gigagroup](https://core.telegram.org/api/channel#gigagroups) to get info about */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_getFullChannel_ = channels_getFullChannel_;
Object.defineProperty(channels_getFullChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Create a [supergroup/channel](https://core.telegram.org/api/channel). */
class channels_createChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x91006707;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.createChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["broadcast", "true", "flags.0?true"],
            ["megagroup", "true", "flags.1?true"],
            ["for_import", "true", "flags.3?true"],
            ["forum", "true", "flags.5?true"],
            ["title", "string", "string"],
            ["about", "string", "string"],
            ["geo_point", _2_types_js_1.types._InputGeoPoint, "flags.2?InputGeoPoint"],
            ["address", "string", "flags.2?string"],
            ["ttl_period", "number", "flags.4?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.broadcast ?? null, "true", "flags.0?true"],
            [this.megagroup ?? null, "true", "flags.1?true"],
            [this.for_import ?? null, "true", "flags.3?true"],
            [this.forum ?? null, "true", "flags.5?true"],
            [this.title, "string", "string"],
            [this.about, "string", "string"],
            [this.geo_point ?? null, _2_types_js_1.types._InputGeoPoint, "flags.2?InputGeoPoint"],
            [this.address ?? null, "string", "flags.2?string"],
            [this.ttl_period ?? null, "number", "flags.4?int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to create a [channel](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "broadcast", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to create a [supergroup](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "megagroup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the supergroup is being created to import messages from a foreign chat service using [messages.initHistoryImport](https://core.telegram.org/method/messages.initHistoryImport) */
        Object.defineProperty(this, "for_import", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to create a [forum](https://core.telegram.org/api/forum) */
        Object.defineProperty(this, "forum", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Channel title */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Channel description */
        Object.defineProperty(this, "about", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Geogroup location, see [here »](https://core.telegram.org/api/nearby) for more info on geogroups. */
        Object.defineProperty(this, "geo_point", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Geogroup address, see [here »](https://core.telegram.org/api/nearby) for more info on geogroups. */
        Object.defineProperty(this, "address", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Time-to-live of all messages that will be sent in the supergroup: once message.date+message.ttl\_period === time(), the message will be deleted on the server, and must be deleted locally as well. You can use [messages.setDefaultHistoryTTL](https://core.telegram.org/method/messages.setDefaultHistoryTTL) to edit this value later. */
        Object.defineProperty(this, "ttl_period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.broadcast = params.broadcast;
        this.megagroup = params.megagroup;
        this.for_import = params.for_import;
        this.forum = params.forum;
        this.title = params.title;
        this.about = params.about;
        this.geo_point = params.geo_point;
        this.address = params.address;
        this.ttl_period = params.ttl_period;
    }
}
exports.channels_createChannel_ = channels_createChannel_;
Object.defineProperty(channels_createChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Modify the admin rights of a user in a [supergroup/channel](https://core.telegram.org/api/channel). */
class channels_editAdmin_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD33C8902;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editAdmin";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["admin_rights", _2_types_js_1.types._ChatAdminRights, "ChatAdminRights"],
            ["rank", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.admin_rights, _2_types_js_1.types._ChatAdminRights, "ChatAdminRights"],
            [this.rank, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The [supergroup/channel](https://core.telegram.org/api/channel). */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The ID of the user whose admin rights should be modified */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The admin rights */
        Object.defineProperty(this, "admin_rights", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Indicates the role (rank) of the admin in the group: just an arbitrary string */
        Object.defineProperty(this, "rank", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.user_id = params.user_id;
        this.admin_rights = params.admin_rights;
        this.rank = params.rank;
    }
}
exports.channels_editAdmin_ = channels_editAdmin_;
Object.defineProperty(channels_editAdmin_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit the name of a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_editTitle_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x566DECD0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editTitle";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["title", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.title, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New name */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.title = params.title;
    }
}
exports.channels_editTitle_ = channels_editTitle_;
Object.defineProperty(channels_editTitle_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change the photo of a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_editPhoto_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF12E57C9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editPhoto";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["photo", _2_types_js_1.types._InputChatPhoto, "InputChatPhoto"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.photo, _2_types_js_1.types._InputChatPhoto, "InputChatPhoto"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup whose photo should be edited */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New photo */
        Object.defineProperty(this, "photo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.photo = params.photo;
    }
}
exports.channels_editPhoto_ = channels_editPhoto_;
Object.defineProperty(channels_editPhoto_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check if a username is free and can be assigned to a channel/supergroup */
class channels_checkUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x10E6BD2C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.checkUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["username", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.username, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The [channel/supergroup](https://core.telegram.org/api/channel) that will assigned the specified username */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The username to check */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.username = params.username;
    }
}
exports.channels_checkUsername_ = channels_checkUsername_;
Object.defineProperty(channels_checkUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change or remove the username of a supergroup/channel */
class channels_updateUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3514B3DE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.updateUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["username", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.username, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New username, pass an empty string to remove the username */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.username = params.username;
    }
}
exports.channels_updateUsername_ = channels_updateUsername_;
Object.defineProperty(channels_updateUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Join a channel/supergroup */
class channels_joinChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x24B524C5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.joinChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup to join */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_joinChannel_ = channels_joinChannel_;
Object.defineProperty(channels_joinChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Leave a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_leaveChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF836AA95;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.leaveChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** [Channel/supergroup](https://core.telegram.org/api/channel) to leave */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_leaveChannel_ = channels_leaveChannel_;
Object.defineProperty(channels_leaveChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invite users to a channel/supergroup */
class channels_inviteToChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC9E33D54;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.inviteToChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["users", [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.users, [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Users to invite */
        Object.defineProperty(this, "users", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.users = params.users;
    }
}
exports.channels_inviteToChannel_ = channels_inviteToChannel_;
Object.defineProperty(channels_inviteToChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_deleteChannel_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC0111FE3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.deleteChannel";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** [Channel/supergroup](https://core.telegram.org/api/channel) to delete */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_deleteChannel_ = channels_deleteChannel_;
Object.defineProperty(channels_deleteChannel_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get link and embed info of a message in a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_exportMessageLink_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE63FADEB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.exportMessageLink";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["grouped", "true", "flags.0?true"],
            ["thread", "true", "flags.1?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.grouped ?? null, "true", "flags.0?true"],
            [this.thread ?? null, "true", "flags.1?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to include other grouped media (for albums) */
        Object.defineProperty(this, "grouped", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to also include a thread ID, if available, inside of the link */
        Object.defineProperty(this, "thread", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.grouped = params.grouped;
        this.thread = params.thread;
        this.channel = params.channel;
        this.id = params.id;
    }
}
exports.channels_exportMessageLink_ = channels_exportMessageLink_;
Object.defineProperty(channels_exportMessageLink_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Enable/disable message signatures in channels */
class channels_toggleSignatures_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1F69B606;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleSignatures";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Value */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleSignatures_ = channels_toggleSignatures_;
Object.defineProperty(channels_toggleSignatures_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [channels/supergroups/geogroups](https://core.telegram.org/api/channel) we're admin in. Usually called when the user exceeds the [limit](https://core.telegram.org/constructor/config) for owned public [channels/supergroups/geogroups](https://core.telegram.org/api/channel), and the user is given the choice to remove one of his channels/supergroups/geogroups. */
class channels_getAdminedPublicChannels_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF8B036AF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getAdminedPublicChannels";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["by_location", "true", "flags.0?true"],
            ["check_limit", "true", "flags.1?true"],
            ["for_personal", "true", "flags.2?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.by_location ?? null, "true", "flags.0?true"],
            [this.check_limit ?? null, "true", "flags.1?true"],
            [this.for_personal ?? null, "true", "flags.2?true"],
        ];
    }
    constructor(params) {
        super();
        /** Get geogroups */
        Object.defineProperty(this, "by_location", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set and the user has reached the limit of owned public [channels/supergroups/geogroups](https://core.telegram.org/api/channel), instead of returning the channel list one of the specified [errors](#possible-errors) will be returned.
        Useful to check if a new public channel can indeed be created, even before asking the user to enter a channel username to use in [channels.checkUsername](https://core.telegram.org/method/channels.checkUsername)/[channels.updateUsername](https://core.telegram.org/method/channels.updateUsername). */
        Object.defineProperty(this, "check_limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "for_personal", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.by_location = params?.by_location;
        this.check_limit = params?.check_limit;
        this.for_personal = params?.for_personal;
    }
}
exports.channels_getAdminedPublicChannels_ = channels_getAdminedPublicChannels_;
Object.defineProperty(channels_getAdminedPublicChannels_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Ban/unban/kick a user in a [supergroup/channel](https://core.telegram.org/api/channel). */
class channels_editBanned_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x96E6CD81;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editBanned";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["participant", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["banned_rights", _2_types_js_1.types._ChatBannedRights, "ChatBannedRights"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.participant, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.banned_rights, _2_types_js_1.types._ChatBannedRights, "ChatBannedRights"],
        ];
    }
    constructor(params) {
        super();
        /** The [supergroup/channel](https://core.telegram.org/api/channel). */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Participant to ban */
        Object.defineProperty(this, "participant", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The banned rights */
        Object.defineProperty(this, "banned_rights", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.participant = params.participant;
        this.banned_rights = params.banned_rights;
    }
}
exports.channels_editBanned_ = channels_editBanned_;
Object.defineProperty(channels_editBanned_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the admin log of a [channel/supergroup](https://core.telegram.org/api/channel) */
class channels_getAdminLog_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x33DDF480;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getAdminLog";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["q", "string", "string"],
            ["events_filter", _2_types_js_1.types._ChannelAdminLogEventsFilter, "flags.0?ChannelAdminLogEventsFilter"],
            ["admins", [_2_types_js_1.types._InputUser], "flags.1?Vector<InputUser>"],
            ["max_id", "bigint", "long"],
            ["min_id", "bigint", "long"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.q, "string", "string"],
            [this.events_filter ?? null, _2_types_js_1.types._ChannelAdminLogEventsFilter, "flags.0?ChannelAdminLogEventsFilter"],
            [this.admins ?? null, [_2_types_js_1.types._InputUser], "flags.1?Vector<InputUser>"],
            [this.max_id, "bigint", "long"],
            [this.min_id, "bigint", "long"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search query, can be empty */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Event filter */
        Object.defineProperty(this, "events_filter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only show events from these admins */
        Object.defineProperty(this, "admins", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum ID of message to return (see [pagination](https://core.telegram.org/api/offsets)) */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Minimum ID of message to return (see [pagination](https://core.telegram.org/api/offsets)) */
        Object.defineProperty(this, "min_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.q = params.q;
        this.events_filter = params.events_filter;
        this.admins = params.admins;
        this.max_id = params.max_id;
        this.min_id = params.min_id;
        this.limit = params.limit;
    }
}
exports.channels_getAdminLog_ = channels_getAdminLog_;
Object.defineProperty(channels_getAdminLog_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Associate a stickerset to the supergroup */
class channels_setStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEA8CA4F9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.setStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The stickerset to associate */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.stickerset = params.stickerset;
    }
}
exports.channels_setStickers_ = channels_setStickers_;
Object.defineProperty(channels_setStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark [channel/supergroup](https://core.telegram.org/api/channel) message contents as read */
class channels_readMessageContents_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEAB5DC38;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.readMessageContents";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** [Channel/supergroup](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of messages whose contents should be marked as read */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.id = params.id;
    }
}
exports.channels_readMessageContents_ = channels_readMessageContents_;
Object.defineProperty(channels_readMessageContents_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete the history of a [supergroup](https://core.telegram.org/api/channel) */
class channels_deleteHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9BAA9647;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.deleteHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["for_everyone", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["max_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.for_everyone ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.max_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the history should be deleted for everyone */
        Object.defineProperty(this, "for_everyone", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Supergroup](https://core.telegram.org/api/channel) whose history must be deleted */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of message **up to which** the history must be deleted */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.for_everyone = params.for_everyone;
        this.channel = params.channel;
        this.max_id = params.max_id;
    }
}
exports.channels_deleteHistory_ = channels_deleteHistory_;
Object.defineProperty(channels_deleteHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Hide/unhide message history for new channel/supergroup users */
class channels_togglePreHistoryHidden_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEABBB94C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.togglePreHistoryHidden";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Hide/unhide */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_togglePreHistoryHidden_ = channels_togglePreHistoryHidden_;
Object.defineProperty(channels_togglePreHistoryHidden_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a list of [channels/supergroups](https://core.telegram.org/api/channel) we left, requires a [takeout session, see here » for more info](https://core.telegram.org/api/takeout). */
class channels_getLeftChannels_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8341ECC0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getLeftChannels";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["offset", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.offset, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Offset for [pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.offset = params.offset;
    }
}
exports.channels_getLeftChannels_ = channels_getLeftChannels_;
Object.defineProperty(channels_getLeftChannels_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get all groups that can be used as [discussion groups](https://core.telegram.org/api/discussion). */
class channels_getGroupsForDiscussion_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF5DAD378;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getGroupsForDiscussion";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.channels_getGroupsForDiscussion_ = channels_getGroupsForDiscussion_;
Object.defineProperty(channels_getGroupsForDiscussion_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Associate a group to a channel as [discussion group](https://core.telegram.org/api/discussion) for that channel */
class channels_setDiscussionGroup_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x40582BB2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.setDiscussionGroup";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["broadcast", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["group", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.broadcast, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.group, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** Channel */
        Object.defineProperty(this, "broadcast", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Discussion group](https://core.telegram.org/api/discussion) to associate to the channel */
        Object.defineProperty(this, "group", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.broadcast = params.broadcast;
        this.group = params.group;
    }
}
exports.channels_setDiscussionGroup_ = channels_setDiscussionGroup_;
Object.defineProperty(channels_setDiscussionGroup_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Transfer channel ownership */
class channels_editCreator_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8F38CD1F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editCreator";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.password, _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    constructor(params) {
        super();
        /** Channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New channel owner */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [2FA password](https://core.telegram.org/api/srp) of account */
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.user_id = params.user_id;
        this.password = params.password;
    }
}
exports.channels_editCreator_ = channels_editCreator_;
Object.defineProperty(channels_editCreator_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit location of geogroup, see [here »](https://core.telegram.org/api/nearby) for more info on geogroups. */
class channels_editLocation_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x58E63F6D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editLocation";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["geo_point", _2_types_js_1.types._InputGeoPoint, "InputGeoPoint"],
            ["address", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.geo_point, _2_types_js_1.types._InputGeoPoint, "InputGeoPoint"],
            [this.address, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** [Geogroup](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New geolocation */
        Object.defineProperty(this, "geo_point", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Address string */
        Object.defineProperty(this, "address", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.geo_point = params.geo_point;
        this.address = params.address;
    }
}
exports.channels_editLocation_ = channels_editLocation_;
Object.defineProperty(channels_editLocation_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Toggle supergroup slow mode: if enabled, users will only be able to send one message every `seconds` seconds */
class channels_toggleSlowMode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEDD49EF0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleSlowMode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["seconds", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.seconds, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The [supergroup](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Users will only be able to send one message every `seconds` seconds, `0` to disable the limitation */
        Object.defineProperty(this, "seconds", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.seconds = params.seconds;
    }
}
exports.channels_toggleSlowMode_ = channels_toggleSlowMode_;
Object.defineProperty(channels_toggleSlowMode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get inactive channels and supergroups */
class channels_getInactiveChannels_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x11E831EE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getInactiveChannels";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.channels_getInactiveChannels_ = channels_getInactiveChannels_;
Object.defineProperty(channels_getInactiveChannels_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Convert a [supergroup](https://core.telegram.org/api/channel) to a [gigagroup](https://core.telegram.org/api/channel), when requested by [channel suggestions](https://core.telegram.org/api/config#channel-suggestions). */
class channels_convertToGigagroup_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0B290C69;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.convertToGigagroup";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** The [supergroup](https://core.telegram.org/api/channel) to convert */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_convertToGigagroup_ = channels_convertToGigagroup_;
Object.defineProperty(channels_convertToGigagroup_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark a specific sponsored message as read */
class channels_viewSponsoredMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBEAEDB94;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.viewSponsoredMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["random_id", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.random_id, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.random_id = params.random_id;
    }
}
exports.channels_viewSponsoredMessage_ = channels_viewSponsoredMessage_;
Object.defineProperty(channels_viewSponsoredMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a list of sponsored messages */
class channels_getSponsoredMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEC210FBF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getSponsoredMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** Peer */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_getSponsoredMessages_ = channels_getSponsoredMessages_;
Object.defineProperty(channels_getSponsoredMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtains a list of peers that can be used to send messages in a specific group */
class channels_getSendAs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0DC770EE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getSendAs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The group where we intend to send messages */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.channels_getSendAs_ = channels_getSendAs_;
Object.defineProperty(channels_getSendAs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete all messages sent by a specific participant of a given supergroup */
class channels_deleteParticipantHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x367544DB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.deleteParticipantHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["participant", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.participant, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The participant whose messages should be deleted */
        Object.defineProperty(this, "participant", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.participant = params.participant;
    }
}
exports.channels_deleteParticipantHistory_ = channels_deleteParticipantHistory_;
Object.defineProperty(channels_deleteParticipantHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set whether all users [should join a discussion group in order to comment on a post »](https://core.telegram.org/api/discussion#requiring-users-to-join-the-group) */
class channels_toggleJoinToSend_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE4CB9580;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleJoinToSend";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Discussion group */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Toggle */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleJoinToSend_ = channels_toggleJoinToSend_;
Object.defineProperty(channels_toggleJoinToSend_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set whether all users should [request admin approval to join the group »](https://core.telegram.org/api/invites#join-requests). */
class channels_toggleJoinRequest_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4C2985B6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleJoinRequest";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Group */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Toggle */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleJoinRequest_ = channels_toggleJoinRequest_;
Object.defineProperty(channels_toggleJoinRequest_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder active usernames */
class channels_reorderUsernames_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB45CED1D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.reorderUsernames";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["order", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.order, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** The supergroup or channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new order for active usernames. All active usernames must be specified. */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.order = params.order;
    }
}
exports.channels_reorderUsernames_ = channels_reorderUsernames_;
Object.defineProperty(channels_reorderUsernames_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Activate or deactivate a purchased [fragment.com](https://fragment.com) username associated to a [supergroup or channel](https://core.telegram.org/api/channel) we own. */
class channels_toggleUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x50F24105;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["username", "string", "string"],
            ["active", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.username, "string", "string"],
            [this.active, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** [Supergroup or channel](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Username */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to activate or deactivate the username */
        Object.defineProperty(this, "active", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.username = params.username;
        this.active = params.active;
    }
}
exports.channels_toggleUsername_ = channels_toggleUsername_;
Object.defineProperty(channels_toggleUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Disable all purchased usernames of a supergroup or channel */
class channels_deactivateAllUsernames_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0A245DD3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.deactivateAllUsernames";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup or channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_deactivateAllUsernames_ = channels_deactivateAllUsernames_;
Object.defineProperty(channels_deactivateAllUsernames_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Enable or disable [forum functionality](https://core.telegram.org/api/forum) in a supergroup. */
class channels_toggleForum_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA4298B29;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleForum";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup ID */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Enable or disable forum functionality */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleForum_ = channels_toggleForum_;
Object.defineProperty(channels_toggleForum_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Create a [forum topic](https://core.telegram.org/api/forum); requires [`manage_topics` rights](https://core.telegram.org/api/rights). */
class channels_createForumTopic_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF40C0224;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.createForumTopic";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["title", "string", "string"],
            ["icon_color", "number", "flags.0?int"],
            ["icon_emoji_id", "bigint", "flags.3?long"],
            ["random_id", "bigint", "long"],
            ["send_as", _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.title, "string", "string"],
            [this.icon_color ?? null, "number", "flags.0?int"],
            [this.icon_emoji_id ?? null, "bigint", "flags.3?long"],
            [this.random_id, "bigint", "long"],
            [this.send_as ?? null, _2_types_js_1.types._InputPeer, "flags.2?InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** [The forum](https://core.telegram.org/api/forum) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Topic title (maximum UTF-8 length: 128) */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If no custom emoji icon is specified, specifies the color of the fallback topic icon (RGB), one of `0x6FB9F0`, `0xFFD67E`, `0xCB86DB`, `0x8EEE98`, `0xFF93B2`, or `0xFB6F5F`. */
        Object.defineProperty(this, "icon_color", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the [custom emoji](https://core.telegram.org/api/custom-emoji) used as topic icon. [Telegram Premium](https://core.telegram.org/api/premium) users can use any custom emoji, other users can only use the custom emojis contained in the [inputStickerSetEmojiDefaultTopicIcons](https://core.telegram.org/constructor/inputStickerSetEmojiDefaultTopicIcons) emoji pack. */
        Object.defineProperty(this, "icon_emoji_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID to prevent duplicate sending of the same event */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Create the topic as the specified peer */
        Object.defineProperty(this, "send_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.title = params.title;
        this.icon_color = params.icon_color;
        this.icon_emoji_id = params.icon_emoji_id;
        this.random_id = params.random_id;
        this.send_as = params.send_as;
    }
}
exports.channels_createForumTopic_ = channels_createForumTopic_;
Object.defineProperty(channels_createForumTopic_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [topics of a forum](https://core.telegram.org/api/forum) */
class channels_getForumTopics_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0DE560D1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getForumTopics";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["q", "string", "flags.0?string"],
            ["offset_date", "number", "int"],
            ["offset_id", "number", "int"],
            ["offset_topic", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.q ?? null, "string", "flags.0?string"],
            [this.offset_date, "number", "int"],
            [this.offset_id, "number", "int"],
            [this.offset_topic, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search query */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets), date of the last message of the last found topic. Use 0 or any date in the future to get results from the last topic. */
        Object.defineProperty(this, "offset_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets), ID of the last message of the last found topic (or initially `0`). */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets), ID of the last found topic (or initially `0`). */
        Object.defineProperty(this, "offset_topic", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets). For optimal performance, the number of returned topics is chosen by the server and can be smaller than the specified limit. */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.q = params.q;
        this.offset_date = params.offset_date;
        this.offset_id = params.offset_id;
        this.offset_topic = params.offset_topic;
        this.limit = params.limit;
    }
}
exports.channels_getForumTopics_ = channels_getForumTopics_;
Object.defineProperty(channels_getForumTopics_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get forum topics by their ID */
class channels_getForumTopicsByID_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB0831EB9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getForumTopicsByID";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["topics", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.topics, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Forum */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Topic IDs */
        Object.defineProperty(this, "topics", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.topics = params.topics;
    }
}
exports.channels_getForumTopicsByID_ = channels_getForumTopicsByID_;
Object.defineProperty(channels_getForumTopicsByID_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit [forum topic](https://core.telegram.org/api/forum); requires [`manage_topics` rights](https://core.telegram.org/api/rights). */
class channels_editForumTopic_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF4DFA185;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.editForumTopic";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["topic_id", "number", "int"],
            ["title", "string", "flags.0?string"],
            ["icon_emoji_id", "bigint", "flags.1?long"],
            ["closed", "boolean", "flags.2?Bool"],
            ["hidden", "boolean", "flags.3?Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.topic_id, "number", "int"],
            [this.title ?? null, "string", "flags.0?string"],
            [this.icon_emoji_id ?? null, "bigint", "flags.1?long"],
            [this.closed ?? null, "boolean", "flags.2?Bool"],
            [this.hidden ?? null, "boolean", "flags.3?Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Topic ID */
        Object.defineProperty(this, "topic_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If present, will update the topic title (maximum UTF-8 length: 128). */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If present, updates the [custom emoji](https://core.telegram.org/api/custom-emoji) used as topic icon. [Telegram Premium](https://core.telegram.org/api/premium) users can use any custom emoji, other users can only use the custom emojis contained in the [inputStickerSetEmojiDefaultTopicIcons](https://core.telegram.org/constructor/inputStickerSetEmojiDefaultTopicIcons) emoji pack. Pass 0 to switch to the fallback topic icon. */
        Object.defineProperty(this, "icon_emoji_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If present, will update the open/closed status of the topic. */
        Object.defineProperty(this, "closed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If present, will hide/unhide the topic (only valid for the "General" topic, `id=1`). */
        Object.defineProperty(this, "hidden", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.topic_id = params.topic_id;
        this.title = params.title;
        this.icon_emoji_id = params.icon_emoji_id;
        this.closed = params.closed;
        this.hidden = params.hidden;
    }
}
exports.channels_editForumTopic_ = channels_editForumTopic_;
Object.defineProperty(channels_editForumTopic_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Pin or unpin [forum topics](https://core.telegram.org/api/forum) */
class channels_updatePinnedForumTopic_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6C2D9026;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.updatePinnedForumTopic";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["topic_id", "number", "int"],
            ["pinned", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.topic_id, "number", "int"],
            [this.pinned, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup ID */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Forum topic ID](https://core.telegram.org/api/forum) */
        Object.defineProperty(this, "topic_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to pin or unpin the topic */
        Object.defineProperty(this, "pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.topic_id = params.topic_id;
        this.pinned = params.pinned;
    }
}
exports.channels_updatePinnedForumTopic_ = channels_updatePinnedForumTopic_;
Object.defineProperty(channels_updatePinnedForumTopic_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete message history of a [forum topic](https://core.telegram.org/api/forum) */
class channels_deleteTopicHistory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x34435F2D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.deleteTopicHistory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["top_msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.top_msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Forum */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Topic ID */
        Object.defineProperty(this, "top_msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.top_msg_id = params.top_msg_id;
    }
}
exports.channels_deleteTopicHistory_ = channels_deleteTopicHistory_;
Object.defineProperty(channels_deleteTopicHistory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder pinned forum topics */
class channels_reorderPinnedForumTopics_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2950A18F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.reorderPinnedForumTopics";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["force", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["order", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.force ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.order, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** If not set, the order of only the topics present both server-side and in `order` will be changed (i.e. mentioning topics not pinned server-side in `order` will not pin them, and not mentioning topics pinned server-side will not unpin them).
        If set, the entire server-side pinned topic list will be replaced with `order` (i.e. mentioning topics not pinned server-side in `order` will pin them, and not mentioning topics pinned server-side will unpin them) */
        Object.defineProperty(this, "force", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Supergroup ID */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Topic IDs »](https://core.telegram.org/api/forum) */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.force = params.force;
        this.channel = params.channel;
        this.order = params.order;
    }
}
exports.channels_reorderPinnedForumTopics_ = channels_reorderPinnedForumTopics_;
Object.defineProperty(channels_reorderPinnedForumTopics_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Enable or disable the [native antispam system](https://core.telegram.org/api/antispam). */
class channels_toggleAntiSpam_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x68F3E4EB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleAntiSpam";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup ID. The specified supergroup must have at least `telegram_antispam_group_size_min` members to enable antispam functionality, as specified by the [client configuration parameters](https://core.telegram.org/api/config#client-configuration). */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Enable or disable the native antispam system. */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleAntiSpam_ = channels_toggleAntiSpam_;
Object.defineProperty(channels_toggleAntiSpam_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a [native antispam](https://core.telegram.org/api/antispam) false positive */
class channels_reportAntiSpamFalsePositive_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA850A693;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.reportAntiSpamFalsePositive";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup ID */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID that was mistakenly deleted by the [native antispam](https://core.telegram.org/api/antispam) system, taken from the [admin log](https://core.telegram.org/api/recent-actions) */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.msg_id = params.msg_id;
    }
}
exports.channels_reportAntiSpamFalsePositive_ = channels_reportAntiSpamFalsePositive_;
Object.defineProperty(channels_reportAntiSpamFalsePositive_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Hide or display the participants list in a [supergroup](https://core.telegram.org/api/channel). */
class channels_toggleParticipantsHidden_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6A6E7854;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleParticipantsHidden";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Supergroup ID */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If true, will hide the participants list; otherwise will unhide it. */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleParticipantsHidden_ = channels_toggleParticipantsHidden_;
Object.defineProperty(channels_toggleParticipantsHidden_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Informs the server that the user has either: */
class channels_clickSponsoredMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x18AFBC93;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.clickSponsoredMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["random_id", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.random_id, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Channel where the sponsored message was posted */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.random_id = params.random_id;
    }
}
exports.channels_clickSponsoredMessage_ = channels_clickSponsoredMessage_;
Object.defineProperty(channels_clickSponsoredMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Update the [accent color and background custom emoji »](https://core.telegram.org/api/colors) of a channel. */
class channels_updateColor_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD8AA3671;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.updateColor";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["for_profile", "true", "flags.1?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["color", "number", "flags.2?int"],
            ["background_emoji_id", "bigint", "flags.0?long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.for_profile ?? null, "true", "flags.1?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.color ?? null, "number", "flags.2?int"],
            [this.background_emoji_id ?? null, "bigint", "flags.0?long"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to change the accent color emoji pattern of the profile page; otherwise, the accent color and emoji pattern of messages will be changed. */
        Object.defineProperty(this, "for_profile", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Channel whose accent color should be changed. */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [ID of the accent color palette »](https://core.telegram.org/api/colors) to use (not RGB24, see [here »](https://core.telegram.org/api/colors) for more info); if not set, the default palette is used. */
        Object.defineProperty(this, "color", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Custom emoji ID used in the accent color pattern. */
        Object.defineProperty(this, "background_emoji_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.for_profile = params.for_profile;
        this.channel = params.channel;
        this.color = params.color;
        this.background_emoji_id = params.background_emoji_id;
    }
}
exports.channels_updateColor_ = channels_updateColor_;
Object.defineProperty(channels_updateColor_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Users may also choose to display messages from all topics of a [forum](https://core.telegram.org/api/forum) as if they were sent to a normal group, using a "View as messages" setting in the local client: this setting only affects the current account, and is synced to other logged in sessions using this method. */
class channels_toggleViewForumAsMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9738BB15;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.toggleViewForumAsMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["enabled", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.enabled, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** The forum */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new value of the `view_forum_as_messages` flag. */
        Object.defineProperty(this, "enabled", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.enabled = params.enabled;
    }
}
exports.channels_toggleViewForumAsMessages_ = channels_toggleViewForumAsMessages_;
Object.defineProperty(channels_toggleViewForumAsMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain a list of similarly themed public channels, selected based on similarities in their **subscriber bases**. */
class channels_getChannelRecommendations_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x83B70D97;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.getChannelRecommendations";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** The method will return channels related to the passed `channel`. */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
    }
}
exports.channels_getChannelRecommendations_ = channels_getChannelRecommendations_;
Object.defineProperty(channels_getChannelRecommendations_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set an [emoji status](https://core.telegram.org/api/emoji-status) for a channel. */
class channels_updateEmojiStatus_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF0D3E6A8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.updateEmojiStatus";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["emoji_status", _2_types_js_1.types._EmojiStatus, "EmojiStatus"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.emoji_status, _2_types_js_1.types._EmojiStatus, "EmojiStatus"],
        ];
    }
    constructor(params) {
        super();
        /** The channel, must have at least [`channel_emoji_status_level_min` boosts](https://core.telegram.org/api/config#channel-emoji-status-level-min). */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Emoji status](https://core.telegram.org/api/emoji-status) to set */
        Object.defineProperty(this, "emoji_status", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.emoji_status = params.emoji_status;
    }
}
exports.channels_updateEmojiStatus_ = channels_updateEmojiStatus_;
Object.defineProperty(channels_updateEmojiStatus_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class channels_setBoostsToUnblockRestrictions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAD399CEE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.setBoostsToUnblockRestrictions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["boosts", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.boosts, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "boosts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.boosts = params.boosts;
    }
}
exports.channels_setBoostsToUnblockRestrictions_ = channels_setBoostsToUnblockRestrictions_;
Object.defineProperty(channels_setBoostsToUnblockRestrictions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class channels_setEmojiStickers_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3CD930B7;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.setEmojiStickers";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.stickerset = params.stickerset;
    }
}
exports.channels_setEmojiStickers_ = channels_setEmojiStickers_;
Object.defineProperty(channels_setEmojiStickers_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class channels_reportSponsoredMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAF8FF6B9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.reportSponsoredMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["random_id", Uint8Array, "bytes"],
            ["option", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.random_id, Uint8Array, "bytes"],
            [this.option, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "option", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.random_id = params.random_id;
        this.option = params.option;
    }
}
exports.channels_reportSponsoredMessage_ = channels_reportSponsoredMessage_;
Object.defineProperty(channels_reportSponsoredMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class channels_restrictSponsoredMessages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9AE91519;
    }
    static get [_1_tl_object_js_1.name]() {
        return "channels.restrictSponsoredMessages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["restricted", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.restricted, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "restricted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.restricted = params.restricted;
    }
}
exports.channels_restrictSponsoredMessages_ = channels_restrictSponsoredMessages_;
Object.defineProperty(channels_restrictSponsoredMessages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sends a custom request; for bots only */
class bots_sendCustomRequest_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAA2769ED;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.sendCustomRequest";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["custom_method", "string", "string"],
            ["params", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.custom_method, "string", "string"],
            [this.params, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** The method name */
        Object.defineProperty(this, "custom_method", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** JSON-serialized method parameters */
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.custom_method = params.custom_method;
        this.params = params.params;
    }
}
exports.bots_sendCustomRequest_ = bots_sendCustomRequest_;
Object.defineProperty(bots_sendCustomRequest_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Answers a custom query; for bots only */
class bots_answerWebhookJSONQuery_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE6213F4D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.answerWebhookJSONQuery";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["query_id", "bigint", "long"],
            ["data", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.query_id, "bigint", "long"],
            [this.data, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** Identifier of a custom query */
        Object.defineProperty(this, "query_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** JSON-serialized answer to the query */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.query_id = params.query_id;
        this.data = params.data;
    }
}
exports.bots_answerWebhookJSONQuery_ = bots_answerWebhookJSONQuery_;
Object.defineProperty(bots_answerWebhookJSONQuery_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set bot command list */
class bots_setBotCommands_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0517165A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.setBotCommands";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["scope", _2_types_js_1.types._BotCommandScope, "BotCommandScope"],
            ["lang_code", "string", "string"],
            ["commands", [_2_types_js_1.types._BotCommand], "Vector<BotCommand>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.scope, _2_types_js_1.types._BotCommandScope, "BotCommandScope"],
            [this.lang_code, "string", "string"],
            [this.commands, [_2_types_js_1.types._BotCommand], "Vector<BotCommand>"],
        ];
    }
    constructor(params) {
        super();
        /** Command scope */
        Object.defineProperty(this, "scope", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot commands */
        Object.defineProperty(this, "commands", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.scope = params.scope;
        this.lang_code = params.lang_code;
        this.commands = params.commands;
    }
}
exports.bots_setBotCommands_ = bots_setBotCommands_;
Object.defineProperty(bots_setBotCommands_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clear bot commands for the specified bot scope and language code */
class bots_resetBotCommands_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3D8DE0F9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.resetBotCommands";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["scope", _2_types_js_1.types._BotCommandScope, "BotCommandScope"],
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.scope, _2_types_js_1.types._BotCommandScope, "BotCommandScope"],
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Command scope */
        Object.defineProperty(this, "scope", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.scope = params.scope;
        this.lang_code = params.lang_code;
    }
}
exports.bots_resetBotCommands_ = bots_resetBotCommands_;
Object.defineProperty(bots_resetBotCommands_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain a list of bot commands for the specified bot scope and language code */
class bots_getBotCommands_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE34C0DD6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.getBotCommands";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["scope", _2_types_js_1.types._BotCommandScope, "BotCommandScope"],
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.scope, _2_types_js_1.types._BotCommandScope, "BotCommandScope"],
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Command scope */
        Object.defineProperty(this, "scope", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.scope = params.scope;
        this.lang_code = params.lang_code;
    }
}
exports.bots_getBotCommands_ = bots_getBotCommands_;
Object.defineProperty(bots_getBotCommands_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Sets the [menu button action »](https://core.telegram.org/api/bots/menu) for a given user or for all users */
class bots_setBotMenuButton_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4504D54F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.setBotMenuButton";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["button", _2_types_js_1.types._BotMenuButton, "BotMenuButton"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.button, _2_types_js_1.types._BotMenuButton, "BotMenuButton"],
        ];
    }
    constructor(params) {
        super();
        /** User ID */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Bot menu button action */
        Object.defineProperty(this, "button", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
        this.button = params.button;
    }
}
exports.bots_setBotMenuButton_ = bots_setBotMenuButton_;
Object.defineProperty(bots_setBotMenuButton_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Gets the menu button action for a given user or for all users, previously set using [bots.setBotMenuButton](https://core.telegram.org/method/bots.setBotMenuButton); users can see this information in the [botInfo](https://core.telegram.org/constructor/botInfo) constructor. */
class bots_getBotMenuButton_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9C60EB28;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.getBotMenuButton";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** User ID or empty for the default menu button. */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_id = params.user_id;
    }
}
exports.bots_getBotMenuButton_ = bots_getBotMenuButton_;
Object.defineProperty(bots_getBotMenuButton_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set the default [suggested admin rights](https://core.telegram.org/api/rights#suggested-bot-rights) for bots being added as admins to channels, see [here for more info on how to handle them »](https://core.telegram.org/api/rights#suggested-bot-rights). */
class bots_setBotBroadcastDefaultAdminRights_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x788464E1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.setBotBroadcastDefaultAdminRights";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["admin_rights", _2_types_js_1.types._ChatAdminRights, "ChatAdminRights"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.admin_rights, _2_types_js_1.types._ChatAdminRights, "ChatAdminRights"],
        ];
    }
    constructor(params) {
        super();
        /** Admin rights */
        Object.defineProperty(this, "admin_rights", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.admin_rights = params.admin_rights;
    }
}
exports.bots_setBotBroadcastDefaultAdminRights_ = bots_setBotBroadcastDefaultAdminRights_;
Object.defineProperty(bots_setBotBroadcastDefaultAdminRights_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set the default [suggested admin rights](https://core.telegram.org/api/rights#suggested-bot-rights) for bots being added as admins to groups, see [here for more info on how to handle them »](https://core.telegram.org/api/rights#suggested-bot-rights). */
class bots_setBotGroupDefaultAdminRights_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x925EC9EA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.setBotGroupDefaultAdminRights";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["admin_rights", _2_types_js_1.types._ChatAdminRights, "ChatAdminRights"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.admin_rights, _2_types_js_1.types._ChatAdminRights, "ChatAdminRights"],
        ];
    }
    constructor(params) {
        super();
        /** Admin rights */
        Object.defineProperty(this, "admin_rights", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.admin_rights = params.admin_rights;
    }
}
exports.bots_setBotGroupDefaultAdminRights_ = bots_setBotGroupDefaultAdminRights_;
Object.defineProperty(bots_setBotGroupDefaultAdminRights_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set localized name, about text and description of a bot (or of the current account, if called by a bot). */
class bots_setBotInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x10CF3123;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.setBotInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["bot", _2_types_js_1.types._InputUser, "flags.2?InputUser"],
            ["lang_code", "string", "string"],
            ["name", "string", "flags.3?string"],
            ["about", "string", "flags.0?string"],
            ["description", "string", "flags.1?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.bot ?? null, _2_types_js_1.types._InputUser, "flags.2?InputUser"],
            [this.lang_code, "string", "string"],
            [this.name ?? null, "string", "flags.3?string"],
            [this.about ?? null, "string", "flags.0?string"],
            [this.description ?? null, "string", "flags.1?string"],
        ];
    }
    constructor(params) {
        super();
        /** If called by a user, **must** contain the peer of a bot we own. */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code, if left empty update the fallback about text and description */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New bot name */
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New about text */
        Object.defineProperty(this, "about", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New description */
        Object.defineProperty(this, "description", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.lang_code = params.lang_code;
        this.name = params.name;
        this.about = params.about;
        this.description = params.description;
    }
}
exports.bots_setBotInfo_ = bots_setBotInfo_;
Object.defineProperty(bots_setBotInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get localized name, about text and description of a bot (or of the current account, if called by a bot). */
class bots_getBotInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDCD914FD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.getBotInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["bot", _2_types_js_1.types._InputUser, "flags.0?InputUser"],
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.bot ?? null, _2_types_js_1.types._InputUser, "flags.0?InputUser"],
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** If called by a user, **must** contain the peer of a bot we own. */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code, if left empty this method will return the fallback about text and description. */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.lang_code = params.lang_code;
    }
}
exports.bots_getBotInfo_ = bots_getBotInfo_;
Object.defineProperty(bots_getBotInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Reorder usernames associated to a bot we own. */
class bots_reorderUsernames_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9709B1C2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.reorderUsernames";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["order", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.order, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** The bot */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new order for active usernames. All active usernames must be specified. */
        Object.defineProperty(this, "order", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.order = params.order;
    }
}
exports.bots_reorderUsernames_ = bots_reorderUsernames_;
Object.defineProperty(bots_reorderUsernames_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Activate or deactivate a purchased [fragment.com](https://fragment.com) username associated to a bot we own. */
class bots_toggleUsername_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x053CA973;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.toggleUsername";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["username", "string", "string"],
            ["active", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.username, "string", "string"],
            [this.active, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** The bot */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Username */
        Object.defineProperty(this, "username", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to activate or deactivate it */
        Object.defineProperty(this, "active", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.username = params.username;
        this.active = params.active;
    }
}
exports.bots_toggleUsername_ = bots_toggleUsername_;
Object.defineProperty(bots_toggleUsername_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check whether the specified bot can send us messages */
class bots_canSendMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1359F4E6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.canSendMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** The bot */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
    }
}
exports.bots_canSendMessage_ = bots_canSendMessage_;
Object.defineProperty(bots_canSendMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Allow the specified bot to send us messages */
class bots_allowSendMessage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF132E3EF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.allowSendMessage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** The bot */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
    }
}
exports.bots_allowSendMessage_ = bots_allowSendMessage_;
Object.defineProperty(bots_allowSendMessage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send a custom request from a [mini bot app](https://core.telegram.org/api/bots/webapps), triggered by a [web\_app\_invoke\_custom\_method event »](https://core.telegram.org/api/web-events#web-app-invoke-custom-method). */
class bots_invokeWebViewCustomMethod_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x087FC5E7;
    }
    static get [_1_tl_object_js_1.name]() {
        return "bots.invokeWebViewCustomMethod";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["bot", _2_types_js_1.types._InputUser, "InputUser"],
            ["custom_method", "string", "string"],
            ["params", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.bot, _2_types_js_1.types._InputUser, "InputUser"],
            [this.custom_method, "string", "string"],
            [this.params, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** Identifier of the bot associated to the [mini bot app](https://core.telegram.org/api/bots/webapps) */
        Object.defineProperty(this, "bot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Identifier of the custom method to invoke */
        Object.defineProperty(this, "custom_method", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Method parameters */
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.bot = params.bot;
        this.custom_method = params.custom_method;
        this.params = params.params;
    }
}
exports.bots_invokeWebViewCustomMethod_ = bots_invokeWebViewCustomMethod_;
Object.defineProperty(bots_invokeWebViewCustomMethod_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a payment form */
class payments_getPaymentForm_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x37148DBB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.getPaymentForm";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["invoice", _2_types_js_1.types._InputInvoice, "InputInvoice"],
            ["theme_params", _2_types_js_1.types._DataJSON, "flags.0?DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.invoice, _2_types_js_1.types._InputInvoice, "InputInvoice"],
            [this.theme_params ?? null, _2_types_js_1.types._DataJSON, "flags.0?DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** Invoice */
        Object.defineProperty(this, "invoice", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** A JSON object with the following keys, containing color theme information (integers, RGB24) to pass to the payment provider, to apply in eventual verification pages:
        `bg_color` - Background color
        `text_color` - Text color
        `hint_color` - Hint text color
        `link_color` - Link color
        `button_color` - Button color
        `button_text_color` - Button text color */
        Object.defineProperty(this, "theme_params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.invoice = params.invoice;
        this.theme_params = params.theme_params;
    }
}
exports.payments_getPaymentForm_ = payments_getPaymentForm_;
Object.defineProperty(payments_getPaymentForm_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get payment receipt */
class payments_getPaymentReceipt_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2478D1CC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.getPaymentReceipt";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The peer where the payment receipt was sent */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID of receipt */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.payments_getPaymentReceipt_ = payments_getPaymentReceipt_;
Object.defineProperty(payments_getPaymentReceipt_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Submit requested order information for validation */
class payments_validateRequestedInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB6C8F12B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.validateRequestedInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["save", "true", "flags.0?true"],
            ["invoice", _2_types_js_1.types._InputInvoice, "InputInvoice"],
            ["info", _2_types_js_1.types._PaymentRequestedInfo, "PaymentRequestedInfo"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.save ?? null, "true", "flags.0?true"],
            [this.invoice, _2_types_js_1.types._InputInvoice, "InputInvoice"],
            [this.info, _2_types_js_1.types._PaymentRequestedInfo, "PaymentRequestedInfo"],
        ];
    }
    constructor(params) {
        super();
        /** Save order information to re-use it for future orders */
        Object.defineProperty(this, "save", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Invoice */
        Object.defineProperty(this, "invoice", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Requested order information */
        Object.defineProperty(this, "info", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.save = params.save;
        this.invoice = params.invoice;
        this.info = params.info;
    }
}
exports.payments_validateRequestedInfo_ = payments_validateRequestedInfo_;
Object.defineProperty(payments_validateRequestedInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send compiled payment form */
class payments_sendPaymentForm_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2D03522F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.sendPaymentForm";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["form_id", "bigint", "long"],
            ["invoice", _2_types_js_1.types._InputInvoice, "InputInvoice"],
            ["requested_info_id", "string", "flags.0?string"],
            ["shipping_option_id", "string", "flags.1?string"],
            ["credentials", _2_types_js_1.types._InputPaymentCredentials, "InputPaymentCredentials"],
            ["tip_amount", "bigint", "flags.2?long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.form_id, "bigint", "long"],
            [this.invoice, _2_types_js_1.types._InputInvoice, "InputInvoice"],
            [this.requested_info_id ?? null, "string", "flags.0?string"],
            [this.shipping_option_id ?? null, "string", "flags.1?string"],
            [this.credentials, _2_types_js_1.types._InputPaymentCredentials, "InputPaymentCredentials"],
            [this.tip_amount ?? null, "bigint", "flags.2?long"],
        ];
    }
    constructor(params) {
        super();
        /** Form ID */
        Object.defineProperty(this, "form_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Invoice */
        Object.defineProperty(this, "invoice", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of saved and validated [order info](https://core.telegram.org/constructor/payments.validatedRequestedInfo) */
        Object.defineProperty(this, "requested_info_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Chosen shipping option ID */
        Object.defineProperty(this, "shipping_option_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Payment credentials */
        Object.defineProperty(this, "credentials", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Tip, in the smallest units of the currency (integer, not float/double). For example, for a price of `US$ 1.45` pass `amount = 145`. See the exp parameter in [currencies.json](https://core.telegram.org/bots/payments/currencies.json), it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). */
        Object.defineProperty(this, "tip_amount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.form_id = params.form_id;
        this.invoice = params.invoice;
        this.requested_info_id = params.requested_info_id;
        this.shipping_option_id = params.shipping_option_id;
        this.credentials = params.credentials;
        this.tip_amount = params.tip_amount;
    }
}
exports.payments_sendPaymentForm_ = payments_sendPaymentForm_;
Object.defineProperty(payments_sendPaymentForm_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get saved payment information */
class payments_getSavedInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x227D824B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.getSavedInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.payments_getSavedInfo_ = payments_getSavedInfo_;
Object.defineProperty(payments_getSavedInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Clear saved payment information */
class payments_clearSavedInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xD83D70C1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.clearSavedInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["credentials", "true", "flags.0?true"],
            ["info", "true", "flags.1?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.credentials ?? null, "true", "flags.0?true"],
            [this.info ?? null, "true", "flags.1?true"],
        ];
    }
    constructor(params) {
        super();
        /** Remove saved payment credentials */
        Object.defineProperty(this, "credentials", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Clear the last order settings saved by the user */
        Object.defineProperty(this, "info", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.credentials = params?.credentials;
        this.info = params?.info;
    }
}
exports.payments_clearSavedInfo_ = payments_clearSavedInfo_;
Object.defineProperty(payments_clearSavedInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about a credit card */
class payments_getBankCardData_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2E79D779;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.getBankCardData";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["number", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.number, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Credit card number */
        Object.defineProperty(this, "number", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.number = params.number;
    }
}
exports.payments_getBankCardData_ = payments_getBankCardData_;
Object.defineProperty(payments_getBankCardData_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Generate an [invoice deep link](https://core.telegram.org/api/links#invoice-links) */
class payments_exportInvoice_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0F91B065;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.exportInvoice";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["invoice_media", _2_types_js_1.types._InputMedia, "InputMedia"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.invoice_media, _2_types_js_1.types._InputMedia, "InputMedia"],
        ];
    }
    constructor(params) {
        super();
        /** Invoice */
        Object.defineProperty(this, "invoice_media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.invoice_media = params.invoice_media;
    }
}
exports.payments_exportInvoice_ = payments_exportInvoice_;
Object.defineProperty(payments_exportInvoice_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Informs server about a purchase made through the App Store: for official applications only. */
class payments_assignAppStoreTransaction_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x80ED747D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.assignAppStoreTransaction";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["receipt", Uint8Array, "bytes"],
            ["purpose", _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.receipt, Uint8Array, "bytes"],
            [this.purpose, _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    constructor(params) {
        super();
        /** Receipt */
        Object.defineProperty(this, "receipt", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Payment purpose */
        Object.defineProperty(this, "purpose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.receipt = params.receipt;
        this.purpose = params.purpose;
    }
}
exports.payments_assignAppStoreTransaction_ = payments_assignAppStoreTransaction_;
Object.defineProperty(payments_assignAppStoreTransaction_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Informs server about a purchase made through the Play Store: for official applications only. */
class payments_assignPlayMarketTransaction_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDFFD50D3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.assignPlayMarketTransaction";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["receipt", _2_types_js_1.types._DataJSON, "DataJSON"],
            ["purpose", _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.receipt, _2_types_js_1.types._DataJSON, "DataJSON"],
            [this.purpose, _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    constructor(params) {
        super();
        /** Receipt */
        Object.defineProperty(this, "receipt", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Payment purpose */
        Object.defineProperty(this, "purpose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.receipt = params.receipt;
        this.purpose = params.purpose;
    }
}
exports.payments_assignPlayMarketTransaction_ = payments_assignPlayMarketTransaction_;
Object.defineProperty(payments_assignPlayMarketTransaction_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Checks whether Telegram Premium purchase is possible. Must be called before in-store Premium purchase, official apps only. */
class payments_canPurchasePremium_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9FC19EB6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.canPurchasePremium";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["purpose", _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.purpose, _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    constructor(params) {
        super();
        /** Payment purpose */
        Object.defineProperty(this, "purpose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.purpose = params.purpose;
    }
}
exports.payments_canPurchasePremium_ = payments_canPurchasePremium_;
Object.defineProperty(payments_canPurchasePremium_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain a list of Telegram Premium [giveaway/gift code »](https://core.telegram.org/api/giveaways) options. */
class payments_getPremiumGiftCodeOptions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2757BA54;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.getPremiumGiftCodeOptions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["boost_peer", _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.boost_peer ?? null, _2_types_js_1.types._InputPeer, "flags.0?InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The channel that will start the giveaway */
        Object.defineProperty(this, "boost_peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.boost_peer = params?.boost_peer;
    }
}
exports.payments_getPremiumGiftCodeOptions_ = payments_getPremiumGiftCodeOptions_;
Object.defineProperty(payments_getPremiumGiftCodeOptions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain information about a [Telegram Premium giftcode »](https://core.telegram.org/api/giveaways) */
class payments_checkGiftCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8E51B4C1;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.checkGiftCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The giftcode to check */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
    }
}
exports.payments_checkGiftCode_ = payments_checkGiftCode_;
Object.defineProperty(payments_checkGiftCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Apply a [Telegram Premium giftcode »](https://core.telegram.org/api/giveaways) */
class payments_applyGiftCode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF6E26854;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.applyGiftCode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The code to apply */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
    }
}
exports.payments_applyGiftCode_ = payments_applyGiftCode_;
Object.defineProperty(payments_applyGiftCode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain information about a [Telegram Premium giveaway »](https://core.telegram.org/api/giveaways). */
class payments_getGiveawayInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF4239425;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.getGiveawayInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The peer where the giveaway was posted. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID of the [messageActionGiveawayLaunch](https://core.telegram.org/constructor/messageActionGiveawayLaunch) service message */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.msg_id = params.msg_id;
    }
}
exports.payments_getGiveawayInfo_ = payments_getGiveawayInfo_;
Object.defineProperty(payments_getGiveawayInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Launch a [prepaid giveaway »](https://core.telegram.org/api/giveaways). */
class payments_launchPrepaidGiveaway_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5FF58F20;
    }
    static get [_1_tl_object_js_1.name]() {
        return "payments.launchPrepaidGiveaway";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["giveaway_id", "bigint", "long"],
            ["purpose", _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.giveaway_id, "bigint", "long"],
            [this.purpose, _2_types_js_1.types._InputStorePaymentPurpose, "InputStorePaymentPurpose"],
        ];
    }
    constructor(params) {
        super();
        /** The peer where to launch the giveaway. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The prepaid giveaway ID. */
        Object.defineProperty(this, "giveaway_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Giveway parameters */
        Object.defineProperty(this, "purpose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.giveaway_id = params.giveaway_id;
        this.purpose = params.purpose;
    }
}
exports.payments_launchPrepaidGiveaway_ = payments_launchPrepaidGiveaway_;
Object.defineProperty(payments_launchPrepaidGiveaway_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Create a stickerset, bots only. */
class stickers_createStickerSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9021AB67;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.createStickerSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["masks", "true", "flags.0?true"],
            ["emojis", "true", "flags.5?true"],
            ["text_color", "true", "flags.6?true"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["title", "string", "string"],
            ["short_name", "string", "string"],
            ["thumb", _2_types_js_1.types._InputDocument, "flags.2?InputDocument"],
            ["stickers", [_2_types_js_1.types._InputStickerSetItem], "Vector<InputStickerSetItem>"],
            ["software", "string", "flags.3?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.masks ?? null, "true", "flags.0?true"],
            [this.emojis ?? null, "true", "flags.5?true"],
            [this.text_color ?? null, "true", "flags.6?true"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.title, "string", "string"],
            [this.short_name, "string", "string"],
            [this.thumb ?? null, _2_types_js_1.types._InputDocument, "flags.2?InputDocument"],
            [this.stickers, [_2_types_js_1.types._InputStickerSetItem], "Vector<InputStickerSetItem>"],
            [this.software ?? null, "string", "flags.3?string"],
        ];
    }
    constructor(params) {
        super();
        /** Whether this is a mask stickerset */
        Object.defineProperty(this, "masks", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether this is a [custom emoji](https://core.telegram.org/api/custom-emoji) stickerset. */
        Object.defineProperty(this, "emojis", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether the color of TGS custom emojis contained in this set should be changed to the text color when used in messages, the accent color if used as emoji status, white on chat photos, or another appropriate color based on context. For custom emoji stickersets only. */
        Object.defineProperty(this, "text_color", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Stickerset owner */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Stickerset name, `1-64` chars */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Short name of sticker set, to be used in [sticker deep links »](https://core.telegram.org/api/links#stickerset-links). Can contain only english letters, digits and underscores. Must begin with a letter, can't contain consecutive underscores and, **if called by a bot**, must end in `"_by_<bot_username>"`. `<bot_username>` is case insensitive. 1-64 characters. */
        Object.defineProperty(this, "short_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Thumbnail */
        Object.defineProperty(this, "thumb", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Stickers */
        Object.defineProperty(this, "stickers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Used when [importing stickers using the sticker import SDKs](https://core.telegram.org/import-stickers), specifies the name of the software that created the stickers */
        Object.defineProperty(this, "software", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.masks = params.masks;
        this.emojis = params.emojis;
        this.text_color = params.text_color;
        this.user_id = params.user_id;
        this.title = params.title;
        this.short_name = params.short_name;
        this.thumb = params.thumb;
        this.stickers = params.stickers;
        this.software = params.software;
    }
}
exports.stickers_createStickerSet_ = stickers_createStickerSet_;
Object.defineProperty(stickers_createStickerSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Remove a sticker from the set where it belongs, bots only. The sticker set must have been created by the bot. */
class stickers_removeStickerFromSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF7760F51;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.removeStickerFromSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["sticker", _2_types_js_1.types._InputDocument, "InputDocument"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.sticker, _2_types_js_1.types._InputDocument, "InputDocument"],
        ];
    }
    constructor(params) {
        super();
        /** The sticker to remove */
        Object.defineProperty(this, "sticker", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.sticker = params.sticker;
    }
}
exports.stickers_removeStickerFromSet_ = stickers_removeStickerFromSet_;
Object.defineProperty(stickers_removeStickerFromSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Changes the absolute position of a sticker in the set to which it belongs; for bots only. The sticker set must have been created by the bot */
class stickers_changeStickerPosition_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFFB6D4CA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.changeStickerPosition";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["sticker", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["position", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.sticker, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.position, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The sticker */
        Object.defineProperty(this, "sticker", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The new position of the sticker, zero-based */
        Object.defineProperty(this, "position", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.sticker = params.sticker;
        this.position = params.position;
    }
}
exports.stickers_changeStickerPosition_ = stickers_changeStickerPosition_;
Object.defineProperty(stickers_changeStickerPosition_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Add a sticker to a stickerset, bots only. The sticker set must have been created by the bot. */
class stickers_addStickerToSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8653FEBE;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.addStickerToSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            ["sticker", _2_types_js_1.types._InputStickerSetItem, "InputStickerSetItem"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            [this.sticker, _2_types_js_1.types._InputStickerSetItem, "InputStickerSetItem"],
        ];
    }
    constructor(params) {
        super();
        /** The stickerset */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The sticker */
        Object.defineProperty(this, "sticker", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
        this.sticker = params.sticker;
    }
}
exports.stickers_addStickerToSet_ = stickers_addStickerToSet_;
Object.defineProperty(stickers_addStickerToSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set stickerset thumbnail */
class stickers_setStickerSetThumb_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA76A5392;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.setStickerSetThumb";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            ["thumb", _2_types_js_1.types._InputDocument, "flags.0?InputDocument"],
            ["thumb_document_id", "bigint", "flags.1?long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            [this.thumb ?? null, _2_types_js_1.types._InputDocument, "flags.0?InputDocument"],
            [this.thumb_document_id ?? null, "bigint", "flags.1?long"],
        ];
    }
    constructor(params) {
        super();
        /** Stickerset */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Thumbnail (only for normal stickersets, not custom emoji stickersets). */
        Object.defineProperty(this, "thumb", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Only for [custom emoji stickersets](https://core.telegram.org/api/custom-emoji), ID of a custom emoji present in the set to use as thumbnail; pass 0 to fallback to the first custom emoji of the set. */
        Object.defineProperty(this, "thumb_document_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
        this.thumb = params.thumb;
        this.thumb_document_id = params.thumb_document_id;
    }
}
exports.stickers_setStickerSetThumb_ = stickers_setStickerSetThumb_;
Object.defineProperty(stickers_setStickerSetThumb_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check whether the given short name is available */
class stickers_checkShortName_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x284B3639;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.checkShortName";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["short_name", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.short_name, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Short name */
        Object.defineProperty(this, "short_name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.short_name = params.short_name;
    }
}
exports.stickers_checkShortName_ = stickers_checkShortName_;
Object.defineProperty(stickers_checkShortName_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Suggests a short name for a given stickerpack name */
class stickers_suggestShortName_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4DAFC503;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.suggestShortName";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["title", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.title, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Sticker pack name */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.title = params.title;
    }
}
exports.stickers_suggestShortName_ = stickers_suggestShortName_;
Object.defineProperty(stickers_suggestShortName_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Update the keywords, emojis or [mask coordinates](https://core.telegram.org/api/stickers#mask-stickers) of a sticker, bots only. */
class stickers_changeSticker_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF5537EBC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.changeSticker";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["sticker", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["emoji", "string", "flags.0?string"],
            ["mask_coords", _2_types_js_1.types._MaskCoords, "flags.1?MaskCoords"],
            ["keywords", "string", "flags.2?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.sticker, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.emoji ?? null, "string", "flags.0?string"],
            [this.mask_coords ?? null, _2_types_js_1.types._MaskCoords, "flags.1?MaskCoords"],
            [this.keywords ?? null, "string", "flags.2?string"],
        ];
    }
    constructor(params) {
        super();
        /** The sticker */
        Object.defineProperty(this, "sticker", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, updates the emoji list associated to the sticker */
        Object.defineProperty(this, "emoji", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, updates the [mask coordinates](https://core.telegram.org/api/stickers#mask-stickers) */
        Object.defineProperty(this, "mask_coords", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, updates the sticker keywords (separated by commas). Can't be provided for mask stickers. */
        Object.defineProperty(this, "keywords", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.sticker = params.sticker;
        this.emoji = params.emoji;
        this.mask_coords = params.mask_coords;
        this.keywords = params.keywords;
    }
}
exports.stickers_changeSticker_ = stickers_changeSticker_;
Object.defineProperty(stickers_changeSticker_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Renames a stickerset, bots only. */
class stickers_renameStickerSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x124B1C00;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.renameStickerSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            ["title", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
            [this.title, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Stickerset to rename */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New stickerset title */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
        this.title = params.title;
    }
}
exports.stickers_renameStickerSet_ = stickers_renameStickerSet_;
Object.defineProperty(stickers_renameStickerSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes a stickerset we created, bots only. */
class stickers_deleteStickerSet_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x87704394;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.deleteStickerSet";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["stickerset", _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.stickerset, _2_types_js_1.types._InputStickerSet, "InputStickerSet"],
        ];
    }
    constructor(params) {
        super();
        /** Stickerset to delete */
        Object.defineProperty(this, "stickerset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.stickerset = params.stickerset;
    }
}
exports.stickers_deleteStickerSet_ = stickers_deleteStickerSet_;
Object.defineProperty(stickers_deleteStickerSet_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class stickers_replaceSticker_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4696459A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stickers.replaceSticker";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["sticker", _2_types_js_1.types._InputDocument, "InputDocument"],
            ["new_sticker", _2_types_js_1.types._InputStickerSetItem, "InputStickerSetItem"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.sticker, _2_types_js_1.types._InputDocument, "InputDocument"],
            [this.new_sticker, _2_types_js_1.types._InputStickerSetItem, "InputStickerSetItem"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "sticker", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "new_sticker", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.sticker = params.sticker;
        this.new_sticker = params.new_sticker;
    }
}
exports.stickers_replaceSticker_ = stickers_replaceSticker_;
Object.defineProperty(stickers_replaceSticker_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get phone call configuration to be passed to libtgvoip's shared config */
class phone_getCallConfig_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x55451FA9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.getCallConfig";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.phone_getCallConfig_ = phone_getCallConfig_;
Object.defineProperty(phone_getCallConfig_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Start a telegram phone call */
class phone_requestCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x42FF96ED;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.requestCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["video", "true", "flags.0?true"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
            ["random_id", "number", "int"],
            ["g_a_hash", Uint8Array, "bytes"],
            ["protocol", _2_types_js_1.types._PhoneCallProtocol, "PhoneCallProtocol"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.video ?? null, "true", "flags.0?true"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
            [this.random_id, "number", "int"],
            [this.g_a_hash, Uint8Array, "bytes"],
            [this.protocol, _2_types_js_1.types._PhoneCallProtocol, "PhoneCallProtocol"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to start a video call */
        Object.defineProperty(this, "video", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Destination of the phone call */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Random ID to avoid resending the same object */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Parameter for E2E encryption key exchange »](https://core.telegram.org/api/end-to-end/voice-calls) */
        Object.defineProperty(this, "g_a_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone call settings */
        Object.defineProperty(this, "protocol", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.video = params.video;
        this.user_id = params.user_id;
        this.random_id = params.random_id;
        this.g_a_hash = params.g_a_hash;
        this.protocol = params.protocol;
    }
}
exports.phone_requestCall_ = phone_requestCall_;
Object.defineProperty(phone_requestCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Accept incoming call */
class phone_acceptCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x3BD2B4A0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.acceptCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["g_b", Uint8Array, "bytes"],
            ["protocol", _2_types_js_1.types._PhoneCallProtocol, "PhoneCallProtocol"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.g_b, Uint8Array, "bytes"],
            [this.protocol, _2_types_js_1.types._PhoneCallProtocol, "PhoneCallProtocol"],
        ];
    }
    constructor(params) {
        super();
        /** The call to accept */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Parameter for E2E encryption key exchange »](https://core.telegram.org/api/end-to-end/voice-calls) */
        Object.defineProperty(this, "g_b", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone call settings */
        Object.defineProperty(this, "protocol", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.g_b = params.g_b;
        this.protocol = params.protocol;
    }
}
exports.phone_acceptCall_ = phone_acceptCall_;
Object.defineProperty(phone_acceptCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** [Complete phone call E2E encryption key exchange »](https://core.telegram.org/api/end-to-end/voice-calls) */
class phone_confirmCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2EFE1722;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.confirmCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["g_a", Uint8Array, "bytes"],
            ["key_fingerprint", "bigint", "long"],
            ["protocol", _2_types_js_1.types._PhoneCallProtocol, "PhoneCallProtocol"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.g_a, Uint8Array, "bytes"],
            [this.key_fingerprint, "bigint", "long"],
            [this.protocol, _2_types_js_1.types._PhoneCallProtocol, "PhoneCallProtocol"],
        ];
    }
    constructor(params) {
        super();
        /** The phone call */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Parameter for E2E encryption key exchange »](https://core.telegram.org/api/end-to-end/voice-calls) */
        Object.defineProperty(this, "g_a", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Key fingerprint */
        Object.defineProperty(this, "key_fingerprint", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Phone call settings */
        Object.defineProperty(this, "protocol", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.g_a = params.g_a;
        this.key_fingerprint = params.key_fingerprint;
        this.protocol = params.protocol;
    }
}
exports.phone_confirmCall_ = phone_confirmCall_;
Object.defineProperty(phone_confirmCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Optional: notify the server that the user is currently busy in a call: this will automatically refuse all incoming phone calls until the current phone call is ended. */
class phone_receivedCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x17D54F61;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.receivedCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
        ];
    }
    constructor(params) {
        super();
        /** The phone call we're currently in */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.phone_receivedCall_ = phone_receivedCall_;
Object.defineProperty(phone_receivedCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Refuse or end running call */
class phone_discardCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB2CBC1C0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.discardCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["video", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["duration", "number", "int"],
            ["reason", _2_types_js_1.types._PhoneCallDiscardReason, "PhoneCallDiscardReason"],
            ["connection_id", "bigint", "long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.video ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.duration, "number", "int"],
            [this.reason, _2_types_js_1.types._PhoneCallDiscardReason, "PhoneCallDiscardReason"],
            [this.connection_id, "bigint", "long"],
        ];
    }
    constructor(params) {
        super();
        /** Whether this is a video call */
        Object.defineProperty(this, "video", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The phone call */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Call duration */
        Object.defineProperty(this, "duration", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Why was the call discarded */
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Preferred libtgvoip relay ID */
        Object.defineProperty(this, "connection_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.video = params.video;
        this.peer = params.peer;
        this.duration = params.duration;
        this.reason = params.reason;
        this.connection_id = params.connection_id;
    }
}
exports.phone_discardCall_ = phone_discardCall_;
Object.defineProperty(phone_discardCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Rate a call, returns info about the rating message sent to the official VoIP bot. */
class phone_setCallRating_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x59EAD627;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.setCallRating";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["user_initiative", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["rating", "number", "int"],
            ["comment", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.user_initiative ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.rating, "number", "int"],
            [this.comment, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Whether the user decided on their own initiative to rate the call */
        Object.defineProperty(this, "user_initiative", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The call to rate */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Rating in `1-5` stars */
        Object.defineProperty(this, "rating", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** An additional comment */
        Object.defineProperty(this, "comment", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.user_initiative = params.user_initiative;
        this.peer = params.peer;
        this.rating = params.rating;
        this.comment = params.comment;
    }
}
exports.phone_setCallRating_ = phone_setCallRating_;
Object.defineProperty(phone_setCallRating_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send phone call debug data to server */
class phone_saveCallDebug_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x277ADD7E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.saveCallDebug";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["debug", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.debug, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** Phone call */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Debug statistics obtained from libtgvoip */
        Object.defineProperty(this, "debug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.debug = params.debug;
    }
}
exports.phone_saveCallDebug_ = phone_saveCallDebug_;
Object.defineProperty(phone_saveCallDebug_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Send VoIP signaling data */
class phone_sendSignalingData_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFF7A9383;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.sendSignalingData";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["data", Uint8Array, "bytes"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.data, Uint8Array, "bytes"],
        ];
    }
    constructor(params) {
        super();
        /** Phone call */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Signaling payload */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.data = params.data;
    }
}
exports.phone_sendSignalingData_ = phone_sendSignalingData_;
Object.defineProperty(phone_sendSignalingData_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Create a group call or livestream */
class phone_createGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x48CDC6D8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.createGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["rtmp_stream", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["random_id", "number", "int"],
            ["title", "string", "flags.0?string"],
            ["schedule_date", "number", "flags.1?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.rtmp_stream ?? null, "true", "flags.2?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.random_id, "number", "int"],
            [this.title ?? null, "string", "flags.0?string"],
            [this.schedule_date ?? null, "number", "flags.1?int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether RTMP stream support should be enabled: only the [group/supergroup/channel](https://core.telegram.org/api/channel) owner can use this flag. */
        Object.defineProperty(this, "rtmp_stream", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Associate the group call or livestream to the provided [group/supergroup/channel](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID required to prevent creation of duplicate group calls */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Call title */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** For scheduled group call or livestreams, the absolute date when the group call will start */
        Object.defineProperty(this, "schedule_date", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.rtmp_stream = params.rtmp_stream;
        this.peer = params.peer;
        this.random_id = params.random_id;
        this.title = params.title;
        this.schedule_date = params.schedule_date;
    }
}
exports.phone_createGroupCall_ = phone_createGroupCall_;
Object.defineProperty(phone_createGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Join a group call */
class phone_joinGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB132FF7B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.joinGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["muted", "true", "flags.0?true"],
            ["video_stopped", "true", "flags.2?true"],
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["join_as", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["invite_hash", "string", "flags.1?string"],
            ["params", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.muted ?? null, "true", "flags.0?true"],
            [this.video_stopped ?? null, "true", "flags.2?true"],
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.join_as, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.invite_hash ?? null, "string", "flags.1?string"],
            [this.params, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** If set, the user will be muted by default upon joining. */
        Object.defineProperty(this, "muted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, the user's video will be disabled by default upon joining. */
        Object.defineProperty(this, "video_stopped", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Join the group call, presenting yourself as the specified user/channel */
        Object.defineProperty(this, "join_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The invitation hash from the [invite link »](https://core.telegram.org/api/links#video-chat-livestream-links), if provided allows speaking in a livestream or muted group chat. */
        Object.defineProperty(this, "invite_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** WebRTC parameters */
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.muted = params.muted;
        this.video_stopped = params.video_stopped;
        this.call = params.call;
        this.join_as = params.join_as;
        this.invite_hash = params.invite_hash;
        this.params = params.params;
    }
}
exports.phone_joinGroupCall_ = phone_joinGroupCall_;
Object.defineProperty(phone_joinGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Leave a group call */
class phone_leaveGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x500377F9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.leaveGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["source", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.source, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Your source ID */
        Object.defineProperty(this, "source", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.source = params.source;
    }
}
exports.phone_leaveGroupCall_ = phone_leaveGroupCall_;
Object.defineProperty(phone_leaveGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Invite a set of users to a group call. */
class phone_inviteToGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7B393160;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.inviteToGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["users", [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.users, [_2_types_js_1.types._InputUser], "Vector<InputUser>"],
        ];
    }
    constructor(params) {
        super();
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The users to invite. */
        Object.defineProperty(this, "users", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.users = params.users;
    }
}
exports.phone_inviteToGroupCall_ = phone_inviteToGroupCall_;
Object.defineProperty(phone_inviteToGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Terminate a group call */
class phone_discardGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7A777135;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.discardGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    constructor(params) {
        super();
        /** The group call to terminate */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
    }
}
exports.phone_discardGroupCall_ = phone_discardGroupCall_;
Object.defineProperty(phone_discardGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Change group call settings */
class phone_toggleGroupCallSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x74BBB43D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.toggleGroupCallSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["reset_invite_hash", "true", "flags.1?true"],
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["join_muted", "boolean", "flags.0?Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.reset_invite_hash ?? null, "true", "flags.1?true"],
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.join_muted ?? null, "boolean", "flags.0?Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Invalidate existing invite links */
        Object.defineProperty(this, "reset_invite_hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether all users will that join this group call are muted by default upon joining the group call */
        Object.defineProperty(this, "join_muted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.reset_invite_hash = params.reset_invite_hash;
        this.call = params.call;
        this.join_muted = params.join_muted;
    }
}
exports.phone_toggleGroupCallSettings_ = phone_toggleGroupCallSettings_;
Object.defineProperty(phone_toggleGroupCallSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about a group call */
class phone_getGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x041845DB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.getGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.limit = params.limit;
    }
}
exports.phone_getGroupCall_ = phone_getGroupCall_;
Object.defineProperty(phone_getGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get group call participants */
class phone_getGroupParticipants_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC558D8AB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.getGroupParticipants";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["ids", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
            ["sources", ["number"], "Vector<int>"],
            ["offset", "string", "string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.ids, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
            [this.sources, ["number"], "Vector<int>"],
            [this.offset, "string", "string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If specified, will fetch group participant info about the specified peers */
        Object.defineProperty(this, "ids", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If specified, will fetch group participant info about the specified WebRTC source IDs */
        Object.defineProperty(this, "sources", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for results, taken from the `next_offset` field of [phone.groupParticipants](https://core.telegram.org/constructor/phone.groupParticipants), initially an empty string.
        Note: if no more results are available, the method call will return an empty `next_offset`; thus, avoid providing the `next_offset` returned in [phone.groupParticipants](https://core.telegram.org/constructor/phone.groupParticipants) if it is empty, to avoid an infinite loop. */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.ids = params.ids;
        this.sources = params.sources;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.phone_getGroupParticipants_ = phone_getGroupParticipants_;
Object.defineProperty(phone_getGroupParticipants_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check whether the group call Server Forwarding Unit is currently receiving the streams with the specified WebRTC source IDs.
Returns an intersection of the source IDs specified in `sources`, and the source IDs currently being forwarded by the SFU. */
class phone_checkGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB59CF977;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.checkGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["sources", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.sources, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Source IDs */
        Object.defineProperty(this, "sources", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.sources = params.sources;
    }
}
exports.phone_checkGroupCall_ = phone_checkGroupCall_;
Object.defineProperty(phone_checkGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Start or stop recording a group call: the recorded audio and video streams will be automatically sent to `Saved messages` (the chat with ourselves). */
class phone_toggleGroupCallRecord_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF128C708;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.toggleGroupCallRecord";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["start", "true", "flags.0?true"],
            ["video", "true", "flags.2?true"],
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["title", "string", "flags.1?string"],
            ["video_portrait", "boolean", "flags.2?Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.start ?? null, "true", "flags.0?true"],
            [this.video ?? null, "true", "flags.2?true"],
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.title ?? null, "string", "flags.1?string"],
            [this.video_portrait ?? null, "boolean", "flags.2?Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to start or stop recording */
        Object.defineProperty(this, "start", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to also record video streams */
        Object.defineProperty(this, "video", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The group call or livestream */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Recording title */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If video stream recording is enabled, whether to record in portrait or landscape mode */
        Object.defineProperty(this, "video_portrait", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.start = params.start;
        this.video = params.video;
        this.call = params.call;
        this.title = params.title;
        this.video_portrait = params.video_portrait;
    }
}
exports.phone_toggleGroupCallRecord_ = phone_toggleGroupCallRecord_;
Object.defineProperty(phone_toggleGroupCallRecord_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit information about a given group call participant */
class phone_editGroupCallParticipant_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA5273ABF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.editGroupCallParticipant";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["participant", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["muted", "boolean", "flags.0?Bool"],
            ["volume", "number", "flags.1?int"],
            ["raise_hand", "boolean", "flags.2?Bool"],
            ["video_stopped", "boolean", "flags.3?Bool"],
            ["video_paused", "boolean", "flags.4?Bool"],
            ["presentation_paused", "boolean", "flags.5?Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.participant, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.muted ?? null, "boolean", "flags.0?Bool"],
            [this.volume ?? null, "number", "flags.1?int"],
            [this.raise_hand ?? null, "boolean", "flags.2?Bool"],
            [this.video_stopped ?? null, "boolean", "flags.3?Bool"],
            [this.video_paused ?? null, "boolean", "flags.4?Bool"],
            [this.presentation_paused ?? null, "boolean", "flags.5?Bool"],
        ];
    }
    constructor(params) {
        super();
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The group call participant (can also be the user itself) */
        Object.defineProperty(this, "participant", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to mute or unmute the specified participant */
        Object.defineProperty(this, "muted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New volume */
        Object.defineProperty(this, "volume", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Raise or lower hand */
        Object.defineProperty(this, "raise_hand", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Start or stop the video stream */
        Object.defineProperty(this, "video_stopped", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Pause or resume the video stream */
        Object.defineProperty(this, "video_paused", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Pause or resume the screen sharing stream */
        Object.defineProperty(this, "presentation_paused", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.participant = params.participant;
        this.muted = params.muted;
        this.volume = params.volume;
        this.raise_hand = params.raise_hand;
        this.video_stopped = params.video_stopped;
        this.video_paused = params.video_paused;
        this.presentation_paused = params.presentation_paused;
    }
}
exports.phone_editGroupCallParticipant_ = phone_editGroupCallParticipant_;
Object.defineProperty(phone_editGroupCallParticipant_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit the title of a group call or livestream */
class phone_editGroupCallTitle_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1CA6AC0A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.editGroupCallTitle";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["title", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.title, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** New title */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.title = params.title;
    }
}
exports.phone_editGroupCallTitle_ = phone_editGroupCallTitle_;
Object.defineProperty(phone_editGroupCallTitle_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get a list of peers that can be used to join a group call, presenting yourself as a specific user/channel. */
class phone_getGroupCallJoinAs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEF7C213A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.getGroupCallJoinAs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The dialog whose group call or livestream we're trying to join */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.phone_getGroupCallJoinAs_ = phone_getGroupCallJoinAs_;
Object.defineProperty(phone_getGroupCallJoinAs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get an [invite link](https://core.telegram.org/api/links#video-chat-livestream-links) for a group call or livestream */
class phone_exportGroupCallInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE6AA647F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.exportGroupCallInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["can_self_unmute", "true", "flags.0?true"],
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.can_self_unmute ?? null, "true", "flags.0?true"],
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    constructor(params) {
        super();
        /** For livestreams or muted group chats, if set, users that join using this link will be able to speak without explicitly requesting permission by (for example by raising their hand). */
        Object.defineProperty(this, "can_self_unmute", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.can_self_unmute = params.can_self_unmute;
        this.call = params.call;
    }
}
exports.phone_exportGroupCallInvite_ = phone_exportGroupCallInvite_;
Object.defineProperty(phone_exportGroupCallInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Subscribe or unsubscribe to a scheduled group call */
class phone_toggleGroupCallStartSubscription_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x219C34E6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.toggleGroupCallStartSubscription";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["subscribed", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.subscribed, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Scheduled group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Enable or disable subscription */
        Object.defineProperty(this, "subscribed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.subscribed = params.subscribed;
    }
}
exports.phone_toggleGroupCallStartSubscription_ = phone_toggleGroupCallStartSubscription_;
Object.defineProperty(phone_toggleGroupCallStartSubscription_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Start a scheduled group call. */
class phone_startScheduledGroupCall_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5680E342;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.startScheduledGroupCall";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    constructor(params) {
        super();
        /** The scheduled group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
    }
}
exports.phone_startScheduledGroupCall_ = phone_startScheduledGroupCall_;
Object.defineProperty(phone_startScheduledGroupCall_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Set the default peer that will be used to join a group call in a specific dialog. */
class phone_saveDefaultGroupCallJoinAs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x575E1F8C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.saveDefaultGroupCallJoinAs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["join_as", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.join_as, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The dialog */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The default peer that will be used to join group calls in this dialog, presenting yourself as a specific user/channel. */
        Object.defineProperty(this, "join_as", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.join_as = params.join_as;
    }
}
exports.phone_saveDefaultGroupCallJoinAs_ = phone_saveDefaultGroupCallJoinAs_;
Object.defineProperty(phone_saveDefaultGroupCallJoinAs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Start screen sharing in a call */
class phone_joinGroupCallPresentation_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCBEA6BC4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.joinGroupCallPresentation";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            ["params", _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
            [this.params, _2_types_js_1.types._DataJSON, "DataJSON"],
        ];
    }
    constructor(params) {
        super();
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** WebRTC parameters */
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
        this.params = params.params;
    }
}
exports.phone_joinGroupCallPresentation_ = phone_joinGroupCallPresentation_;
Object.defineProperty(phone_joinGroupCallPresentation_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Stop screen sharing in a group call */
class phone_leaveGroupCallPresentation_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1C50D144;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.leaveGroupCallPresentation";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    constructor(params) {
        super();
        /** The group call */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
    }
}
exports.phone_leaveGroupCallPresentation_ = phone_leaveGroupCallPresentation_;
Object.defineProperty(phone_leaveGroupCallPresentation_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get info about RTMP streams in a group call or livestream.
This method should be invoked to the same group/channel-related DC used for [downloading livestream chunks](https://core.telegram.org/api/files#downloading-files).
As usual, the media DC is preferred, if available. */
class phone_getGroupCallStreamChannels_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1AB21940;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.getGroupCallStreamChannels";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["call", _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.call, _2_types_js_1.types._InputGroupCall, "InputGroupCall"],
        ];
    }
    constructor(params) {
        super();
        /** Group call or livestream */
        Object.defineProperty(this, "call", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.call = params.call;
    }
}
exports.phone_getGroupCallStreamChannels_ = phone_getGroupCallStreamChannels_;
Object.defineProperty(phone_getGroupCallStreamChannels_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get RTMP URL and stream key for RTMP livestreams. Can be used even before creating the actual RTMP livestream with [phone.createGroupCall](https://core.telegram.org/method/phone.createGroupCall) (the `rtmp_stream` flag must be set). */
class phone_getGroupCallStreamRtmpUrl_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDEB3ABBF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.getGroupCallStreamRtmpUrl";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["revoke", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.revoke, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Peer to livestream into */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to revoke the previous stream key or simply return the existing one */
        Object.defineProperty(this, "revoke", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.revoke = params.revoke;
    }
}
exports.phone_getGroupCallStreamRtmpUrl_ = phone_getGroupCallStreamRtmpUrl_;
Object.defineProperty(phone_getGroupCallStreamRtmpUrl_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Save phone call debug information */
class phone_saveCallLog_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x41248786;
    }
    static get [_1_tl_object_js_1.name]() {
        return "phone.saveCallLog";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            ["file", _2_types_js_1.types._InputFile, "InputFile"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPhoneCall, "InputPhoneCall"],
            [this.file, _2_types_js_1.types._InputFile, "InputFile"],
        ];
    }
    constructor(params) {
        super();
        /** Phone call */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Logs */
        Object.defineProperty(this, "file", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.file = params.file;
    }
}
exports.phone_saveCallLog_ = phone_saveCallLog_;
Object.defineProperty(phone_saveCallLog_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get localization pack strings */
class langpack_getLangPack_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xF2F2330A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "langpack.getLangPack";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_pack", "string", "string"],
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_pack, "string", "string"],
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Language pack name, usually obtained from a [language pack link](https://core.telegram.org/api/links#language-pack-links) */
        Object.defineProperty(this, "lang_pack", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_pack = params.lang_pack;
        this.lang_code = params.lang_code;
    }
}
exports.langpack_getLangPack_ = langpack_getLangPack_;
Object.defineProperty(langpack_getLangPack_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get strings from a language pack */
class langpack_getStrings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEFEA3803;
    }
    static get [_1_tl_object_js_1.name]() {
        return "langpack.getStrings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_pack", "string", "string"],
            ["lang_code", "string", "string"],
            ["keys", ["string"], "Vector<string>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_pack, "string", "string"],
            [this.lang_code, "string", "string"],
            [this.keys, ["string"], "Vector<string>"],
        ];
    }
    constructor(params) {
        super();
        /** Language pack name, usually obtained from a [language pack link](https://core.telegram.org/api/links#language-pack-links) */
        Object.defineProperty(this, "lang_pack", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Strings to get */
        Object.defineProperty(this, "keys", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_pack = params.lang_pack;
        this.lang_code = params.lang_code;
        this.keys = params.keys;
    }
}
exports.langpack_getStrings_ = langpack_getStrings_;
Object.defineProperty(langpack_getStrings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get new strings in language pack */
class langpack_getDifference_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCD984AA5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "langpack.getDifference";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_pack", "string", "string"],
            ["lang_code", "string", "string"],
            ["from_version", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_pack, "string", "string"],
            [this.lang_code, "string", "string"],
            [this.from_version, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Language pack */
        Object.defineProperty(this, "lang_pack", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Previous localization pack version */
        Object.defineProperty(this, "from_version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_pack = params.lang_pack;
        this.lang_code = params.lang_code;
        this.from_version = params.from_version;
    }
}
exports.langpack_getDifference_ = langpack_getDifference_;
Object.defineProperty(langpack_getDifference_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get information about all languages in a localization pack */
class langpack_getLanguages_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x42C6978F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "langpack.getLanguages";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_pack", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_pack, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Language pack */
        Object.defineProperty(this, "lang_pack", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_pack = params.lang_pack;
    }
}
exports.langpack_getLanguages_ = langpack_getLanguages_;
Object.defineProperty(langpack_getLanguages_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get information about a language in a localization pack */
class langpack_getLanguage_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6A596502;
    }
    static get [_1_tl_object_js_1.name]() {
        return "langpack.getLanguage";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["lang_pack", "string", "string"],
            ["lang_code", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.lang_pack, "string", "string"],
            [this.lang_code, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** Language pack name, usually obtained from a [language pack link](https://core.telegram.org/api/links#language-pack-links) */
        Object.defineProperty(this, "lang_pack", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Language code */
        Object.defineProperty(this, "lang_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.lang_pack = params.lang_pack;
        this.lang_code = params.lang_code;
    }
}
exports.langpack_getLanguage_ = langpack_getLanguage_;
Object.defineProperty(langpack_getLanguage_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit peers in [peer folder](https://core.telegram.org/api/folders#peer-folders) */
class folders_editPeerFolders_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6847D0AB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "folders.editPeerFolders";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["folder_peers", [_2_types_js_1.types._InputFolderPeer], "Vector<InputFolderPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.folder_peers, [_2_types_js_1.types._InputFolderPeer], "Vector<InputFolderPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** New peer list */
        Object.defineProperty(this, "folder_peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.folder_peers = params.folder_peers;
    }
}
exports.folders_editPeerFolders_ = folders_editPeerFolders_;
Object.defineProperty(folders_editPeerFolders_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [channel statistics](https://core.telegram.org/api/stats) */
class stats_getBroadcastStats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAB42441A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getBroadcastStats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["dark", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.dark ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to enable dark theme for graph colors */
        Object.defineProperty(this, "dark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dark = params.dark;
        this.channel = params.channel;
    }
}
exports.stats_getBroadcastStats_ = stats_getBroadcastStats_;
Object.defineProperty(stats_getBroadcastStats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Load [channel statistics graph](https://core.telegram.org/api/stats) asynchronously */
class stats_loadAsyncGraph_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x621D5FA0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.loadAsyncGraph";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["token", "string", "string"],
            ["x", "bigint", "flags.0?long"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.token, "string", "string"],
            [this.x ?? null, "bigint", "flags.0?long"],
        ];
    }
    constructor(params) {
        super();
        /** Graph token from [statsGraphAsync](https://core.telegram.org/constructor/statsGraphAsync) constructor */
        Object.defineProperty(this, "token", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Zoom value, if required */
        Object.defineProperty(this, "x", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.token = params.token;
        this.x = params.x;
    }
}
exports.stats_loadAsyncGraph_ = stats_loadAsyncGraph_;
Object.defineProperty(stats_loadAsyncGraph_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [supergroup statistics](https://core.telegram.org/api/stats) */
class stats_getMegagroupStats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xDCDF8607;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getMegagroupStats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["dark", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.dark ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to enable dark theme for graph colors */
        Object.defineProperty(this, "dark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Supergroup ID](https://core.telegram.org/api/channel) */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dark = params.dark;
        this.channel = params.channel;
    }
}
exports.stats_getMegagroupStats_ = stats_getMegagroupStats_;
Object.defineProperty(stats_getMegagroupStats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtains a list of messages, indicating to which other public channels was a channel message forwarded.
Will return a list of [messages](https://core.telegram.org/constructor/message) with `peer_id` equal to the public channel to which this message was forwarded. */
class stats_getMessagePublicForwards_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5F150144;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getMessagePublicForwards";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["msg_id", "number", "int"],
            ["offset", "string", "string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.msg_id, "number", "int"],
            [this.offset, "string", "string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Source channel */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Source message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for [pagination](https://core.telegram.org/api/offsets), empty string on first call, then use the `next_offset` field of the returned constructor (if present, otherwise no more results are available). */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.msg_id = params.msg_id;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.stats_getMessagePublicForwards_ = stats_getMessagePublicForwards_;
Object.defineProperty(stats_getMessagePublicForwards_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [message statistics](https://core.telegram.org/api/stats) */
class stats_getMessageStats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB6E0A3F5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getMessageStats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["dark", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["msg_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.dark ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.msg_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to enable dark theme for graph colors */
        Object.defineProperty(this, "dark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Channel ID */
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Message ID */
        Object.defineProperty(this, "msg_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dark = params.dark;
        this.channel = params.channel;
        this.msg_id = params.msg_id;
    }
}
exports.stats_getMessageStats_ = stats_getMessageStats_;
Object.defineProperty(stats_getMessageStats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get [statistics](https://core.telegram.org/api/stats) for a certain [story](https://core.telegram.org/api/stories). */
class stats_getStoryStats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x374FEF40;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getStoryStats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["dark", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.dark ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to enable the dark theme for graph colors */
        Object.defineProperty(this, "dark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The peer that posted the story */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Story ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dark = params.dark;
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.stats_getStoryStats_ = stats_getStoryStats_;
Object.defineProperty(stats_getStoryStats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain forwards of a [story](https://core.telegram.org/api/stories) as a message to public chats and reposts by public channels. */
class stats_getStoryPublicForwards_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA6437EF6;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getStoryPublicForwards";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["offset", "string", "string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.offset, "string", "string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the story was originally posted */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Story](https://core.telegram.org/api/stories) ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for pagination, from [stats.PublicForwards](https://core.telegram.org/constructor/stats.publicForwards).`next_offset`. */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.stats_getStoryPublicForwards_ = stats_getStoryPublicForwards_;
Object.defineProperty(stats_getStoryPublicForwards_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class stats_getBroadcastRevenueStats_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x75DFB671;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getBroadcastRevenueStats";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["dark", "true", "flags.0?true"],
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.dark ?? null, "true", "flags.0?true"],
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "dark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.dark = params.dark;
        this.channel = params.channel;
    }
}
exports.stats_getBroadcastRevenueStats_ = stats_getBroadcastRevenueStats_;
Object.defineProperty(stats_getBroadcastRevenueStats_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class stats_getBroadcastRevenueWithdrawalUrl_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2A65EF73;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getBroadcastRevenueWithdrawalUrl";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["password", _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.password, _2_types_js_1.types._InputCheckPasswordSRP, "InputCheckPasswordSRP"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.password = params.password;
    }
}
exports.stats_getBroadcastRevenueWithdrawalUrl_ = stats_getBroadcastRevenueWithdrawalUrl_;
Object.defineProperty(stats_getBroadcastRevenueWithdrawalUrl_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class stats_getBroadcastRevenueTransactions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0069280F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stats.getBroadcastRevenueTransactions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["channel", _2_types_js_1.types._InputChannel, "InputChannel"],
            ["offset", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.channel, _2_types_js_1.types._InputChannel, "InputChannel"],
            [this.offset, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "channel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.channel = params.channel;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.stats_getBroadcastRevenueTransactions_ = stats_getBroadcastRevenueTransactions_;
Object.defineProperty(stats_getBroadcastRevenueTransactions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Export a [folder »](https://core.telegram.org/api/folders), creating a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
class chatlists_exportChatlistInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x8472478E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.exportChatlistInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
            ["title", "string", "string"],
            ["peers", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
            [this.title, "string", "string"],
            [this.peers, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** The folder to export */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** An optional name for the link */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The list of channels, group and supergroups to share with the link. Basic groups will automatically be [converted to supergroups](https://core.telegram.org/api/channel#migration) when invoking the method. */
        Object.defineProperty(this, "peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
        this.title = params.title;
        this.peers = params.peers;
    }
}
exports.chatlists_exportChatlistInvite_ = chatlists_exportChatlistInvite_;
Object.defineProperty(chatlists_exportChatlistInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete a previously created [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
class chatlists_deleteExportedInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x719C5C5E;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.deleteExportedInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
            ["slug", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
            [this.slug, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The related folder */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** `slug` obtained from the [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
        this.slug = params.slug;
    }
}
exports.chatlists_deleteExportedInvite_ = chatlists_deleteExportedInvite_;
Object.defineProperty(chatlists_deleteExportedInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
class chatlists_editExportedInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x653DB63D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.editExportedInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
            ["slug", "string", "string"],
            ["title", "string", "flags.1?string"],
            ["peers", [_2_types_js_1.types._InputPeer], "flags.2?Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
            [this.slug, "string", "string"],
            [this.title ?? null, "string", "flags.1?string"],
            [this.peers ?? null, [_2_types_js_1.types._InputPeer], "flags.2?Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** Folder ID */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** `slug` obtained from the [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, sets a new name for the link */
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, changes the list of peers shared with the link */
        Object.defineProperty(this, "peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
        this.slug = params.slug;
        this.title = params.title;
        this.peers = params.peers;
    }
}
exports.chatlists_editExportedInvite_ = chatlists_editExportedInvite_;
Object.defineProperty(chatlists_editExportedInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** List all [chat folder deep links »](https://core.telegram.org/api/links#chat-folder-links) associated to a folder */
class chatlists_getExportedInvites_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xCE03DA83;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.getExportedInvites";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    constructor(params) {
        super();
        /** The folder */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
    }
}
exports.chatlists_getExportedInvites_ = chatlists_getExportedInvites_;
Object.defineProperty(chatlists_getExportedInvites_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain information about a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
class chatlists_checkChatlistInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x41C10FFF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.checkChatlistInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** `slug` obtained from the [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links) */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
    }
}
exports.chatlists_checkChatlistInvite_ = chatlists_checkChatlistInvite_;
Object.defineProperty(chatlists_checkChatlistInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Import a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links), joining some or all the chats in the folder. */
class chatlists_joinChatlistInvite_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA6B1E39A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.joinChatlistInvite";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["slug", "string", "string"],
            ["peers", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.slug, "string", "string"],
            [this.peers, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** `slug` obtained from a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
        Object.defineProperty(this, "slug", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** List of new chats to join, fetched using [chatlists.checkChatlistInvite](https://core.telegram.org/method/chatlists.checkChatlistInvite) and filtered as specified in the [documentation »](https://core.telegram.org/api/folders#shared-folders). */
        Object.defineProperty(this, "peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slug = params.slug;
        this.peers = params.peers;
    }
}
exports.chatlists_joinChatlistInvite_ = chatlists_joinChatlistInvite_;
Object.defineProperty(chatlists_joinChatlistInvite_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch new chats associated with an imported [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). Must be invoked at most every `chatlist_update_period` seconds (as per the related [client configuration parameter »](https://core.telegram.org/api/config#chatlist-update-period)). */
class chatlists_getChatlistUpdates_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x89419521;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.getChatlistUpdates";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    constructor(params) {
        super();
        /** The folder */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
    }
}
exports.chatlists_getChatlistUpdates_ = chatlists_getChatlistUpdates_;
Object.defineProperty(chatlists_getChatlistUpdates_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Join channels and supergroups recently added to a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
class chatlists_joinChatlistUpdates_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE089F8F5;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.joinChatlistUpdates";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
            ["peers", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
            [this.peers, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** The folder */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** List of new chats to join, fetched using [chatlists.getChatlistUpdates](https://core.telegram.org/method/chatlists.getChatlistUpdates) and filtered as specified in the [documentation »](https://core.telegram.org/api/folders#shared-folders). */
        Object.defineProperty(this, "peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
        this.peers = params.peers;
    }
}
exports.chatlists_joinChatlistUpdates_ = chatlists_joinChatlistUpdates_;
Object.defineProperty(chatlists_joinChatlistUpdates_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Dismiss new pending peers recently added to a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links). */
class chatlists_hideChatlistUpdates_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x66E486FB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.hideChatlistUpdates";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    constructor(params) {
        super();
        /** The folder */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
    }
}
exports.chatlists_hideChatlistUpdates_ = chatlists_hideChatlistUpdates_;
Object.defineProperty(chatlists_hideChatlistUpdates_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns identifiers of pinned or always included chats from a chat folder imported using a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links), which are suggested to be left when the chat folder is deleted. */
class chatlists_getLeaveChatlistSuggestions_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xFDBCD714;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.getLeaveChatlistSuggestions";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
        ];
    }
    constructor(params) {
        super();
        /** Folder ID */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
    }
}
exports.chatlists_getLeaveChatlistSuggestions_ = chatlists_getLeaveChatlistSuggestions_;
Object.defineProperty(chatlists_getLeaveChatlistSuggestions_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Delete a folder imported using a [chat folder deep link »](https://core.telegram.org/api/links#chat-folder-links) */
class chatlists_leaveChatlist_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x74FAE13A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "chatlists.leaveChatlist";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["chatlist", _2_types_js_1.types._InputChatlist, "InputChatlist"],
            ["peers", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.chatlist, _2_types_js_1.types._InputChatlist, "InputChatlist"],
            [this.peers, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** Folder ID */
        Object.defineProperty(this, "chatlist", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Also leave the specified channels and groups */
        Object.defineProperty(this, "peers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.chatlist = params.chatlist;
        this.peers = params.peers;
    }
}
exports.chatlists_leaveChatlist_ = chatlists_leaveChatlist_;
Object.defineProperty(chatlists_leaveChatlist_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Check whether we can post stories as the specified peer. */
class stories_canSendStory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xC7DFDFDD;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.canSendStory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The peer from which we wish to post stories. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.stories_canSendStory_ = stories_canSendStory_;
Object.defineProperty(stories_canSendStory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Uploads a [Telegram Story](https://core.telegram.org/api/stories). */
class stories_sendStory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xE4E6694B;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.sendStory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["pinned", "true", "flags.2?true"],
            ["noforwards", "true", "flags.4?true"],
            ["fwd_modified", "true", "flags.7?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["media", _2_types_js_1.types._InputMedia, "InputMedia"],
            ["media_areas", [_2_types_js_1.types._MediaArea], "flags.5?Vector<MediaArea>"],
            ["caption", "string", "flags.0?string"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.1?Vector<MessageEntity>"],
            ["privacy_rules", [_2_types_js_1.types._InputPrivacyRule], "Vector<InputPrivacyRule>"],
            ["random_id", "bigint", "long"],
            ["period", "number", "flags.3?int"],
            ["fwd_from_id", _2_types_js_1.types._InputPeer, "flags.6?InputPeer"],
            ["fwd_from_story", "number", "flags.6?int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.pinned ?? null, "true", "flags.2?true"],
            [this.noforwards ?? null, "true", "flags.4?true"],
            [this.fwd_modified ?? null, "true", "flags.7?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.media, _2_types_js_1.types._InputMedia, "InputMedia"],
            [this.media_areas ?? null, [_2_types_js_1.types._MediaArea], "flags.5?Vector<MediaArea>"],
            [this.caption ?? null, "string", "flags.0?string"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.1?Vector<MessageEntity>"],
            [this.privacy_rules, [_2_types_js_1.types._InputPrivacyRule], "Vector<InputPrivacyRule>"],
            [this.random_id, "bigint", "long"],
            [this.period ?? null, "number", "flags.3?int"],
            [this.fwd_from_id ?? null, _2_types_js_1.types._InputPeer, "flags.6?InputPeer"],
            [this.fwd_from_story ?? null, "number", "flags.6?int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to add the story to the profile automatically upon expiration. If not set, the story will only be added to the archive, see [here »](https://core.telegram.org/api/stories) for more info. */
        Object.defineProperty(this, "pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, disables forwards, screenshots, and downloads. */
        Object.defineProperty(this, "noforwards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Set this flag when reposting stories with `fwd_from_id`+`fwd_from_id`, if the `media` was modified before reposting. */
        Object.defineProperty(this, "fwd_modified", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The peer to send the story as. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The story media. */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Media areas](https://core.telegram.org/api/stories#media-areas) associated to the story, see [here »](https://core.telegram.org/api/stories#media-areas) for more info. */
        Object.defineProperty(this, "media_areas", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Story caption. */
        Object.defineProperty(this, "caption", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Message entities for styled text](https://core.telegram.org/api/entities), if allowed by the [`stories_entities` client configuration parameter »](https://core.telegram.org/api/config#stories-entities). */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Privacy rules](https://core.telegram.org/api/privacy) for the story, indicating who can or can't view the story. */
        Object.defineProperty(this, "privacy_rules", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Unique client message ID required to prevent message resending. */
        Object.defineProperty(this, "random_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Period after which the story is moved to archive (and to the profile if `pinned` is set), in seconds; must be one of `6 * 3600`, `12 * 3600`, `86400`, or `2 * 86400` for Telegram Premium users, and `86400` otherwise. */
        Object.defineProperty(this, "period", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that this story is a repost of story with ID `fwd_from_story` posted by the peer in `fwd_from_id`. */
        Object.defineProperty(this, "fwd_from_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, indicates that this story is a repost of story with ID `fwd_from_story` posted by the peer in `fwd_from_id`. */
        Object.defineProperty(this, "fwd_from_story", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pinned = params.pinned;
        this.noforwards = params.noforwards;
        this.fwd_modified = params.fwd_modified;
        this.peer = params.peer;
        this.media = params.media;
        this.media_areas = params.media_areas;
        this.caption = params.caption;
        this.entities = params.entities;
        this.privacy_rules = params.privacy_rules;
        this.random_id = params.random_id;
        this.period = params.period;
        this.fwd_from_id = params.fwd_from_id;
        this.fwd_from_story = params.fwd_from_story;
    }
}
exports.stories_sendStory_ = stories_sendStory_;
Object.defineProperty(stories_sendStory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Edit an uploaded [story](https://core.telegram.org/api/stories) */
class stories_editStory_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB583BA46;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.editStory";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["media", _2_types_js_1.types._InputMedia, "flags.0?InputMedia"],
            ["media_areas", [_2_types_js_1.types._MediaArea], "flags.3?Vector<MediaArea>"],
            ["caption", "string", "flags.1?string"],
            ["entities", [_2_types_js_1.types._MessageEntity], "flags.1?Vector<MessageEntity>"],
            ["privacy_rules", [_2_types_js_1.types._InputPrivacyRule], "flags.2?Vector<InputPrivacyRule>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.media ?? null, _2_types_js_1.types._InputMedia, "flags.0?InputMedia"],
            [this.media_areas ?? null, [_2_types_js_1.types._MediaArea], "flags.3?Vector<MediaArea>"],
            [this.caption ?? null, "string", "flags.1?string"],
            [this.entities ?? null, [_2_types_js_1.types._MessageEntity], "flags.1?Vector<MessageEntity>"],
            [this.privacy_rules ?? null, [_2_types_js_1.types._InputPrivacyRule], "flags.2?Vector<InputPrivacyRule>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the story was posted. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of story to edit. */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If specified, replaces the story media. */
        Object.defineProperty(this, "media", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Media areas](https://core.telegram.org/api/stories#media-areas) associated to the story, see [here »](https://core.telegram.org/api/stories#media-areas) for more info. */
        Object.defineProperty(this, "media_areas", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If specified, replaces the story caption. */
        Object.defineProperty(this, "caption", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Message entities for styled text in the caption](https://core.telegram.org/api/entities), if allowed by the [`stories_entities` client configuration parameter »](https://core.telegram.org/api/config#stories-entities). */
        Object.defineProperty(this, "entities", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If specified, alters the [privacy settings »](https://core.telegram.org/api/privacy) of the story, changing who can or can't view the story. */
        Object.defineProperty(this, "privacy_rules", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.media = params.media;
        this.media_areas = params.media_areas;
        this.caption = params.caption;
        this.entities = params.entities;
        this.privacy_rules = params.privacy_rules;
    }
}
exports.stories_editStory_ = stories_editStory_;
Object.defineProperty(stories_editStory_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Deletes some posted [stories](https://core.telegram.org/api/stories). */
class stories_deleteStories_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xAE59DB5F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.deleteStories";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Channel/user from where to delete stories. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of stories to delete. */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.stories_deleteStories_ = stories_deleteStories_;
Object.defineProperty(stories_deleteStories_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Pin or unpin one or more stories */
class stories_togglePinned_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9A75A1EF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.togglePinned";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
            ["pinned", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
            [this.pinned, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where to pin or unpin stories */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of stories to pin or unpin */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to pin or unpin the stories */
        Object.defineProperty(this, "pinned", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.pinned = params.pinned;
    }
}
exports.stories_togglePinned_ = stories_togglePinned_;
Object.defineProperty(stories_togglePinned_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch the List of active (or active and hidden) stories, see [here »](https://core.telegram.org/api/stories#watching-stories) for more info on watching stories. */
class stories_getAllStories_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xEEB0D625;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getAllStories";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["next", "true", "flags.1?true"],
            ["hidden", "true", "flags.2?true"],
            ["state", "string", "flags.0?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.next ?? null, "true", "flags.1?true"],
            [this.hidden ?? null, "true", "flags.2?true"],
            [this.state ?? null, "string", "flags.0?string"],
        ];
    }
    constructor(params) {
        super();
        /** If `next` and `state` are both set, uses the passed `state` to paginate to the next results; if neither `state` nor `next` are set, fetches the initial page; if `state` is set and `next` is not set, check for changes in the active/hidden peerset, see [here »](https://core.telegram.org/api/stories#watching-stories) for more info on the full flow. */
        Object.defineProperty(this, "next", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, fetches the hidden active story list, otherwise fetches the active story list, see [here »](https://core.telegram.org/api/stories#watching-stories) for more info on the full flow. */
        Object.defineProperty(this, "hidden", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If `next` and `state` are both set, uses the passed `state` to paginate to the next results; if neither `state` nor `next` are set, fetches the initial page; if `state` is set and `next` is not set, check for changes in the active/hidden peerset, see [here »](https://core.telegram.org/api/stories#watching-stories) for more info on the full flow. */
        Object.defineProperty(this, "state", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.next = params?.next;
        this.hidden = params?.hidden;
        this.state = params?.state;
    }
}
exports.stories_getAllStories_ = stories_getAllStories_;
Object.defineProperty(stories_getAllStories_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch the [stories](https://core.telegram.org/api/stories#pinned-or-archived-stories) pinned on a peer's profile. */
class stories_getPinnedStories_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5821A5DC;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getPinnedStories";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["offset_id", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.offset_id, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer whose pinned stories should be fetched */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.offset_id = params.offset_id;
        this.limit = params.limit;
    }
}
exports.stories_getPinnedStories_ = stories_getPinnedStories_;
Object.defineProperty(stories_getPinnedStories_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch the [story archive »](https://core.telegram.org/api/stories#pinned-or-archived-stories) of a peer we control. */
class stories_getStoriesArchive_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB4352016;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getStoriesArchive";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["offset_id", "number", "int"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.offset_id, "number", "int"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer whose archived stories should be fetched */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "offset_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.offset_id = params.offset_id;
        this.limit = params.limit;
    }
}
exports.stories_getStoriesArchive_ = stories_getStoriesArchive_;
Object.defineProperty(stories_getStoriesArchive_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain full info about a set of [stories](https://core.telegram.org/api/stories) by their IDs. */
class stories_getStoriesByID_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x5774CA74;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getStoriesByID";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the stories were posted */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Story IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.stories_getStoriesByID_ = stories_getStoriesByID_;
Object.defineProperty(stories_getStoriesByID_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Hide the active stories of a specific peer, preventing them from being displayed on the action bar on the homescreen. */
class stories_toggleAllStoriesHidden_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7C2557C4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.toggleAllStoriesHidden";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["hidden", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.hidden, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to hide or unhide all active stories of the peer */
        Object.defineProperty(this, "hidden", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.hidden = params.hidden;
    }
}
exports.stories_toggleAllStoriesHidden_ = stories_toggleAllStoriesHidden_;
Object.defineProperty(stories_toggleAllStoriesHidden_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Mark all stories up to a certain ID as read, for a given peer; will emit an [updateReadStories](https://core.telegram.org/constructor/updateReadStories) update to all logged-in sessions. */
class stories_readStories_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA556DAC8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.readStories";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["max_id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.max_id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** The peer whose stories should be marked as read. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Mark all stories up to and including this ID as read */
        Object.defineProperty(this, "max_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.max_id = params.max_id;
    }
}
exports.stories_readStories_ = stories_readStories_;
Object.defineProperty(stories_readStories_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Increment the view counter of one or more stories. */
class stories_incrementStoryViews_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB2028AFB;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.incrementStoryViews";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the stories were posted. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of the stories (maximum 200 at a time). */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.stories_incrementStoryViews_ = stories_incrementStoryViews_;
Object.defineProperty(stories_incrementStoryViews_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain the list of users that have viewed a specific [story we posted](https://core.telegram.org/api/stories) */
class stories_getStoryViewsList_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7ED23C57;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getStoryViewsList";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["just_contacts", "true", "flags.0?true"],
            ["reactions_first", "true", "flags.2?true"],
            ["forwards_first", "true", "flags.3?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["q", "string", "flags.1?string"],
            ["id", "number", "int"],
            ["offset", "string", "string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.just_contacts ?? null, "true", "flags.0?true"],
            [this.reactions_first ?? null, "true", "flags.2?true"],
            [this.forwards_first ?? null, "true", "flags.3?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.q ?? null, "string", "flags.1?string"],
            [this.id, "number", "int"],
            [this.offset, "string", "string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to only fetch view reaction/views made by our [contacts](https://core.telegram.org/api/contacts) */
        Object.defineProperty(this, "just_contacts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to return [storyView](https://core.telegram.org/constructor/storyView) info about users that reacted to the story (i.e. if set, the server will first sort results by view date as usual, and then also additionally sort the list by putting [storyView](https://core.telegram.org/constructor/storyView)s with an associated reaction first in the list). Ignored if `forwards_first` is set. */
        Object.defineProperty(this, "reactions_first", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** If set, returns forwards and reposts first, then reactions, then other views; otherwise returns interactions sorted just by interaction date. */
        Object.defineProperty(this, "forwards_first", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Peer where the story was posted */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Search for specific peers */
        Object.defineProperty(this, "q", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Story ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for pagination, obtained from [stories.storyViewsList](https://core.telegram.org/constructor/stories.storyViewsList).`next_offset` */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.just_contacts = params.just_contacts;
        this.reactions_first = params.reactions_first;
        this.forwards_first = params.forwards_first;
        this.peer = params.peer;
        this.q = params.q;
        this.id = params.id;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.stories_getStoryViewsList_ = stories_getStoryViewsList_;
Object.defineProperty(stories_getStoryViewsList_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain info about the view count, forward count, reactions and recent viewers of one or more [stories](https://core.telegram.org/api/stories). */
class stories_getStoriesViews_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x28E16CC8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getStoriesViews";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
        ];
    }
    constructor(params) {
        super();
        /** Peer whose stories should be fetched */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Story IDs */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.stories_getStoriesViews_ = stories_getStoriesViews_;
Object.defineProperty(stories_getStoriesViews_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Generate a [story deep link](https://core.telegram.org/api/links#story-links) for a specific story */
class stories_exportStoryLink_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7B8DEF20;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.exportStoryLink";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Peer where the story was posted */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Story ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
    }
}
exports.stories_exportStoryLink_ = stories_exportStoryLink_;
Object.defineProperty(stories_exportStoryLink_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Report a story. */
class stories_report_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x1923FA8C;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.report";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", ["number"], "Vector<int>"],
            ["reason", _2_types_js_1.types._ReportReason, "ReportReason"],
            ["message", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, ["number"], "Vector<int>"],
            [this.reason, _2_types_js_1.types._ReportReason, "ReportReason"],
            [this.message, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        /** The peer that uploaded the story. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** IDs of the stories to report. */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Why are these storeis being reported. */
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Comment for report moderation */
        Object.defineProperty(this, "message", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.id = params.id;
        this.reason = params.reason;
        this.message = params.message;
    }
}
exports.stories_report_ = stories_report_;
Object.defineProperty(stories_report_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Activates [stories stealth mode](https://core.telegram.org/api/stories#stealth-mode), see [here »](https://core.telegram.org/api/stories#stealth-mode) for more info. */
class stories_activateStealthMode_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x57BBD166;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.activateStealthMode";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["past", "true", "flags.0?true"],
            ["future", "true", "flags.1?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.past ?? null, "true", "flags.0?true"],
            [this.future ?? null, "true", "flags.1?true"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to erase views from any stories opened in the past [`stories_stealth_past_period` seconds »](https://core.telegram.org/api/config#stories-stealth-past-period), as specified by the [client configuration](https://core.telegram.org/api/config#client-configuration). */
        Object.defineProperty(this, "past", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to hide future story views for the next [`stories_stealth_future_period` seconds »](https://core.telegram.org/api/config#stories-stealth-future-period), as specified by the [client configuration](https://core.telegram.org/api/config#client-configuration). */
        Object.defineProperty(this, "future", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.past = params?.past;
        this.future = params?.future;
    }
}
exports.stories_activateStealthMode_ = stories_activateStealthMode_;
Object.defineProperty(stories_activateStealthMode_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** React to a story. */
class stories_sendReaction_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x7FD736B2;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.sendReaction";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["add_to_recent", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["story_id", "number", "int"],
            ["reaction", _2_types_js_1.types._Reaction, "Reaction"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.add_to_recent ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.story_id, "number", "int"],
            [this.reaction, _2_types_js_1.types._Reaction, "Reaction"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to add this reaction to the [recent reactions list »](https://core.telegram.org/api/reactions#recent-reactions). */
        Object.defineProperty(this, "add_to_recent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The peer that sent the story */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** ID of the story to react to */
        Object.defineProperty(this, "story_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Reaction */
        Object.defineProperty(this, "reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.add_to_recent = params.add_to_recent;
        this.peer = params.peer;
        this.story_id = params.story_id;
        this.reaction = params.reaction;
    }
}
exports.stories_sendReaction_ = stories_sendReaction_;
Object.defineProperty(stories_sendReaction_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Fetch the full active [story list](https://core.telegram.org/api/stories#watching-stories) of a specific peer. */
class stories_getPeerStories_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x2C4ADA50;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getPeerStories";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Peer whose stories should be fetched */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.stories_getPeerStories_ = stories_getPeerStories_;
Object.defineProperty(stories_getPeerStories_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain the latest read story ID for all peers when first logging in, returned as a list of [updateReadStories](https://core.telegram.org/constructor/updateReadStories) updates, see [here »](https://core.telegram.org/api/stories#watching-stories) for more info. */
class stories_getAllReadPeerStories_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9B5AE7F9;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getAllReadPeerStories";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.stories_getAllReadPeerStories_ = stories_getAllReadPeerStories_;
Object.defineProperty(stories_getAllReadPeerStories_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the IDs of the maximum read stories for a set of peers. */
class stories_getPeerMaxIDs_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x535983C3;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getPeerMaxIDs";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["id", [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.id, [_2_types_js_1.types._InputPeer], "Vector<InputPeer>"],
        ];
    }
    constructor(params) {
        super();
        /** Peers */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.id = params.id;
    }
}
exports.stories_getPeerMaxIDs_ = stories_getPeerMaxIDs_;
Object.defineProperty(stories_getPeerMaxIDs_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain a list of channels where the user can post [stories](https://core.telegram.org/api/stories) */
class stories_getChatsToSend_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA56A8B60;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getChatsToSend";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.stories_getChatsToSend_ = stories_getChatsToSend_;
Object.defineProperty(stories_getChatsToSend_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Hide the active stories of a user, preventing them from being displayed on the action bar on the homescreen, see [here »](https://core.telegram.org/api/stories#hiding-stories-of-other-users) for more info. */
class stories_togglePeerStoriesHidden_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBD0415C4;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.togglePeerStoriesHidden";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["hidden", "boolean", "Bool"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.hidden, "boolean", "Bool"],
        ];
    }
    constructor(params) {
        super();
        /** Peer whose stories should be (un)hidden. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether to hide or unhide stories. */
        Object.defineProperty(this, "hidden", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.hidden = params.hidden;
    }
}
exports.stories_togglePeerStoriesHidden_ = stories_togglePeerStoriesHidden_;
Object.defineProperty(stories_togglePeerStoriesHidden_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Get the [reaction](https://core.telegram.org/api/reactions) and interaction list of a [story](https://core.telegram.org/api/stories) posted to a channel, along with the sender of each reaction. */
class stories_getStoryReactionsList_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xB9B2881F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "stories.getStoryReactionsList";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["forwards_first", "true", "flags.2?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["id", "number", "int"],
            ["reaction", _2_types_js_1.types._Reaction, "flags.0?Reaction"],
            ["offset", "string", "flags.1?string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.forwards_first ?? null, "true", "flags.2?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.id, "number", "int"],
            [this.reaction ?? null, _2_types_js_1.types._Reaction, "flags.0?Reaction"],
            [this.offset ?? null, "string", "flags.1?string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** If set, returns forwards and reposts first, then reactions, then other views; otherwise returns interactions sorted just by interaction date. */
        Object.defineProperty(this, "forwards_first", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Channel */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** [Story](https://core.telegram.org/api/stories) ID */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Get only reactions of this type */
        Object.defineProperty(this, "reaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for pagination (taken from the `next_offset` field of the returned [stories.StoryReactionsList](https://core.telegram.org/type/stories.StoryReactionsList)); empty in the first request. */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.forwards_first = params.forwards_first;
        this.peer = params.peer;
        this.id = params.id;
        this.reaction = params.reaction;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.stories_getStoryReactionsList_ = stories_getStoryReactionsList_;
Object.defineProperty(stories_getStoryReactionsList_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtains info about the boosts that were applied to a certain channel (admins only) */
class premium_getBoostsList_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x60F67660;
    }
    static get [_1_tl_object_js_1.name]() {
        return "premium.getBoostsList";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["gifts", "true", "flags.0?true"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["offset", "string", "string"],
            ["limit", "number", "int"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.gifts ?? null, "true", "flags.0?true"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.offset, "string", "string"],
            [this.limit, "number", "int"],
        ];
    }
    constructor(params) {
        super();
        /** Whether to return only info about boosts received from [gift codes and giveaways created by the channel »](https://core.telegram.org/api/giveaways) */
        Object.defineProperty(this, "gifts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The channel */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Offset for pagination, obtained from [premium.boostsList](https://core.telegram.org/constructor/premium.boostsList).`next_offset` */
        Object.defineProperty(this, "offset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets) */
        Object.defineProperty(this, "limit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.gifts = params.gifts;
        this.peer = params.peer;
        this.offset = params.offset;
        this.limit = params.limit;
    }
}
exports.premium_getBoostsList_ = premium_getBoostsList_;
Object.defineProperty(premium_getBoostsList_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Obtain which peers are we currently [boosting](https://core.telegram.org/api/boost), and how many [boost slots](https://core.telegram.org/api/boost) we have left. */
class premium_getMyBoosts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0BE77B4A;
    }
    static get [_1_tl_object_js_1.name]() {
        return "premium.getMyBoosts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.premium_getMyBoosts_ = premium_getMyBoosts_;
Object.defineProperty(premium_getMyBoosts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Apply one or more [boosts »](https://core.telegram.org/api/boost) to a peer. */
class premium_applyBoost_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x6B7DA746;
    }
    static get [_1_tl_object_js_1.name]() {
        return "premium.applyBoost";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["slots", ["number"], "flags.0?Vector<int>"],
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.slots ?? null, ["number"], "flags.0?Vector<int>"],
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** Which [boost slots](https://core.telegram.org/api/boost) to assign to this peer. */
        Object.defineProperty(this, "slots", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The peer to boost. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.slots = params.slots;
        this.peer = params.peer;
    }
}
exports.premium_applyBoost_ = premium_applyBoost_;
Object.defineProperty(premium_applyBoost_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Gets the current [number of boosts](https://core.telegram.org/api/boost) of a channel. */
class premium_getBoostsStatus_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x042F1F61;
    }
    static get [_1_tl_object_js_1.name]() {
        return "premium.getBoostsStatus";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
        ];
    }
    constructor(params) {
        super();
        /** The peer. */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
    }
}
exports.premium_getBoostsStatus_ = premium_getBoostsStatus_;
Object.defineProperty(premium_getBoostsStatus_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
/** Returns the lists of boost that were applied to a channel by a specific user (admins only) */
class premium_getUserBoosts_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x39854D1F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "premium.getUserBoosts";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["peer", _2_types_js_1.types._InputPeer, "InputPeer"],
            ["user_id", _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.peer, _2_types_js_1.types._InputPeer, "InputPeer"],
            [this.user_id, _2_types_js_1.types._InputUser, "InputUser"],
        ];
    }
    constructor(params) {
        super();
        /** The channel */
        Object.defineProperty(this, "peer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** The user */
        Object.defineProperty(this, "user_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.peer = params.peer;
        this.user_id = params.user_id;
    }
}
exports.premium_getUserBoosts_ = premium_getUserBoosts_;
Object.defineProperty(premium_getUserBoosts_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_isEligibleToJoin_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x0EDC39D0;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.isEligibleToJoin";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.smsjobs_isEligibleToJoin_ = smsjobs_isEligibleToJoin_;
Object.defineProperty(smsjobs_isEligibleToJoin_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_join_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xA74ECE2D;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.join";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.smsjobs_join_ = smsjobs_join_;
Object.defineProperty(smsjobs_join_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_leave_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x9898AD73;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.leave";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.smsjobs_leave_ = smsjobs_leave_;
Object.defineProperty(smsjobs_leave_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_updateSettings_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x093FA0BF;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.updateSettings";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["allow_international", "true", "flags.0?true"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.allow_international ?? null, "true", "flags.0?true"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "allow_international", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.allow_international = params?.allow_international;
    }
}
exports.smsjobs_updateSettings_ = smsjobs_updateSettings_;
Object.defineProperty(smsjobs_updateSettings_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_getStatus_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x10A698E8;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.getStatus";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [];
    }
    get [_1_tl_object_js_1.params]() {
        return [];
    }
    constructor() {
        super();
    }
}
exports.smsjobs_getStatus_ = smsjobs_getStatus_;
Object.defineProperty(smsjobs_getStatus_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_getSmsJob_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x778D902F;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.getSmsJob";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["job_id", "string", "string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.job_id, "string", "string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "job_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.job_id = params.job_id;
    }
}
exports.smsjobs_getSmsJob_ = smsjobs_getSmsJob_;
Object.defineProperty(smsjobs_getSmsJob_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class smsjobs_finishJob_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0x4F1EBF24;
    }
    static get [_1_tl_object_js_1.name]() {
        return "smsjobs.finishJob";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            ["job_id", "string", "string"],
            ["error", "string", "flags.0?string"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            ["flags", _1_tl_object_js_1.flags, "#"],
            [this.job_id, "string", "string"],
            [this.error ?? null, "string", "flags.0?string"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "job_id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "error", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.job_id = params.job_id;
        this.error = params.error;
    }
}
exports.smsjobs_finishJob_ = smsjobs_finishJob_;
Object.defineProperty(smsjobs_finishJob_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
class fragment_getCollectibleInfo_ extends Function_ {
    get [_1_tl_object_js_1.id]() {
        return 0xBE1E85BA;
    }
    static get [_1_tl_object_js_1.name]() {
        return "fragment.getCollectibleInfo";
    }
    static get [_1_tl_object_js_1.paramDesc]() {
        return [
            ["collectible", _2_types_js_1.types._InputCollectible, "InputCollectible"],
        ];
    }
    get [_1_tl_object_js_1.params]() {
        return [
            [this.collectible, _2_types_js_1.types._InputCollectible, "InputCollectible"],
        ];
    }
    constructor(params) {
        super();
        Object.defineProperty(this, "collectible", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.collectible = params.collectible;
    }
}
exports.fragment_getCollectibleInfo_ = fragment_getCollectibleInfo_;
Object.defineProperty(fragment_getCollectibleInfo_, "__F", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: null
});
exports.functions = {
    Function: Function_,
    req_pq_multi: req_pq_multi_,
    req_DH_params: req_DH_params_,
    set_client_DH_params: set_client_DH_params_,
    rpc_drop_answer: rpc_drop_answer_,
    get_future_salts: get_future_salts_,
    ping: ping_,
    ping_delay_disconnect: ping_delay_disconnect_,
    destroy_session: destroy_session_,
    destroy_auth_key: destroy_auth_key_,
    invokeWithBusinessConnectionPrefix: invokeWithBusinessConnectionPrefix_,
    invokeAfterMsg: invokeAfterMsg_,
    invokeAfterMsgs: invokeAfterMsgs_,
    initConnection: initConnection_,
    invokeWithLayer: invokeWithLayer_,
    invokeWithoutUpdates: invokeWithoutUpdates_,
    invokeWithMessagesRange: invokeWithMessagesRange_,
    invokeWithTakeout: invokeWithTakeout_,
    invokeWithBusinessConnection: invokeWithBusinessConnection_,
    auth: {
        sendCode: auth_sendCode_,
        signUp: auth_signUp_,
        signIn: auth_signIn_,
        logOut: auth_logOut_,
        resetAuthorizations: auth_resetAuthorizations_,
        exportAuthorization: auth_exportAuthorization_,
        importAuthorization: auth_importAuthorization_,
        bindTempAuthKey: auth_bindTempAuthKey_,
        importBotAuthorization: auth_importBotAuthorization_,
        checkPassword: auth_checkPassword_,
        requestPasswordRecovery: auth_requestPasswordRecovery_,
        recoverPassword: auth_recoverPassword_,
        resendCode: auth_resendCode_,
        cancelCode: auth_cancelCode_,
        dropTempAuthKeys: auth_dropTempAuthKeys_,
        exportLoginToken: auth_exportLoginToken_,
        importLoginToken: auth_importLoginToken_,
        acceptLoginToken: auth_acceptLoginToken_,
        checkRecoveryPassword: auth_checkRecoveryPassword_,
        importWebTokenAuthorization: auth_importWebTokenAuthorization_,
        requestFirebaseSms: auth_requestFirebaseSms_,
        resetLoginEmail: auth_resetLoginEmail_,
    },
    account: {
        registerDevice: account_registerDevice_,
        unregisterDevice: account_unregisterDevice_,
        updateNotifySettings: account_updateNotifySettings_,
        getNotifySettings: account_getNotifySettings_,
        resetNotifySettings: account_resetNotifySettings_,
        updateProfile: account_updateProfile_,
        updateStatus: account_updateStatus_,
        getWallPapers: account_getWallPapers_,
        reportPeer: account_reportPeer_,
        checkUsername: account_checkUsername_,
        updateUsername: account_updateUsername_,
        getPrivacy: account_getPrivacy_,
        setPrivacy: account_setPrivacy_,
        deleteAccount: account_deleteAccount_,
        getAccountTTL: account_getAccountTTL_,
        setAccountTTL: account_setAccountTTL_,
        sendChangePhoneCode: account_sendChangePhoneCode_,
        changePhone: account_changePhone_,
        updateDeviceLocked: account_updateDeviceLocked_,
        getAuthorizations: account_getAuthorizations_,
        resetAuthorization: account_resetAuthorization_,
        getPassword: account_getPassword_,
        getPasswordSettings: account_getPasswordSettings_,
        updatePasswordSettings: account_updatePasswordSettings_,
        sendConfirmPhoneCode: account_sendConfirmPhoneCode_,
        confirmPhone: account_confirmPhone_,
        getTmpPassword: account_getTmpPassword_,
        getWebAuthorizations: account_getWebAuthorizations_,
        resetWebAuthorization: account_resetWebAuthorization_,
        resetWebAuthorizations: account_resetWebAuthorizations_,
        getAllSecureValues: account_getAllSecureValues_,
        getSecureValue: account_getSecureValue_,
        saveSecureValue: account_saveSecureValue_,
        deleteSecureValue: account_deleteSecureValue_,
        getAuthorizationForm: account_getAuthorizationForm_,
        acceptAuthorization: account_acceptAuthorization_,
        sendVerifyPhoneCode: account_sendVerifyPhoneCode_,
        verifyPhone: account_verifyPhone_,
        sendVerifyEmailCode: account_sendVerifyEmailCode_,
        verifyEmail: account_verifyEmail_,
        initTakeoutSession: account_initTakeoutSession_,
        finishTakeoutSession: account_finishTakeoutSession_,
        confirmPasswordEmail: account_confirmPasswordEmail_,
        resendPasswordEmail: account_resendPasswordEmail_,
        cancelPasswordEmail: account_cancelPasswordEmail_,
        getContactSignUpNotification: account_getContactSignUpNotification_,
        setContactSignUpNotification: account_setContactSignUpNotification_,
        getNotifyExceptions: account_getNotifyExceptions_,
        getWallPaper: account_getWallPaper_,
        uploadWallPaper: account_uploadWallPaper_,
        saveWallPaper: account_saveWallPaper_,
        installWallPaper: account_installWallPaper_,
        resetWallPapers: account_resetWallPapers_,
        getAutoDownloadSettings: account_getAutoDownloadSettings_,
        saveAutoDownloadSettings: account_saveAutoDownloadSettings_,
        uploadTheme: account_uploadTheme_,
        createTheme: account_createTheme_,
        updateTheme: account_updateTheme_,
        saveTheme: account_saveTheme_,
        installTheme: account_installTheme_,
        getTheme: account_getTheme_,
        getThemes: account_getThemes_,
        setContentSettings: account_setContentSettings_,
        getContentSettings: account_getContentSettings_,
        getMultiWallPapers: account_getMultiWallPapers_,
        getGlobalPrivacySettings: account_getGlobalPrivacySettings_,
        setGlobalPrivacySettings: account_setGlobalPrivacySettings_,
        reportProfilePhoto: account_reportProfilePhoto_,
        resetPassword: account_resetPassword_,
        declinePasswordReset: account_declinePasswordReset_,
        getChatThemes: account_getChatThemes_,
        setAuthorizationTTL: account_setAuthorizationTTL_,
        changeAuthorizationSettings: account_changeAuthorizationSettings_,
        getSavedRingtones: account_getSavedRingtones_,
        saveRingtone: account_saveRingtone_,
        uploadRingtone: account_uploadRingtone_,
        updateEmojiStatus: account_updateEmojiStatus_,
        getDefaultEmojiStatuses: account_getDefaultEmojiStatuses_,
        getRecentEmojiStatuses: account_getRecentEmojiStatuses_,
        clearRecentEmojiStatuses: account_clearRecentEmojiStatuses_,
        reorderUsernames: account_reorderUsernames_,
        toggleUsername: account_toggleUsername_,
        getDefaultProfilePhotoEmojis: account_getDefaultProfilePhotoEmojis_,
        getDefaultGroupPhotoEmojis: account_getDefaultGroupPhotoEmojis_,
        getAutoSaveSettings: account_getAutoSaveSettings_,
        saveAutoSaveSettings: account_saveAutoSaveSettings_,
        deleteAutoSaveExceptions: account_deleteAutoSaveExceptions_,
        invalidateSignInCodes: account_invalidateSignInCodes_,
        updateColor: account_updateColor_,
        getDefaultBackgroundEmojis: account_getDefaultBackgroundEmojis_,
        getChannelDefaultEmojiStatuses: account_getChannelDefaultEmojiStatuses_,
        getChannelRestrictedStatusEmojis: account_getChannelRestrictedStatusEmojis_,
        updateBusinessWorkHours: account_updateBusinessWorkHours_,
        updateBusinessLocation: account_updateBusinessLocation_,
        updateBusinessGreetingMessage: account_updateBusinessGreetingMessage_,
        updateBusinessAwayMessage: account_updateBusinessAwayMessage_,
        updateConnectedBot: account_updateConnectedBot_,
        getConnectedBots: account_getConnectedBots_,
        getBotBusinessConnection: account_getBotBusinessConnection_,
        updateBusinessIntro: account_updateBusinessIntro_,
        toggleConnectedBotPaused: account_toggleConnectedBotPaused_,
        disablePeerConnectedBot: account_disablePeerConnectedBot_,
        updateBirthday: account_updateBirthday_,
        createBusinessChatLink: account_createBusinessChatLink_,
        editBusinessChatLink: account_editBusinessChatLink_,
        deleteBusinessChatLink: account_deleteBusinessChatLink_,
        getBusinessChatLinks: account_getBusinessChatLinks_,
        resolveBusinessChatLink: account_resolveBusinessChatLink_,
        updatePersonalChannel: account_updatePersonalChannel_,
    },
    users: {
        getUsers: users_getUsers_,
        getFullUser: users_getFullUser_,
        setSecureValueErrors: users_setSecureValueErrors_,
        getIsPremiumRequiredToContact: users_getIsPremiumRequiredToContact_,
    },
    contacts: {
        getContactIDs: contacts_getContactIDs_,
        getStatuses: contacts_getStatuses_,
        getContacts: contacts_getContacts_,
        importContacts: contacts_importContacts_,
        deleteContacts: contacts_deleteContacts_,
        deleteByPhones: contacts_deleteByPhones_,
        block: contacts_block_,
        unblock: contacts_unblock_,
        getBlocked: contacts_getBlocked_,
        search: contacts_search_,
        resolveUsername: contacts_resolveUsername_,
        getTopPeers: contacts_getTopPeers_,
        resetTopPeerRating: contacts_resetTopPeerRating_,
        resetSaved: contacts_resetSaved_,
        getSaved: contacts_getSaved_,
        toggleTopPeers: contacts_toggleTopPeers_,
        addContact: contacts_addContact_,
        acceptContact: contacts_acceptContact_,
        getLocated: contacts_getLocated_,
        blockFromReplies: contacts_blockFromReplies_,
        resolvePhone: contacts_resolvePhone_,
        exportContactToken: contacts_exportContactToken_,
        importContactToken: contacts_importContactToken_,
        editCloseFriends: contacts_editCloseFriends_,
        setBlocked: contacts_setBlocked_,
        getBirthdays: contacts_getBirthdays_,
    },
    messages: {
        getMessages: messages_getMessages_,
        getDialogs: messages_getDialogs_,
        getHistory: messages_getHistory_,
        search: messages_search_,
        readHistory: messages_readHistory_,
        deleteHistory: messages_deleteHistory_,
        deleteMessages: messages_deleteMessages_,
        receivedMessages: messages_receivedMessages_,
        setTyping: messages_setTyping_,
        sendMessage: messages_sendMessage_,
        sendMedia: messages_sendMedia_,
        forwardMessages: messages_forwardMessages_,
        reportSpam: messages_reportSpam_,
        getPeerSettings: messages_getPeerSettings_,
        report: messages_report_,
        getChats: messages_getChats_,
        getFullChat: messages_getFullChat_,
        editChatTitle: messages_editChatTitle_,
        editChatPhoto: messages_editChatPhoto_,
        addChatUser: messages_addChatUser_,
        deleteChatUser: messages_deleteChatUser_,
        createChat: messages_createChat_,
        getDhConfig: messages_getDhConfig_,
        requestEncryption: messages_requestEncryption_,
        acceptEncryption: messages_acceptEncryption_,
        discardEncryption: messages_discardEncryption_,
        setEncryptedTyping: messages_setEncryptedTyping_,
        readEncryptedHistory: messages_readEncryptedHistory_,
        sendEncrypted: messages_sendEncrypted_,
        sendEncryptedFile: messages_sendEncryptedFile_,
        sendEncryptedService: messages_sendEncryptedService_,
        receivedQueue: messages_receivedQueue_,
        reportEncryptedSpam: messages_reportEncryptedSpam_,
        readMessageContents: messages_readMessageContents_,
        getStickers: messages_getStickers_,
        getAllStickers: messages_getAllStickers_,
        getWebPagePreview: messages_getWebPagePreview_,
        exportChatInvite: messages_exportChatInvite_,
        checkChatInvite: messages_checkChatInvite_,
        importChatInvite: messages_importChatInvite_,
        getStickerSet: messages_getStickerSet_,
        installStickerSet: messages_installStickerSet_,
        uninstallStickerSet: messages_uninstallStickerSet_,
        startBot: messages_startBot_,
        getMessagesViews: messages_getMessagesViews_,
        editChatAdmin: messages_editChatAdmin_,
        migrateChat: messages_migrateChat_,
        searchGlobal: messages_searchGlobal_,
        reorderStickerSets: messages_reorderStickerSets_,
        getDocumentByHash: messages_getDocumentByHash_,
        getSavedGifs: messages_getSavedGifs_,
        saveGif: messages_saveGif_,
        getInlineBotResults: messages_getInlineBotResults_,
        setInlineBotResults: messages_setInlineBotResults_,
        sendInlineBotResult: messages_sendInlineBotResult_,
        getMessageEditData: messages_getMessageEditData_,
        editMessage: messages_editMessage_,
        editInlineBotMessage: messages_editInlineBotMessage_,
        getBotCallbackAnswer: messages_getBotCallbackAnswer_,
        setBotCallbackAnswer: messages_setBotCallbackAnswer_,
        getPeerDialogs: messages_getPeerDialogs_,
        saveDraft: messages_saveDraft_,
        getAllDrafts: messages_getAllDrafts_,
        getFeaturedStickers: messages_getFeaturedStickers_,
        readFeaturedStickers: messages_readFeaturedStickers_,
        getRecentStickers: messages_getRecentStickers_,
        saveRecentSticker: messages_saveRecentSticker_,
        clearRecentStickers: messages_clearRecentStickers_,
        getArchivedStickers: messages_getArchivedStickers_,
        getMaskStickers: messages_getMaskStickers_,
        getAttachedStickers: messages_getAttachedStickers_,
        setGameScore: messages_setGameScore_,
        setInlineGameScore: messages_setInlineGameScore_,
        getGameHighScores: messages_getGameHighScores_,
        getInlineGameHighScores: messages_getInlineGameHighScores_,
        getCommonChats: messages_getCommonChats_,
        getWebPage: messages_getWebPage_,
        toggleDialogPin: messages_toggleDialogPin_,
        reorderPinnedDialogs: messages_reorderPinnedDialogs_,
        getPinnedDialogs: messages_getPinnedDialogs_,
        setBotShippingResults: messages_setBotShippingResults_,
        setBotPrecheckoutResults: messages_setBotPrecheckoutResults_,
        uploadMedia: messages_uploadMedia_,
        sendScreenshotNotification: messages_sendScreenshotNotification_,
        getFavedStickers: messages_getFavedStickers_,
        faveSticker: messages_faveSticker_,
        getUnreadMentions: messages_getUnreadMentions_,
        readMentions: messages_readMentions_,
        getRecentLocations: messages_getRecentLocations_,
        sendMultiMedia: messages_sendMultiMedia_,
        uploadEncryptedFile: messages_uploadEncryptedFile_,
        searchStickerSets: messages_searchStickerSets_,
        getSplitRanges: messages_getSplitRanges_,
        markDialogUnread: messages_markDialogUnread_,
        getDialogUnreadMarks: messages_getDialogUnreadMarks_,
        clearAllDrafts: messages_clearAllDrafts_,
        updatePinnedMessage: messages_updatePinnedMessage_,
        sendVote: messages_sendVote_,
        getPollResults: messages_getPollResults_,
        getOnlines: messages_getOnlines_,
        editChatAbout: messages_editChatAbout_,
        editChatDefaultBannedRights: messages_editChatDefaultBannedRights_,
        getEmojiKeywords: messages_getEmojiKeywords_,
        getEmojiKeywordsDifference: messages_getEmojiKeywordsDifference_,
        getEmojiKeywordsLanguages: messages_getEmojiKeywordsLanguages_,
        getEmojiURL: messages_getEmojiURL_,
        getSearchCounters: messages_getSearchCounters_,
        requestUrlAuth: messages_requestUrlAuth_,
        acceptUrlAuth: messages_acceptUrlAuth_,
        hidePeerSettingsBar: messages_hidePeerSettingsBar_,
        getScheduledHistory: messages_getScheduledHistory_,
        getScheduledMessages: messages_getScheduledMessages_,
        sendScheduledMessages: messages_sendScheduledMessages_,
        deleteScheduledMessages: messages_deleteScheduledMessages_,
        getPollVotes: messages_getPollVotes_,
        toggleStickerSets: messages_toggleStickerSets_,
        getDialogFilters: messages_getDialogFilters_,
        getSuggestedDialogFilters: messages_getSuggestedDialogFilters_,
        updateDialogFilter: messages_updateDialogFilter_,
        updateDialogFiltersOrder: messages_updateDialogFiltersOrder_,
        getOldFeaturedStickers: messages_getOldFeaturedStickers_,
        getReplies: messages_getReplies_,
        getDiscussionMessage: messages_getDiscussionMessage_,
        readDiscussion: messages_readDiscussion_,
        unpinAllMessages: messages_unpinAllMessages_,
        deleteChat: messages_deleteChat_,
        deletePhoneCallHistory: messages_deletePhoneCallHistory_,
        checkHistoryImport: messages_checkHistoryImport_,
        initHistoryImport: messages_initHistoryImport_,
        uploadImportedMedia: messages_uploadImportedMedia_,
        startHistoryImport: messages_startHistoryImport_,
        getExportedChatInvites: messages_getExportedChatInvites_,
        getExportedChatInvite: messages_getExportedChatInvite_,
        editExportedChatInvite: messages_editExportedChatInvite_,
        deleteRevokedExportedChatInvites: messages_deleteRevokedExportedChatInvites_,
        deleteExportedChatInvite: messages_deleteExportedChatInvite_,
        getAdminsWithInvites: messages_getAdminsWithInvites_,
        getChatInviteImporters: messages_getChatInviteImporters_,
        setHistoryTTL: messages_setHistoryTTL_,
        checkHistoryImportPeer: messages_checkHistoryImportPeer_,
        setChatTheme: messages_setChatTheme_,
        getMessageReadParticipants: messages_getMessageReadParticipants_,
        getSearchResultsCalendar: messages_getSearchResultsCalendar_,
        getSearchResultsPositions: messages_getSearchResultsPositions_,
        hideChatJoinRequest: messages_hideChatJoinRequest_,
        hideAllChatJoinRequests: messages_hideAllChatJoinRequests_,
        toggleNoForwards: messages_toggleNoForwards_,
        saveDefaultSendAs: messages_saveDefaultSendAs_,
        sendReaction: messages_sendReaction_,
        getMessagesReactions: messages_getMessagesReactions_,
        getMessageReactionsList: messages_getMessageReactionsList_,
        setChatAvailableReactions: messages_setChatAvailableReactions_,
        getAvailableReactions: messages_getAvailableReactions_,
        setDefaultReaction: messages_setDefaultReaction_,
        translateText: messages_translateText_,
        getUnreadReactions: messages_getUnreadReactions_,
        readReactions: messages_readReactions_,
        searchSentMedia: messages_searchSentMedia_,
        getAttachMenuBots: messages_getAttachMenuBots_,
        getAttachMenuBot: messages_getAttachMenuBot_,
        toggleBotInAttachMenu: messages_toggleBotInAttachMenu_,
        requestWebView: messages_requestWebView_,
        prolongWebView: messages_prolongWebView_,
        requestSimpleWebView: messages_requestSimpleWebView_,
        sendWebViewResultMessage: messages_sendWebViewResultMessage_,
        sendWebViewData: messages_sendWebViewData_,
        transcribeAudio: messages_transcribeAudio_,
        rateTranscribedAudio: messages_rateTranscribedAudio_,
        getCustomEmojiDocuments: messages_getCustomEmojiDocuments_,
        getEmojiStickers: messages_getEmojiStickers_,
        getFeaturedEmojiStickers: messages_getFeaturedEmojiStickers_,
        reportReaction: messages_reportReaction_,
        getTopReactions: messages_getTopReactions_,
        getRecentReactions: messages_getRecentReactions_,
        clearRecentReactions: messages_clearRecentReactions_,
        getExtendedMedia: messages_getExtendedMedia_,
        setDefaultHistoryTTL: messages_setDefaultHistoryTTL_,
        getDefaultHistoryTTL: messages_getDefaultHistoryTTL_,
        sendBotRequestedPeer: messages_sendBotRequestedPeer_,
        getEmojiGroups: messages_getEmojiGroups_,
        getEmojiStatusGroups: messages_getEmojiStatusGroups_,
        getEmojiProfilePhotoGroups: messages_getEmojiProfilePhotoGroups_,
        searchCustomEmoji: messages_searchCustomEmoji_,
        togglePeerTranslations: messages_togglePeerTranslations_,
        getBotApp: messages_getBotApp_,
        requestAppWebView: messages_requestAppWebView_,
        setChatWallPaper: messages_setChatWallPaper_,
        searchEmojiStickerSets: messages_searchEmojiStickerSets_,
        getSavedDialogs: messages_getSavedDialogs_,
        getSavedHistory: messages_getSavedHistory_,
        deleteSavedHistory: messages_deleteSavedHistory_,
        getPinnedSavedDialogs: messages_getPinnedSavedDialogs_,
        toggleSavedDialogPin: messages_toggleSavedDialogPin_,
        reorderPinnedSavedDialogs: messages_reorderPinnedSavedDialogs_,
        getSavedReactionTags: messages_getSavedReactionTags_,
        updateSavedReactionTag: messages_updateSavedReactionTag_,
        getDefaultTagReactions: messages_getDefaultTagReactions_,
        getOutboxReadDate: messages_getOutboxReadDate_,
        getQuickReplies: messages_getQuickReplies_,
        reorderQuickReplies: messages_reorderQuickReplies_,
        checkQuickReplyShortcut: messages_checkQuickReplyShortcut_,
        editQuickReplyShortcut: messages_editQuickReplyShortcut_,
        deleteQuickReplyShortcut: messages_deleteQuickReplyShortcut_,
        getQuickReplyMessages: messages_getQuickReplyMessages_,
        sendQuickReplyMessages: messages_sendQuickReplyMessages_,
        deleteQuickReplyMessages: messages_deleteQuickReplyMessages_,
        toggleDialogFilterTags: messages_toggleDialogFilterTags_,
        getMyStickers: messages_getMyStickers_,
    },
    updates: {
        getState: updates_getState_,
        getDifference: updates_getDifference_,
        getChannelDifference: updates_getChannelDifference_,
    },
    photos: {
        updateProfilePhoto: photos_updateProfilePhoto_,
        uploadProfilePhoto: photos_uploadProfilePhoto_,
        deletePhotos: photos_deletePhotos_,
        getUserPhotos: photos_getUserPhotos_,
        uploadContactProfilePhoto: photos_uploadContactProfilePhoto_,
    },
    upload: {
        saveFilePart: upload_saveFilePart_,
        getFile: upload_getFile_,
        saveBigFilePart: upload_saveBigFilePart_,
        getWebFile: upload_getWebFile_,
        getCdnFile: upload_getCdnFile_,
        reuploadCdnFile: upload_reuploadCdnFile_,
        getCdnFileHashes: upload_getCdnFileHashes_,
        getFileHashes: upload_getFileHashes_,
    },
    help: {
        getConfig: help_getConfig_,
        getNearestDc: help_getNearestDc_,
        getAppUpdate: help_getAppUpdate_,
        getInviteText: help_getInviteText_,
        getSupport: help_getSupport_,
        setBotUpdatesStatus: help_setBotUpdatesStatus_,
        getCdnConfig: help_getCdnConfig_,
        getRecentMeUrls: help_getRecentMeUrls_,
        getTermsOfServiceUpdate: help_getTermsOfServiceUpdate_,
        acceptTermsOfService: help_acceptTermsOfService_,
        getDeepLinkInfo: help_getDeepLinkInfo_,
        getAppConfig: help_getAppConfig_,
        saveAppLog: help_saveAppLog_,
        getPassportConfig: help_getPassportConfig_,
        getSupportName: help_getSupportName_,
        getUserInfo: help_getUserInfo_,
        editUserInfo: help_editUserInfo_,
        getPromoData: help_getPromoData_,
        hidePromoData: help_hidePromoData_,
        dismissSuggestion: help_dismissSuggestion_,
        getCountriesList: help_getCountriesList_,
        getPremiumPromo: help_getPremiumPromo_,
        getPeerColors: help_getPeerColors_,
        getPeerProfileColors: help_getPeerProfileColors_,
        getTimezonesList: help_getTimezonesList_,
    },
    channels: {
        readHistory: channels_readHistory_,
        deleteMessages: channels_deleteMessages_,
        reportSpam: channels_reportSpam_,
        getMessages: channels_getMessages_,
        getParticipants: channels_getParticipants_,
        getParticipant: channels_getParticipant_,
        getChannels: channels_getChannels_,
        getFullChannel: channels_getFullChannel_,
        createChannel: channels_createChannel_,
        editAdmin: channels_editAdmin_,
        editTitle: channels_editTitle_,
        editPhoto: channels_editPhoto_,
        checkUsername: channels_checkUsername_,
        updateUsername: channels_updateUsername_,
        joinChannel: channels_joinChannel_,
        leaveChannel: channels_leaveChannel_,
        inviteToChannel: channels_inviteToChannel_,
        deleteChannel: channels_deleteChannel_,
        exportMessageLink: channels_exportMessageLink_,
        toggleSignatures: channels_toggleSignatures_,
        getAdminedPublicChannels: channels_getAdminedPublicChannels_,
        editBanned: channels_editBanned_,
        getAdminLog: channels_getAdminLog_,
        setStickers: channels_setStickers_,
        readMessageContents: channels_readMessageContents_,
        deleteHistory: channels_deleteHistory_,
        togglePreHistoryHidden: channels_togglePreHistoryHidden_,
        getLeftChannels: channels_getLeftChannels_,
        getGroupsForDiscussion: channels_getGroupsForDiscussion_,
        setDiscussionGroup: channels_setDiscussionGroup_,
        editCreator: channels_editCreator_,
        editLocation: channels_editLocation_,
        toggleSlowMode: channels_toggleSlowMode_,
        getInactiveChannels: channels_getInactiveChannels_,
        convertToGigagroup: channels_convertToGigagroup_,
        viewSponsoredMessage: channels_viewSponsoredMessage_,
        getSponsoredMessages: channels_getSponsoredMessages_,
        getSendAs: channels_getSendAs_,
        deleteParticipantHistory: channels_deleteParticipantHistory_,
        toggleJoinToSend: channels_toggleJoinToSend_,
        toggleJoinRequest: channels_toggleJoinRequest_,
        reorderUsernames: channels_reorderUsernames_,
        toggleUsername: channels_toggleUsername_,
        deactivateAllUsernames: channels_deactivateAllUsernames_,
        toggleForum: channels_toggleForum_,
        createForumTopic: channels_createForumTopic_,
        getForumTopics: channels_getForumTopics_,
        getForumTopicsByID: channels_getForumTopicsByID_,
        editForumTopic: channels_editForumTopic_,
        updatePinnedForumTopic: channels_updatePinnedForumTopic_,
        deleteTopicHistory: channels_deleteTopicHistory_,
        reorderPinnedForumTopics: channels_reorderPinnedForumTopics_,
        toggleAntiSpam: channels_toggleAntiSpam_,
        reportAntiSpamFalsePositive: channels_reportAntiSpamFalsePositive_,
        toggleParticipantsHidden: channels_toggleParticipantsHidden_,
        clickSponsoredMessage: channels_clickSponsoredMessage_,
        updateColor: channels_updateColor_,
        toggleViewForumAsMessages: channels_toggleViewForumAsMessages_,
        getChannelRecommendations: channels_getChannelRecommendations_,
        updateEmojiStatus: channels_updateEmojiStatus_,
        setBoostsToUnblockRestrictions: channels_setBoostsToUnblockRestrictions_,
        setEmojiStickers: channels_setEmojiStickers_,
        reportSponsoredMessage: channels_reportSponsoredMessage_,
        restrictSponsoredMessages: channels_restrictSponsoredMessages_,
    },
    bots: {
        sendCustomRequest: bots_sendCustomRequest_,
        answerWebhookJSONQuery: bots_answerWebhookJSONQuery_,
        setBotCommands: bots_setBotCommands_,
        resetBotCommands: bots_resetBotCommands_,
        getBotCommands: bots_getBotCommands_,
        setBotMenuButton: bots_setBotMenuButton_,
        getBotMenuButton: bots_getBotMenuButton_,
        setBotBroadcastDefaultAdminRights: bots_setBotBroadcastDefaultAdminRights_,
        setBotGroupDefaultAdminRights: bots_setBotGroupDefaultAdminRights_,
        setBotInfo: bots_setBotInfo_,
        getBotInfo: bots_getBotInfo_,
        reorderUsernames: bots_reorderUsernames_,
        toggleUsername: bots_toggleUsername_,
        canSendMessage: bots_canSendMessage_,
        allowSendMessage: bots_allowSendMessage_,
        invokeWebViewCustomMethod: bots_invokeWebViewCustomMethod_,
    },
    payments: {
        getPaymentForm: payments_getPaymentForm_,
        getPaymentReceipt: payments_getPaymentReceipt_,
        validateRequestedInfo: payments_validateRequestedInfo_,
        sendPaymentForm: payments_sendPaymentForm_,
        getSavedInfo: payments_getSavedInfo_,
        clearSavedInfo: payments_clearSavedInfo_,
        getBankCardData: payments_getBankCardData_,
        exportInvoice: payments_exportInvoice_,
        assignAppStoreTransaction: payments_assignAppStoreTransaction_,
        assignPlayMarketTransaction: payments_assignPlayMarketTransaction_,
        canPurchasePremium: payments_canPurchasePremium_,
        getPremiumGiftCodeOptions: payments_getPremiumGiftCodeOptions_,
        checkGiftCode: payments_checkGiftCode_,
        applyGiftCode: payments_applyGiftCode_,
        getGiveawayInfo: payments_getGiveawayInfo_,
        launchPrepaidGiveaway: payments_launchPrepaidGiveaway_,
    },
    stickers: {
        createStickerSet: stickers_createStickerSet_,
        removeStickerFromSet: stickers_removeStickerFromSet_,
        changeStickerPosition: stickers_changeStickerPosition_,
        addStickerToSet: stickers_addStickerToSet_,
        setStickerSetThumb: stickers_setStickerSetThumb_,
        checkShortName: stickers_checkShortName_,
        suggestShortName: stickers_suggestShortName_,
        changeSticker: stickers_changeSticker_,
        renameStickerSet: stickers_renameStickerSet_,
        deleteStickerSet: stickers_deleteStickerSet_,
        replaceSticker: stickers_replaceSticker_,
    },
    phone: {
        getCallConfig: phone_getCallConfig_,
        requestCall: phone_requestCall_,
        acceptCall: phone_acceptCall_,
        confirmCall: phone_confirmCall_,
        receivedCall: phone_receivedCall_,
        discardCall: phone_discardCall_,
        setCallRating: phone_setCallRating_,
        saveCallDebug: phone_saveCallDebug_,
        sendSignalingData: phone_sendSignalingData_,
        createGroupCall: phone_createGroupCall_,
        joinGroupCall: phone_joinGroupCall_,
        leaveGroupCall: phone_leaveGroupCall_,
        inviteToGroupCall: phone_inviteToGroupCall_,
        discardGroupCall: phone_discardGroupCall_,
        toggleGroupCallSettings: phone_toggleGroupCallSettings_,
        getGroupCall: phone_getGroupCall_,
        getGroupParticipants: phone_getGroupParticipants_,
        checkGroupCall: phone_checkGroupCall_,
        toggleGroupCallRecord: phone_toggleGroupCallRecord_,
        editGroupCallParticipant: phone_editGroupCallParticipant_,
        editGroupCallTitle: phone_editGroupCallTitle_,
        getGroupCallJoinAs: phone_getGroupCallJoinAs_,
        exportGroupCallInvite: phone_exportGroupCallInvite_,
        toggleGroupCallStartSubscription: phone_toggleGroupCallStartSubscription_,
        startScheduledGroupCall: phone_startScheduledGroupCall_,
        saveDefaultGroupCallJoinAs: phone_saveDefaultGroupCallJoinAs_,
        joinGroupCallPresentation: phone_joinGroupCallPresentation_,
        leaveGroupCallPresentation: phone_leaveGroupCallPresentation_,
        getGroupCallStreamChannels: phone_getGroupCallStreamChannels_,
        getGroupCallStreamRtmpUrl: phone_getGroupCallStreamRtmpUrl_,
        saveCallLog: phone_saveCallLog_,
    },
    langpack: {
        getLangPack: langpack_getLangPack_,
        getStrings: langpack_getStrings_,
        getDifference: langpack_getDifference_,
        getLanguages: langpack_getLanguages_,
        getLanguage: langpack_getLanguage_,
    },
    folders: {
        editPeerFolders: folders_editPeerFolders_,
    },
    stats: {
        getBroadcastStats: stats_getBroadcastStats_,
        loadAsyncGraph: stats_loadAsyncGraph_,
        getMegagroupStats: stats_getMegagroupStats_,
        getMessagePublicForwards: stats_getMessagePublicForwards_,
        getMessageStats: stats_getMessageStats_,
        getStoryStats: stats_getStoryStats_,
        getStoryPublicForwards: stats_getStoryPublicForwards_,
        getBroadcastRevenueStats: stats_getBroadcastRevenueStats_,
        getBroadcastRevenueWithdrawalUrl: stats_getBroadcastRevenueWithdrawalUrl_,
        getBroadcastRevenueTransactions: stats_getBroadcastRevenueTransactions_,
    },
    chatlists: {
        exportChatlistInvite: chatlists_exportChatlistInvite_,
        deleteExportedInvite: chatlists_deleteExportedInvite_,
        editExportedInvite: chatlists_editExportedInvite_,
        getExportedInvites: chatlists_getExportedInvites_,
        checkChatlistInvite: chatlists_checkChatlistInvite_,
        joinChatlistInvite: chatlists_joinChatlistInvite_,
        getChatlistUpdates: chatlists_getChatlistUpdates_,
        joinChatlistUpdates: chatlists_joinChatlistUpdates_,
        hideChatlistUpdates: chatlists_hideChatlistUpdates_,
        getLeaveChatlistSuggestions: chatlists_getLeaveChatlistSuggestions_,
        leaveChatlist: chatlists_leaveChatlist_,
    },
    stories: {
        canSendStory: stories_canSendStory_,
        sendStory: stories_sendStory_,
        editStory: stories_editStory_,
        deleteStories: stories_deleteStories_,
        togglePinned: stories_togglePinned_,
        getAllStories: stories_getAllStories_,
        getPinnedStories: stories_getPinnedStories_,
        getStoriesArchive: stories_getStoriesArchive_,
        getStoriesByID: stories_getStoriesByID_,
        toggleAllStoriesHidden: stories_toggleAllStoriesHidden_,
        readStories: stories_readStories_,
        incrementStoryViews: stories_incrementStoryViews_,
        getStoryViewsList: stories_getStoryViewsList_,
        getStoriesViews: stories_getStoriesViews_,
        exportStoryLink: stories_exportStoryLink_,
        report: stories_report_,
        activateStealthMode: stories_activateStealthMode_,
        sendReaction: stories_sendReaction_,
        getPeerStories: stories_getPeerStories_,
        getAllReadPeerStories: stories_getAllReadPeerStories_,
        getPeerMaxIDs: stories_getPeerMaxIDs_,
        getChatsToSend: stories_getChatsToSend_,
        togglePeerStoriesHidden: stories_togglePeerStoriesHidden_,
        getStoryReactionsList: stories_getStoryReactionsList_,
    },
    premium: {
        getBoostsList: premium_getBoostsList_,
        getMyBoosts: premium_getMyBoosts_,
        applyBoost: premium_applyBoost_,
        getBoostsStatus: premium_getBoostsStatus_,
        getUserBoosts: premium_getUserBoosts_,
    },
    smsjobs: {
        isEligibleToJoin: smsjobs_isEligibleToJoin_,
        join: smsjobs_join_,
        leave: smsjobs_leave_,
        updateSettings: smsjobs_updateSettings_,
        getStatus: smsjobs_getStatus_,
        getSmsJob: smsjobs_getSmsJob_,
        finishJob: smsjobs_finishJob_,
    },
    fragment: {
        getCollectibleInfo: fragment_getCollectibleInfo_,
    },
};
